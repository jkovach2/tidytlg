[{"path":"/articles/freq.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Frequency Analysis","text":"freq nested_freq functions called produce categorical-type summary statistics (.e. counts percentages) character variables. functions can used create different types categorical summary statistics tables.","code":""},{"path":"/articles/freq.html","id":"counts-statlist-statlistn","dir":"Articles","previous_headings":"Introduction","what":"Counts: statlist = statlist(“n”)","title":"Frequency Analysis","text":"many uses freq, first one ’ll show create first row analysis set summary population counts output. following table subset argument used create one row summary row heading specified rowtext argument.","code":"tbl <- cdisc_adsl %>%   freq(colvar = \"TRT01PN\",        rowvar = \"ITTFL\",        statlist = statlist(\"n\"),        subset = ITTFL == \"Y\",        rowtext = \"Analysis set: ITT\")  knitr::kable(tbl)"},{"path":"/articles/freq.html","id":"big-n-row-counts-and-percentages-statlist-statlistcn-n-x-x","dir":"Articles","previous_headings":"Introduction","what":"Big N row, counts and percentages: statlist = statlist(c(“N”, “n (x.x%)”))","title":"Frequency Analysis","text":"typical call using freq function create tbl chunk : row big N indicating number subjects values character variable treatment group summary counts percentages category character variable age groups, gender, race, ethnicity, etc.","code":"tbl <- cdisc_adsl %>%   freq(colvar = \"TRT01PN\",        rowvar = \"SEX\",        statlist = statlist(c(\"N\",\"n (x.x%)\")),        row_header = \"Sex\")  knitr::kable(tbl)"},{"path":"/articles/freq.html","id":"using-factor-to-order-category-summary","dir":"Articles","previous_headings":"Introduction","what":"Using factor to order category summary","title":"Frequency Analysis","text":"table, F appears first M shown. SEX character variable alphabetical sorting applied summarized results. can convert SEX factor variable customized order labels enabling user-defined sorting.","code":"tbl <- cdisc_adsl %>%   mutate(SEX = factor(SEX, levels = c(\"M\", \"F\"), labels = c(\"Male\", \"Female\"))) %>%   freq(colvar = \"TRT01PN\",        rowvar = \"SEX\",        statlist = statlist(c(\"N\",\"n (x.x%)\")),        row_header = \"Sex\")  knitr::kable(tbl)"},{"path":"/articles/freq.html","id":"counts-denominators-and-percentages-statlist-statlistcnn-x-x","dir":"Articles","previous_headings":"Introduction","what":"Counts, denominators, and percentages: statlist = statlist(c(“n/N (x.x%)”))","title":"Frequency Analysis","text":"outputs, table mock-may require showing percentage denominator, can done specifying statlist = statlist(\"n/N (x.x%)\").","code":"tbl <- cdisc_adsl %>%   mutate(SEX = factor(SEX, levels = c(\"M\", \"F\"), labels = c(\"Male\", \"Female\"))) %>%   freq(colvar = \"TRT01PN\",        rowvar = \"SEX\",        statlist = statlist(\"n/N (x.x%)\"),        row_header = \"Sex\")  knitr::kable(tbl)"},{"path":"/articles/freq.html","id":"by-processing-statlist-statlistcn-n-x-x","dir":"Articles","previous_headings":"Introduction","what":"By processing: statlist = statlist(c(“N”, “n (x.x%)”))","title":"Frequency Analysis","text":"-processing splits summary statistics another character variable can specified argument rowbyvar tablebyvar. example shown , age group categories summarized SEX variable. scenario, denominator also split SEX addition TRT01PN, can done statlist(c(\"N\",\"n (x.x%)\"), denoms_by = c(\"SEX\", \"TRT01PN\")). default, denominators calculated using colvar, tablebyvar, rowbyvar. freq function call also produce results without specifying denoms_by argument inside statlist function.","code":"tbl <- cdisc_adsl %>%   mutate(SEX = factor(SEX, levels = c(\"M\", \"F\"), labels = c(\"Male\", \"Female\"))) %>%   freq(colvar = \"TRT01PN\",        rowbyvar = \"SEX\",        rowvar = \"AGEGR1\",        statlist = statlist(c(\"N\",\"n (x.x%)\"), denoms_by = c(\"SEX\", \"TRT01PN\")),        row_header = \"Age group\")  knitr::kable(tbl)"},{"path":"/articles/freq.html","id":"padding-factor-levels-on-and-off","dir":"Articles","previous_headings":"Introduction","what":"Padding factor levels on and off","title":"Frequency Analysis","text":"using rowbyvar create -processing summaries, levels rowvar may zero records shown example . remove zero record rows create data driven summary, users can specify pad = FALSE freq function.","code":"tbl <- cdisc_adsl %>%   freq(colvar = \"TRT01PN\",        rowbyvar = \"ETHNIC\",        rowvar = \"RACE\",        statlist = statlist(c(\"N\",\"n (x.x%)\")),        row_header = \"Race\")  knitr::kable(tbl) tbl <- cdisc_adsl %>%   freq(colvar = \"TRT01PN\",        rowbyvar = \"ETHNIC\",        rowvar = \"RACE\",        statlist = statlist(c(\"N\",\"n (x.x%)\")),        row_header = \"Race\",        pad = FALSE)  knitr::kable(tbl)"},{"path":"/articles/freq.html","id":"denominator-dataframe","dir":"Articles","previous_headings":"Introduction","what":"Denominator Dataframe","title":"Frequency Analysis","text":"using frequency analysis need always use main dataframe calculate denominators. example, adverse event table may use ADSL denominator dataframe instead ADAE even though counts coming ADAE. example shows table counting AEDECOD using ADSL calculate denominators.","code":"adae <- cdisc_adae %>%   rename(TRT01AN = TRTAN)  tbl <- adae %>%   freq(denom_df = cdisc_adsl,        colvar = \"TRT01AN\",        rowvar = \"AEDECOD\",        descending_by = \"81\")  knitr::kable(head(tbl, 10))"},{"path":"/articles/freq.html","id":"by-processing-and-denominators-statlist-statlistcn-x-x-denoms_by-trt01an","dir":"Articles","previous_headings":"Introduction","what":"By processing and denominators: statlist = statlist(c(“n (x.x)”), denoms_by = “TRT01AN”)","title":"Frequency Analysis","text":"using variables tablebyvar rowbyvar denominators may need changed work correctly. also works conjunction denom_df argument. default, denominators calculated using colvar, tablebyvar, rowbyvar. works well using dataframe counts denominators always case. following example similar table using AESEV rowbyvar. example don’t want denoms AESEV since variable ADSL, denominators coming . change variables denoms calculated use denoms_by argument statlist function. can see using colvar TRT01PN denoms_by.","code":"tbl <- adae %>%   freq(denom_df = cdisc_adsl,        colvar = \"TRT01AN\",        rowvar = \"AEDECOD\",        rowbyvar = \"AESEV\",        statlist = statlist(c(\"n (x.x)\"), denoms_by = \"TRT01AN\"))  knitr::kable(head(tbl, 10))"},{"path":"/articles/freq.html","id":"available-statlist-formats-for-frequency-summary","dir":"Articles","previous_headings":"Introduction","what":"Available statlist formats for frequency summary","title":"Frequency Analysis","text":"shown common use cases calling different variants statlist frequency summaries. table describes available options specified statlist freq. learn using statlist function freq analysis, please type ?statlist console.","code":""},{"path":"/articles/freq.html","id":"nested-frequency-analysis","dir":"Articles","previous_headings":"","what":"Nested Frequency Analysis","title":"Frequency Analysis","text":"major portion Adverse Events (AE) summary tables require summarizing number subjects treatment-emergent adverse events system organ class preferred term, nested structure needs additional processing top freq function. Therefore, developed nested_freq function address nested structure (counts within counts): rowvar: can specify nested levels separated * (e.g. AEBODSYS*AEDECOD); can expanded three levels descending_by: name column sorting descending frequency order cutoff_stat: value cutoff , n (count) pct (percentage); default = ‘pct’ cutoff: numeric value percentage/count threshold treatment group cutting data presented; example, cutoff = 1.0 means keep preferred term rows percentages >= 1% cutoff_stat = ‘pct’. example , show use arguments nested_freq function call creating AE summary table AEBODSYS AEDECOD. illustration purpose, subset adae data contain records 2 categories system organ class: GENERAL DISORDERS ADMINISTRATION SITE CONDITIONS, SKIN SUBCUTANEOUS TISSUE DISORDERS. table output long easier visualize. addition, like sort output active drug group (TRT01AN = 81) descending frequency. Therefore, specify descending_by = \"81\". shown output , frequent system organ class GENERAL DISORDERS ADMINISTRATION SITE CONDITIONS, followed SKIN SUBCUTANEOUS TISSUE DISORDERS. Within system organ class, preferred terms also sorted descending frequency. tie counts, preferred terms sorted alphabetically. cutoff feature controlled two arguments: cutoff cutoff_stat. want remove rows preferred terms 1 count treatment columns, can specify cutoff = 2 cutoff_stat = \"n\" nested_freq call . cutoff results can also achieved specifying cutoff percentage: cutoff = 25 cutoff_stat = \"pct\". example, 5 subjects arm one subject count equal 20%, need 20% cutoff. keeping preferred terms least 2 counts active arm TRT01AN = 81 (.e. considering arms), can specify cutoff = \"81 >= 2\" andcutoff_stat = “n”`.","code":"adae <- cdisc_adae %>%   filter(SAFFL == \"Y\", TRTEMFL == \"Y\") %>%   filter(AEBODSYS %in% c(\"GENERAL DISORDERS AND ADMINISTRATION SITE CONDITIONS\",\"SKIN AND SUBCUTANEOUS TISSUE DISORDERS\")) %>%   rename(TRT01AN = TRTAN)  adsl <- cdisc_adsl %>%   filter(SAFFL == \"Y\") tbl <- nested_freq(adae,                    denom_df = adsl,                    colvar = \"TRT01AN\",                    rowvar = \"AEBODSYS*AEDECOD\",                    statlist = statlist(\"n (x.x%)\"),                    descending_by = \"81\",                    row_header = \"System organ class \\\\\\n Preferred term\")  knitr::kable(tbl) tbl <- nested_freq(adae,                    denom_df = adsl,                    colvar = \"TRT01AN\",                    rowvar = \"AEBODSYS*AEDECOD\",                    statlist = statlist(\"n (x.x%)\"),                    descending_by = \"81\",                    cutoff = 2,                    cutoff_stat = \"n\",                    row_header = \"System organ class \\\\\\n Preferred term\")  knitr::kable(tbl) tbl <- nested_freq(adae,                    denom_df = adsl,                    colvar = \"TRT01AN\",                    rowvar = \"AEBODSYS*AEDECOD\",                    statlist = statlist(\"n (x.x%)\"),                    descending_by = \"81\",                    cutoff = \"81 >= 2\",                    cutoff_stat = \"n\",                    row_header = \"System organ class \\\\\\n Preferred term\")  knitr::kable(tbl)"},{"path":"/articles/symbols.html","id":"symbols","dir":"Articles","previous_headings":"","what":"Symbols","title":"Tips & Tricks:  Including Symbols, Superscripts, Subscripts & Line Breaks","text":"Symbols can added label column via unicode. quick reference commonly used symbols. example call tidytlg::gentlg() add symbols label column.","code":"df <- tibble::tibble(   label = c(\"\\u2264\", \"\\u2265\"),   col1 = c(\"100\", \"200\") )  tidytlg::gentlg(df,                 file = \"demo\")"},{"path":"/articles/symbols.html","id":"superscripts-and-subscripts","dir":"Articles","previous_headings":"","what":"Superscripts and Subscripts","title":"Tips & Tricks:  Including Symbols, Superscripts, Subscripts & Line Breaks","text":"Superscripts Subscripts can added label column via unicode. Superscripts Subscripts can added footnotes via unicode well.","code":"df <- tibble::tibble(   label = c(\"This is a superscript a{\\\\super a}\",             \"This is a subscript b{\\\\sub b}\"),   col1 = c(\"100\", \"200\") )  tidytlg::gentlg(df,                 file = \"demo\") df <- tibble::tibble(   label = c(\"This is a superscript a{\\\\super a}\",             \"This is a subscript b{\\\\sub b}\"),   col1 = c(\"100\", \"200\") )  tidytlg::gentlg(df,                 file = \"demo\",                 footers = \"This is a footnote superscript{\\\\super a}\")"},{"path":"/articles/symbols.html","id":"inline-rtf-line-breaks","dir":"Articles","previous_headings":"","what":"Inline RTF Line Breaks","title":"Tips & Tricks:  Including Symbols, Superscripts, Subscripts & Line Breaks","text":"Sometimes need add line break RTF. Inserting ‘\\\\\\n’ string add line break . need line break followed tab, just add ‘\\\\li180’.","code":"df <- tibble::tibble(   label = c(\"Bodysystem \\\\\\n Preferred Term\"),   col1 = c(\"100\") )  tidytlg::gentlg(df,                 file = \"demo\") df <- tibble::tibble(   label = c(\"Bodysystem\\\\\\n\\\\li180Preferred Term\"),   col1 = c(\"100\") )  tidytlg::gentlg(df,                 file = \"demo\")"},{"path":"/articles/tbl_manipulation.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Manipulating tbl data frame","text":"tbl data frame main input gentlg function creating RTF/HTML outputs. vignette show tbl structure tbl variables action rendering RTF/HTML outputs.","code":""},{"path":"/articles/tbl_manipulation.html","id":"basic-tbl-data-frame","dir":"Articles","previous_headings":"Introduction","what":"Basic tbl data frame","title":"Manipulating tbl data frame","text":"basic variables tbl includes label, col1, col2, …, coln, label: row text displayed 1st column table col1: statistic results displayed 2nd column table col2: statistic results displayed 3rd column table. example shows basic tbl data frame, tbl transformed gentlg function call create HTML output.","code":"library(dplyr) library(tidytlg)  tbl <- tibble::tribble(                ~label,      ~col1,      ~col2,      ~col3,   \"Analysis Set: ITT\",       \"86\",       \"84\",       \"84\",         \"Age (Years)\",         NA,         NA,         NA,                   \"N\",       \"86\",       \"84\",       \"84\" )  knitr::kable(tbl) # render tbl gentlg(huxme       = tbl,           format      = \"HTML\",           orientation = \"landscape\",           opath       = \".\",           file        = \"DEMO1\",           title       = \"Basic tbl without formatting\",           colheader   = c(\"\", \"Placebo\", \"Active 1\", \"Active 2\"),           print.hux = FALSE,           wcol        = .30) #> [[1]] #>    <div style='border-top :1pt solid; border-bottom :1pt solid; '>              #>    <div style = \"text-indent: -36px; padding-left: 36px;\"> DEMO1:               #>    &emsp; Basic tbl without formatting<\/div>                                    #>                                <div              <div              <div         #>                           style='border-b   style='border-b   style='border-b   #>                              ottom:1pt         ottom:1pt         ottom:1pt      #>                           solid'> Placebo   solid'> Active    solid'> Active    #>                                                    1                 2          #>    Analysis Set: ITT            86                84                84          #>    Age (Years)                                                                  #>    N                            86                84                84          #>      <div style='border-bottom:1pt solid'> [demo1.html][] 22APR2024,            #>                                                                17:01            #>  #> Column names: label, col1, col2, col3"},{"path":"/articles/tbl_manipulation.html","id":"formatting-table","dir":"Articles","previous_headings":"","what":"Formatting table","title":"Manipulating tbl data frame","text":"example formatting actions table. enable formatting, additional variables need created tbl data frame.","code":""},{"path":"/articles/tbl_manipulation.html","id":"add-new-row","dir":"Articles","previous_headings":"Formatting table","what":"Add new row","title":"Manipulating tbl data frame","text":"inserting blank line prior 2nd row (.e. Age (Years)), need add newrows variable value = 1.","code":"tbl <- tbl %>%   mutate(newrows = case_when(label == \"Age (Years)\" ~ 1,                              TRUE ~ 0))  knitr::kable(tbl) # render tbl gentlg(huxme       = tbl,           format      = \"HTML\",           orientation = \"landscape\",           opath       = \".\",           file        = \"DEMO2\",           title       = \"Adding the variable of newrows\",           colheader   = c(\"\", \"Placebo\", \"Active 1\", \"Active 2\"),           print.hux = FALSE,           wcol        = .30) #> [[1]] #>    <div style='border-top :1pt solid; border-bottom :1pt solid; '>              #>    <div style = \"text-indent: -36px; padding-left: 36px;\"> DEMO2:               #>    &emsp; Adding the variable of newrows<\/div>                                  #>                                <div              <div              <div         #>                           style='border-b   style='border-b   style='border-b   #>                              ottom:1pt         ottom:1pt         ottom:1pt      #>                           solid'> Placebo   solid'> Active    solid'> Active    #>                                                    1                 2          #>    Analysis Set: ITT            86                84                84          #>                                                                                 #>    Age (Years)                                                                  #>    N                            86                84                84          #>      <div style='border-bottom:1pt solid'> [demo2.html][] 22APR2024,            #>                                                                17:01            #>  #> Column names: label, col1, col2, col3"},{"path":"/articles/tbl_manipulation.html","id":"add-indentation","dir":"Articles","previous_headings":"Formatting table","what":"Add indentation","title":"Manipulating tbl data frame","text":"adding 1 indentation N row, need add indentme variable value = 1, indicates 1 indentation (2 result 2 indentation, ).","code":"tbl <- tbl %>%   mutate(indentme = case_when(label == \"N\" ~ 1,                              TRUE ~ 0))  knitr::kable(tbl) # render tbl gentlg(huxme       = tbl,           format      = \"HTML\",           orientation = \"landscape\",           opath       = \".\",           file        = \"DEMO3\",           title       = \"Adding the variable of indentme\",           colheader   = c(\"\", \"Placebo\", \"Active 1\", \"Active 2\"),           print.hux = FALSE,           wcol        = .30) #> [[1]] #>    <div style='border-top :1pt solid; border-bottom :1pt solid; '>              #>    <div style = \"text-indent: -36px; padding-left: 36px;\"> DEMO3:               #>    &emsp; Adding the variable of indentme<\/div>                                 #>                                <div              <div              <div         #>                           style='border-b   style='border-b   style='border-b   #>                              ottom:1pt         ottom:1pt         ottom:1pt      #>                           solid'> Placebo   solid'> Active    solid'> Active    #>                                                    1                 2          #>    <div                         86                84                84          #>    style='text-indent:                                                          #>    -17.76px;                                                                    #>    padding-left:                                                                #>    17.76px'> Analysis                                                           #>    Set: ITT                                                                     #>                                                                                 #>    <div                                                                         #>    style='text-indent:                                                          #>    -17.76px;                                                                    #>    padding-left:                                                                #>    17.76px'> Age                                                                #>    (Years)                                                                      #>    <div                         86                84                84          #>    style='text-indent:                                                          #>    -17.76px;                                                                    #>    padding-left:                                                                #>    35.52px'> N                                                                  #>      <div style='border-bottom:1pt solid'> [demo3.html][] 22APR2024,            #>                                                                17:01            #>  #> Column names: label, col1, col2, col3"},{"path":"/articles/tbl_manipulation.html","id":"enable-bold-font","dir":"Articles","previous_headings":"Formatting table","what":"Enable bold font","title":"Manipulating tbl data frame","text":"enable bolding row Age (Years), boldme variable value = 1 need added. another formatting variable called newpage, assigning newpage = 1 start new page output.","code":"tbl <- tbl %>%   mutate(boldme = case_when(label == \"Age (Years)\" ~ 1,                              TRUE ~ 0))  knitr::kable(tbl) # render tbl gentlg(huxme       = tbl,           format      = \"HTML\",           orientation = \"landscape\",           opath       = \".\",           file        = \"DEMO4\",           title       = \"Adding the variable of boldme\",           colheader   = c(\"\", \"Placebo\", \"Active 1\", \"Active 2\"),           print.hux = FALSE,           wcol        = .30) #> [[1]] #>    <div style='border-top :1pt solid; border-bottom :1pt solid; '>              #>    <div style = \"text-indent: -36px; padding-left: 36px;\"> DEMO4:               #>    &emsp; Adding the variable of boldme<\/div>                                   #>                                <div              <div              <div         #>                           style='border-b   style='border-b   style='border-b   #>                              ottom:1pt         ottom:1pt         ottom:1pt      #>                           solid'> Placebo   solid'> Active    solid'> Active    #>                                                    1                 2          #>    <div                         86                84                84          #>    style='text-indent:                                                          #>    -17.76px;                                                                    #>    padding-left:                                                                #>    17.76px'> Analysis                                                           #>    Set: ITT                                                                     #>                                                                                 #>    <div                                                                         #>    style='text-indent:                                                          #>    -17.76px;                                                                    #>    padding-left:                                                                #>    17.76px'> Age                                                                #>    (Years)                                                                      #>    <div                         86                84                84          #>    style='text-indent:                                                          #>    -17.76px;                                                                    #>    padding-left:                                                                #>    35.52px'> N                                                                  #>      <div style='border-bottom:1pt solid'> [demo4.html][] 22APR2024,            #>                                                                17:01            #>  #> Column names: label, col1, col2, col3"},{"path":"/articles/tbl_manipulation.html","id":"fomatting-functions","dir":"Articles","previous_headings":"","what":"Fomatting functions","title":"Manipulating tbl data frame","text":"Besides manually adding formatting variables tbl, developed several formatting functions facilitate formatting process: add_newrows: add newrows variable tbl based row_type add_indent: add indentme variable tbl based row_type add_newpage: add newpage variable tbl based row_type. row_type variable created tbl calling freq, nested_freq, univar functions, used functions setting formatting variables. tbl example obtained calling univar function summarizing age statistics CDISC ADSL dataset. calling univar function, create anbr (analysis number) variable identifier tbl chunk. add_format function, incorporates 3 formatting functions (add_indent, add_newrows, add_newpage), can applied tbl creating formatting variables. default indentation row_type shown .","code":"tbl <- cdisc_adsl %>%   univar(colvar = \"TRT01PN\",          rowvar = \"AGE\",          statlist = statlist(c(\"N\", \"MEANSD\")),          decimal = 0,          row_header = \"Age (Years)\") %>%   mutate(anbr = \"01\")  knitr::kable(tbl) tbl <- cdisc_adsl %>%   univar(colvar = \"TRT01PN\",          rowvar = \"AGE\",          statlist = statlist(c(\"N\", \"MEANSD\")),          decimal = 0,          row_header = \"Age (Years)\") %>%   mutate(anbr = \"01\") %>%   add_format()  knitr::kable(tbl) # render tbl gentlg(huxme       = tbl,           tlf         = \"Table\",           format      = \"HTML\",           orientation = \"landscape\",           opath       = \".\",           file        = \"DEMO5\",           title       = \"Using row_type to set up indentation\",           colheader   = c(\"\", \"Placebo\", \"Active 1\", \"Active 2\"),           print.hux = FALSE,           wcol        = .30) #> [[1]] #>    <div style='border-top :1pt solid; border-bottom :1pt solid; '>              #>    <div style = \"text-indent: -36px; padding-left: 36px;\"> DEMO5:               #>    &emsp; Using row_type to set up indentation<\/div>                            #>                                <div              <div              <div         #>                           style='border-b   style='border-b   style='border-b   #>                              ottom:1pt         ottom:1pt         ottom:1pt      #>                           solid'> Placebo   solid'> Active    solid'> Active    #>                                                    1                 2          #>    <div                                                                         #>    style='text-indent:                                                          #>    -17.76px;                                                                    #>    padding-left:                                                                #>    17.76px'> Age                                                                #>    (Years)                                                                      #>    <div                          5                 5                 5          #>    style='text-indent:                                                          #>    -17.76px;                                                                    #>    padding-left:                                                                #>    35.52px'> N                                                                  #>    <div                    69.6 (14.40)       75.6 (6.73)       72.2 (9.23)     #>    style='text-indent:                                                          #>    -17.76px;                                                                    #>    padding-left:                                                                #>    53.28px'> Mean (SD)                                                          #>      <div style='border-bottom:1pt solid'> [demo5.html][] 22APR2024,            #>                                                                17:01            #>  #> Column names: label, 0, 54, 81"},{"path":"/articles/tidytlg.html","id":"overview-of-tlg-programming","dir":"Articles","previous_headings":"","what":"Overview of TLG Programming","title":"Get Started","text":"tidytlg provides framework creating TLG outputs clinical study report. TLG programming workflow includes following steps: Prep environment: set R environment /O paths. Process data: filter analysis data, perform data manipulation (e.g. convert character variable factor), define column variable. Generate results: create analysis rows summary statistics (tables) plots (graphs). Output results: output analysis results designated format rtf html. illustrate steps creating demographic table first, follow examples creating listing graph.","code":""},{"path":"/articles/tidytlg.html","id":"prep-environment","dir":"Articles","previous_headings":"","what":"Prep environment","title":"Get Started","text":"set R environment, can set path objects input folder output folder consistently TLG programs. analysis datasets required inputs titles file column metadata file placed input folder, output folder used store output files. envsetup package can used set R environment TLG programming.","code":""},{"path":"/articles/tidytlg.html","id":"titles-and-footnotes","dir":"Articles","previous_headings":"Prep environment","what":"titles and footnotes","title":"Get Started","text":"information titles footnotes TLG can stored excel file called titles.xls (see snapshot), used later create outputs.","code":""},{"path":"/articles/tidytlg.html","id":"column-metadata","dir":"Articles","previous_headings":"Prep environment","what":"column metadata","title":"Get Started","text":"Column metadata provides column structure table layout includes following variables: tbltype: identifier used group table column layout coldef: distinct variable values used, typically numeric typically treatment variable, think TRT01PN decode: decode coldef display column header table span1: spanning header display across multiple columns (lowest level) span2: spanning header display across multiple columns, second level span3: spanning header display across multiple columns, third level Please see snapshot column_metadata.xlsx.  Different types column layouts identified different tbltype can stored excel file called column_metadata.xlsx. Within tbltype, coldef variable defines order column based column variable used creating output (typically numeric treatment variable, TRT01PN, used column variable). example, 3 columns tbltype = “type1” snapshot column layout defined follows: first column summary statistics represents treatment group TRT01PN = 0 column header Placebo defined decode, second third columns represent Low Dose High Dose groups respectively spanning header Xanomeline defined span1 variable. Users can also include column derived combination individual columns. example, tbltype type3 include 4th column combined Low Dose High Dose well 5th column total group. Please see snapshot column headers defined type3.  use adsl data PHUSE Test Data Factory illustrate creation demographic table.","code":"# Prep Environment ------------------------------------------------------------------------------------- library(dplyr) library(haven) library(tidytlg)  # read adsl from PhUSE test data factory testdata <- \"https://github.com/phuse-org/TestDataFactory/raw/main/Updated/TDF_ADaM/\" adsl <- read_xpt(url(paste0(testdata,\"adsl.xpt\")))"},{"path":"/articles/tidytlg.html","id":"process-data","dir":"Articles","previous_headings":"","what":"Process data","title":"Get Started","text":"generating analysis summary, analysis data need processed first shown code . code perform tasks : filtering analysis population convert SEX variable character type factor type. factor levels SEX displayed analysis summary even records factor level “Unknown”. create column variable, colnbr, tlgsetup function call: tlgsetup using numeric treatment variable (e.g. TRT01PN) match coldef column metadata defined column_metadata_file tbltype create column variable, colnbr, adsl reflecting column layout. Please see vignette(\"tlgsetup\") details. column variable, colnbr, used subsequent analysis function calls creating analysis results. need multiple analysis datasets creating TLG, tlgsetup need applied dataset. Therefore, consistent column variable colnbr creating analysis summary.","code":"# Process Data ----------------------------------------------------------------------------------------- adsl <- adsl %>%   filter(ITTFL == \"Y\") %>%   mutate(SEX = factor(SEX, levels = c(\"M\", \"F\", \"U\"), labels = c(\"Male\", \"Female\", \"Unknown\"))) %>%   tlgsetup(var = \"TRT01PN\",            column_metadata_file = system.file(\"extdata/column_metadata.xlsx\", package = \"tidytlg\"),            tbltype = \"type3\")"},{"path":"/articles/tidytlg.html","id":"generate-results","dir":"Articles","previous_headings":"","what":"Generate results","title":"Get Started","text":"tidytlg provides 3 functions, univar, freq, nested_freq, generate analysis summary descriptive statistics (univariate statistics count (percentages)). details, please see frequency analysis vignette(\"freq\") univariate statistical analysis vignette(\"univar\"). function calls generate requested analysis rows table output sequentially store results individual objects (.e. t1, t2, t3). next step combine analysis results single tbl dataframe bind_table function call. bind_table function call performs following tasks: bind analysis rows t1, t2, t3 tbl add formatting variables (indentme, newrows, newpage), used gentlg function call creating output. attach column metadata specified column_metadata_file tbltype attribute tbl. column header spanning headers (.e. decode, span1, span2, span3) defined column metadata can used automatically gentlg function call.","code":"# Generate Results -------------------------------------------------------------------------------------  ## Analysis set row t1 <- adsl %>%   freq(colvar = \"colnbr\",        rowvar = \"ITTFL\",        statlist = statlist(\"n\"),        subset = ITTFL == \"Y\",        rowtext = \"Analysis set: ITT\")  ## Univariate summary for AGE t2 <- adsl %>%   univar(colvar = \"colnbr\",          rowvar = \"AGE\",          statlist = statlist(c(\"N\", \"MEANSD\", \"MEDIAN\", \"RANGE\", \"IQRANGE\")),          decimal = 0,          row_header = \"Age, years\")  ## Count (percentages) for SEX t3 <- adsl %>%   freq(colvar = \"colnbr\",        rowvar = \"SEX\",        statlist = statlist(c(\"N\",\"n (x.x%)\")),        row_header = \"Gender\") # Format Results ---------------------------------------------------------------------------------------  tbl <- bind_table(t1, t2, t3,        column_metadata_file = system.file(\"extdata/column_metadata.xlsx\", package = \"tidytlg\"),        tbltype = \"type3\")"},{"path":"/articles/tidytlg.html","id":"output-results","dir":"Articles","previous_headings":"","what":"Output results","title":"Get Started","text":"tbl data frame main input gentlg function creating RTF/HTML outputs. basic structure tbl includes label, col1, col2, …, coln, label: row text displayed 1st column table col1: statistic results displayed 2nd column table col2: statistic results displayed 3rd column table. columns contain formatting instructions create RTF/HTML outputs. tweaking formatting variables customize table layout, please see vignette(\"tbl_manipulation\") details. gentlg function call create rtf output using tblid file name folder defined opath argument. Please ensure titles.xls file contains records titles footnotes specified tblid. create html output, users need specify format argument “HTML” print.hux argument FALSE gentlg call. Users can also include superscripts, subscripts, line breaks via unicode. Please see vignette(\"symbols\") details. Besides using univar, freq, nested_freq functions create tbl dataframe, users can use R packages create analysis results perform data wrangling fit tbl structure, can passed gentlg function call generating desired outputs.","code":"knitr::kable(tbl) tblid <- \"Table01\"  gentlg(huxme       = tbl,        opath       = file.path(working_dir),        file        = tblid,        orientation = \"landscape\",        title_file = system.file(\"extdata/titles.xls\", package = \"tidytlg\")) gentlg(huxme       = tbl,        format      = \"HTML\",        print.hux = FALSE,        file        = tblid,        orientation = \"landscape\",        title_file = system.file(\"extdata/titles.xls\", package = \"tidytlg\")) #> [[1]] #>    <div style='border-top :1pt solid; border-bottom :1pt solid; '>              #>    <div style = \"text-indent: -36px; padding-left: 36px;\"> Table01:             #>    &emsp; Demographic and Baseline Characteristics; Intent-to-treat             #>    Analysis Set<\/div>                                                           #>                                                                <div             #>                                                         style='border-bott      #>                                                           om:1pt solid'>        #>                                                             Xanomeline          #>                                               <div        <div        <div      #>                                             style='bo   style='bo   style='bo   #>                                             rder-bott   rder-bott   rder-bott   #>                                              om:1pt      om:1pt      om:1pt     #>                                              solid'>     solid'>     solid'>    #>                                              Placebo    Low Dose    High Dose   #>    <div style='text-indent: -17.76px;          86          84          84       #>    padding-left: 17.76px'> Analysis set:                                        #>    ITT                                                                          #>                                                                                 #>    <div style='text-indent: -17.76px;                                           #>    padding-left: 17.76px'> Age, years                                           #>    <div style='text-indent: -17.76px;          86          84          84       #>    padding-left: 35.52px'> N                                                    #>    <div style='text-indent: -17.76px;         75.2        75.7        74.4      #>    padding-left: 53.28px'> Mean (SD)         (8.59)      (8.29)      (7.89)     #>    <div style='text-indent: -17.76px;         76.0        77.5        76.0      #>    padding-left: 53.28px'> Median                                               #>    <div style='text-indent: -17.76px;       (52; 89)    (51; 88)    (56; 88)    #>    padding-left: 53.28px'> Range                                                #>    <div style='text-indent: -17.76px;        (69.0;      (71.0;      (70.5;     #>    padding-left: 53.28px'> IQ range           82.0)       82.0)       80.0)     #>                                                                                 #>    <div style='text-indent: -17.76px;                                           #>    padding-left: 17.76px'> Gender                                               #>    <div style='text-indent: -17.76px;          86          84          84       #>    padding-left: 35.52px'> N                                                    #>    <div style='text-indent: -17.76px;          33          34          44       #>    padding-left: 53.28px'> Male              (38.4%)     (40.5%)     (52.4%)    #>    <div style='text-indent: -17.76px;          53          50          40       #>    padding-left: 53.28px'> Female            (61.6%)     (59.5%)     (47.6%)    #>    <div style='text-indent: -17.76px;           0           0           0       #>    padding-left: 53.28px'> Unknown                                              #>    <div style='border-top:1pt solid;'> <br />Key: IQ = interquartile            #>    Note: N reflects non-missing values                                          #>    <div style='border-bottom:1pt solid'> [table01.html][] 22APR2024,            #>                                                                17:01            #>  #> Column names: label, col1, col2, col3, col4, col5 #>  #> 4/6 columns shown."},{"path":"/articles/tidytlg.html","id":"listing-programming","dir":"Articles","previous_headings":"","what":"Listing programming","title":"Get Started","text":"workflow can also used create listings. Users need prepare data assign tbl. gentlg function, users need pay attention : specify tlf argument Listing (.e. tlf = \"Listing\") specify idvars argument identifying variables (treatment variable USUBJID) repeated values removed specify colheader (column header) argument; specified, column labels used column headers. example, colheader argument specified, column headers use variable names since columns newly created without labels. user option control column width passing vector column width wcol argument. Please ensure length column width vector number columns data. example , 8 columns data users can specify customized column width c(0.15, 0.10, 0.05, 0.15, 0.20, 0.15, 0.05, 0.05) wcol argument create rtf output. However, html output shown , wcol argument can take single number column width apply every column.","code":"# Prep Environment --------------------------------------------------------------------------------------- library(dplyr) library(haven) library(tidytlg)  adsl <- cdisc_adsl adae <- cdisc_adae  # Process Data -------------------------------------------------------------------------------------------- adsl <- adsl %>%   filter(SAFFL == \"Y\") %>%   select(USUBJID, SAFFL, TRT01AN, TRT01A)  adae <- adae %>%   filter(SAFFL == \"Y\" & TRTEMFL == \"Y\") %>%   mutate(BSPT  = paste(AEBODSYS, \"[\", AEDECOD, \"]\"),          SAEFL = if_else(AESER == \"Y\", \"Yes\", \"No\"),          DTHFL = if_else(AEOUT == \"FATAL\", \"Yes\", \"No\")) %>%    select(USUBJID, ASTDY, TRTA, BSPT, AETERM, SAEFL, DTHFL)  tbl <- inner_join(adsl, adae, by = \"USUBJID\") %>%   arrange(TRT01AN, USUBJID, ASTDY) %>%   select(TRT01A, USUBJID, ASTDY, TRTA, BSPT, AETERM, SAEFL, DTHFL) %>%   filter(USUBJID %in% c(\"01-701-1015\", \"01-701-1023\"))  # Output Results ------------------------------------------------------------------------------------------ gentlg(huxme       = tbl,        tlf         = \"l\",        format      = \"HTML\",        print.hux = FALSE,        orientation = \"landscape\",        file        = \"Listing01\",        title       = \"Listing of Adverse Events\",        idvars      = c(\"TRT01A\", \"USUBJID\"),        wcol        = 0.15,        colheader   = c(\"Treatment Group\",                        \"Subject ID\",                        \"Study Day of AE\",                        \"Treatment Period\",                        \"Body System [Preferred Term]\",                        \"Verbatim Term\",                        \"Serious\",                        \"Fatal\")) #> [[1]] #>   <div style='border-top :1pt solid; border-bottom :1pt                         #>   solid; '> <div style = \"text-indent: -36px; padding-left:                     #>   36px;\"> Listing01: &emsp; Listing of Adverse                                  #>   Events<\/div>                                                                  #>   <div          <div       <div       <div       <div       <div       <div     #>   style='bo   style='b   style='b   style='b   style='b   style='b   style='b   #>   rder-bott   order-bo   order-bo   order-bo   order-bo   order-bo   order-bo   #>   om:1pt      ttom:1pt   ttom:1pt   ttom:1pt   ttom:1pt   ttom:1pt   ttom:1pt   #>   solid'>     solid'>    solid'>    solid'>    solid'>    solid'>    solid'>    #>   Treatment   Subject     Study     Treatmen     Body     Verbatim   Serious    #>   Group          ID       Day of    t Period    System      Term                #>                             AE                 [Preferr                         #>                                                ed Term]                         #>   Placebo     01-701-1      2       Placebo    GENERAL    APPLICAT      No      #>                 015                            DISORDER   ION SITE              #>                                                 S AND     ERYTHEMA              #>                                                ADMINIST                         #>                                                 RATION                          #>                                                  SITE                           #>                                                CONDITIO                         #>                                                  NS [                           #>                                                APPLICAT                         #>                                                ION SITE                         #>                                                ERYTHEMA                         #>                                                   ]                             #>                             2       Placebo    GENERAL    APPLICAT      No      #>                                                DISORDER   ION SITE              #>                                                 S AND     PRURITUS              #>                                                ADMINIST                         #>                                                 RATION                          #>                                                  SITE                           #>                                                CONDITIO                         #>                                                  NS [                           #>                                                APPLICAT                         #>                                                ION SITE                         #>                                                PRURITUS                         #>                                                   ]                             #>                             8       Placebo    GASTROIN   DIARRHOE      No      #>                                                TESTINAL      A                  #>                                                DISORDER                         #>                                                  S [                            #>                                                DIARRHOE                         #>                                                  A ]                            #>               01-701-1      3       Placebo    SKIN AND   ERYTHEMA      No      #>                 023                            SUBCUTAN                         #>                                                  EOUS                           #>                                                 TISSUE                          #>                                                DISORDER                         #>                                                  S [                            #>                                                ERYTHEMA                         #>                                                   ]                             #>                             3       Placebo    SKIN AND   ERYTHEMA      No      #>                                                SUBCUTAN                         #>                                                  EOUS                           #>                                                 TISSUE                          #>                                                DISORDER                         #>                                                  S [                            #>                                                ERYTHEMA                         #>                                                   ]                             #>                             3       Placebo    SKIN AND   ERYTHEMA      No      #>                                                SUBCUTAN                         #>                                                  EOUS                           #>                                                 TISSUE                          #>                                                DISORDER                         #>                                                  S [                            #>                                                ERYTHEMA                         #>                                                   ]                             #>                             22      Placebo    CARDIAC    ATRIOVEN      No      #>                                                DISORDER   TRICULAR              #>                                                  S [       BLOCK                #>                                                ATRIOVEN    SECOND               #>                                                TRICULAR    DEGREE               #>                                                 BLOCK                           #>                                                 SECOND                          #>                                                DEGREE ]                         #>    <div style='border-bottom:1pt solid'> [listing01.html][]                     #>                                            22APR2024, 17:01                     #>  #> Column names: TRT01A, USUBJID, ASTDY, TRTA, BSPT, AETERM, SAEFL, DTHFL #>  #> 7/8 columns shown."},{"path":"/articles/tidytlg.html","id":"graph-programming","dir":"Articles","previous_headings":"","what":"Graph programming","title":"Get Started","text":"create graph output, tidytlg provides framework integrating png file titles footnotes producing rtf html output. gentlg function, users need : specify tlf argument g graph specify plotnames argument full path png file define plotwidth plotheight: ’s advised users keep aspect ratio plot width height approximately png image. code create rtf output plot.","code":"# Prep Environment --------------------------------------------------------------------------------------- library(dplyr) library(haven) library(ggplot2) library(tidytlg)  # read adsl from PhUSE test data factory testdata <- \"https://github.com/phuse-org/TestDataFactory/raw/main/Updated/TDF_ADaM/\" adsl <- read_xpt(url(paste0(testdata,\"adsl.xpt\")))  tblid <- \"Graph01\"  # Process Data -------------------------------------------------------------------------------------------- adsl <- adsl  %>%   filter(ITTFL == \"Y\") %>%   select(USUBJID, ITTFL, TRT01PN, TRT01P, AGE, SEX, HEIGHTBL, WEIGHTBL) %>%   mutate(SEX = factor(SEX, levels = c(\"M\", \"F\"), labels = c(\"Male\", \"Female\")))  # Generate Results ----------------------------------------------------------------------------------------  plot <- ggplot(data = adsl, aes(x = HEIGHTBL, y = WEIGHTBL)) +   geom_point() +   labs(x = \"Baseline Height (cm)\",        y = \"Baseline Weight (kg)\") +   facet_wrap(~SEX, nrow=1)  # create png file png(file.path(working_dir, paste0(tblid,\".png\")), width=2800, height=1300, res=300, type = \"cairo\")  plot #> Warning: Removed 1 row containing missing values or values outside the scale range #> (`geom_point()`).  dev.off() #> agg_png  #>       2  # Output Results ------------------------------------------------------------------------------------------  gentlg(tlf = \"g\",        plotnames = file.path(system.file(\"extdata\", package = \"tidytlg\"), paste0(tblid,\".png\")),        plotwidth = 10,        plotheight = 5,        orientation = \"landscape\",        opath       = file.path(working_dir),,        file = tblid,        title_file = system.file(\"extdata/titles.xls\", package = \"tidytlg\")) #> $ht #> ──────────────────────────────────────────────────────────────────────────────── #>   \\pnhang\\trhdr\\fi-1152\\li1152\\keepn\\s15 Graph01:\\tab Scatter Plot of Baseline   #>   Body Weight and Height                                                         #> ──────────────────────────────────────────────────────────────────────────────── #>   \\qc{\\pict\\pngblip\\picwgoal14400\\pichgoal7200                                   #>   89504e470d0a1a0a0000000d4948445200000af000000514080300000034c937170000030050   #>   4c54450000000101010202020303030404040505050606060707070808080909090a0a0a0b0b   #>   0b0c0c0c0d0d0d0e0e0e0f0f0f10101011111112121213131314141415151516161617171718   #>   18181919191a1a1a1b1b1b1c1c1c1d1d1d1e1e1e1f1f1f202020212121222222232323242424   #>   2525252626262727272828282929292a2a2a2b2b2b2c2c2c2d2d2d2e2e2e2f2f2f3030303131   #>   313232323333333434343535353636363737373838383939393a3a3a3b3b3b3c3c3c3d3d3d3e   #>   3e3e3f3f3f4040404141414242424343434444444545454646464747474848484949494a4a4a   #>   4b4b4b4c4c4c4d4d4d4e4e4e4f4f4f5050505151515252525353535454545555555656565757   #>   575858585959595a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f60606061616162626263636364   #>   64646565656666666767676868686969696a6a6a6b6b6b6c6c6c6d6d6d6e6e6e6f6f6f707070   #>   7171717272727373737474747575757676767777777878787979797a7a7a7b7b7b7c7c7c7d7d   #>   7d7e7e7e7f7f7f8080808181818282828383838484848585858686868787878888888989898a   #>   8a8a8b8b8b8c8c8c8d8d8d8e8e8e8f8f8f909090919191929292939393949494959595969696   #>   9797979898989999999a9a9a9b9b9b9c9c9c9d9d9d9e9e9e9f9f9fa0a0a0a1a1a1a2a2a2a3a3   #>   a3a4a4a4a5a5a5a6a6a6a7a7a7a8a8a8a9a9a9aaaaaaabababacacacadadadaeaeaeafafafb0   #>   b0b0b1b1b1b2b2b2b3b3b3b4b4b4b5b5b5b6b6b6b7b7b7b8b8b8b9b9b9babababbbbbbbcbcbc   #>   bdbdbdbebebebfbfbfc0c0c0c1c1c1c2c2c2c3c3c3c4c4c4c5c5c5c6c6c6c7c7c7c8c8c8c9c9   #>   c9cacacacbcbcbcccccccdcdcdcecececfcfcfd0d0d0d1d1d1d2d2d2d3d3d3d4d4d4d5d5d5d6   #>   d6d6d7d7d7d8d8d8d9d9d9dadadadbdbdbdcdcdcdddddddedededfdfdfe0e0e0e1e1e1e2e2e2   #>   e3e3e3e4e4e4e5e5e5e6e6e6e7e7e7e8e8e8e9e9e9eaeaeaebebebecececedededeeeeeeefef   #>   eff0f0f0f1f1f1f2f2f2f3f3f3f4f4f4f5f5f5f6f6f6f7f7f7f8f8f8f9f9f9fafafafbfbfbfc   #>   fcfcfdfdfdfefefeffffffe2b05d7d000000097048597300002e2300002e230178a53f760000   #>   200049444154789cecdd77805c55d980f19b42124291d08481d03b8820451051b0d0879a4850   #>   aa0405547a95127a1708a149477a42114440a9862a7ca1972c014249dd5114e99064bf992d67   #>   67ee993bb7ccb9e7bc73f2fcfed0dd99b933674fb2ef7dd8ccce041d00000080c702d70b0000   #>   0000f244f0020000c06b042f000000bc46f0020000c06b042f000000bc46f0020000c06b042f   #>   000000bc46f0020000c06b042f000000bc46f0020000c06b042f000000bc46f0020000c06b04   #>   2f000000bc46f0020000c06b042f000000bc46f0020000c06b042f000000bc46f0020000c06b   #>   042f000000bc46f0020000c06b042f000000bc46f0020000c06b2d13bc6d0080b63666240044   #>   8b9891042f00b412662400448b9891042f00b412662400448b9891042f00b412662400448b98   #>   91042f00b412662400448b9891042f00b412662400448b9891042f00b412662400448b989104   #>   2f00b412662400448b9891042f00b412662400448b9891042f00b412662400448b9891042f00   #>   b412662400448b9891042f00b412662400448b9891042f00b412662400448b9891042f00b412   #>   662400448b9891042f00b412662400448b9891042f00b412662400448b9891042f00b4126624   #>   00448b9891042f00b412662400448b9891042f00b412662400448b9891042f00b41266240044   #>   8b9891042f90d12185c236aed780b9103312ad8dd1897c45cc488217c888a90d279891686d8c   #>   4ee42b624612bc40dbb9858a07aa2f3aaaf3a2098d8e626ac3096624f2d3350c9565f3780c46   #>   27f2153123095ea07bc61f5675c9c475095e08c58c447e085eb4be881949f002dd337eadd77b   #>   2fb9a540f042286624f243f0a2f545cc488217e89cf16b150a37f45eb257e705042f04624622   #>   3f956178ed13ca93793c06a313f98a9891042fd039e30f2a14765717bcb84261e8ef085e88c4   #>   8c447e2ac3f0ae9c1f83d1897c45cc488217e89cf17f195a58eef99e0b2e2c14761a5513bcaf   #>   fff5d2d34e38eb8aea9f7784a6f6ebb78f3ee9f4cb9fb2b05cccdd9891c84f54f046ceb767af   #>   3c63d465ffecfee4e9cb4f3ee58ada9f13303a615dc48c247881ce19ffc42e85c21f7a2ed8ba   #>   50f86355f0be3466e715bb9fd2b6f975eaa89aa9fddcef56e9bc7ea9adefb1b76ecc959891c8   #>   4ffde0ad37df762b14f66c7b6a8f652a972f7368e537209edc6de9cee7fd1ea37e1d82d10917   #>   226624c10b7405ef9585c24fbb3f7f74a9c22aaf5405ef95d5bfc571f0c4ee5b554fed5b5651   #>   d72f75b6ddc5636ec38c447eea066fddf95609de87d6eab97cd81b6d7f5da3e7937d7b6ec3e8   #>   840b113392e005ba82f7b5550b8547ba3e3fa650d8bfad3678d7daedc4f3c79cb4cbd0f28567   #>   741f5535b5ff54f929c74f8f1b7dde7e2b953fb8c8f6fa31576146223ff582b7fe7c2b07efae   #>   1b1496dbedf893f75eae7cf1394fafd5f5c9b2e54faeeabe0da3132e44cc488217e80adeb603   #>   0a85a33b3f9db85e65e45707ef363776ff1bdddfbe57282cf76cd7c7bd53fba9d50a85d56eec   #>   fcf0c9cd0a85951fb7b978cc6d9891c84f9de08d986fe5e05dbab0f93f2a1f3e50bec5ba3f2b   #>   fc687ce593fb572d1436eb3e94d10917226624c10b7407efdde599ddf96f6e630b850ddbaa83   #>   f7d5de9b3eb94aa17072d787bd537baf4261f9bf76dfe0b9b50a85df595a37e64acc48e4a7f6   #>   65c99ea95c1431dfcac15b58b77b44fea1f29484f5ba7febf79cf2c78f767dc8e8840b113392   #>   e005ba83b76de342e1b6caa7bf2c144ea809de6a47160adb767da4a6f6d3430b8563abef6c95   #>   d7725f32e65ecc48e4a7f68d27366d8b9e6f95e0bda4fbd2172acf4cb8a2fb9309e5032ed5ef   #>   99d1095b226624c10bf404ef4985c23ee5cf5e5ab1b0f4e391c17b4ba1b072d7476a6a9f5528   #>   2cfd4f758317ca33fccf16168db9153312f9d183376abe95837705d5a79b140a2ba9d766d8a8   #>   3a631546276c899891042fd013bc4f2e5d58e1a5b6b6318542b12d32781f285ffc62e7476a6a   #>   ef5e286c5e758bf2e83f2bff3563aec58c447ef4e08d9a6fe5e0dd425d5aac7ea5b1adeb3e37   #>   81d1095b226624c10bf4046fdb0e85c298b6b66d0a858bdb42c1fbfa8dfbff74ad157ace025d   #>   afa1aea6f6f70a85bdabee6dfb42e1288b8bc7dc861989fce8bfb41635dfcac13b425d3abc50   #>   f8b9fa64e74261bf9e8f199db02f624612bc800ade4b2a7378fc5285955e6aab0ddedb37aef9   #>   b147d72f64a8a9bd5621ec00275f06e60ecc48e4470fdea8f9d6f9c6133d86773d1fac4b3978   #>   47767fc8e88403113392e00554f0bebc7261a9f1c777bf6c7a55f0de50f98d8ca11b6d3f62cf   #>   3df71c56e879b95e35b597d3a6f6c8ba0f0398c08c447ef4e08d9a6f498297d10917226624c1   #>   0ba8e06ddbaf50387e8342616ce5e3dee07d7ead4261ad312f74ddf6017d6a575e7672640d5e   #>   3f1df96146223f7af046cdb704c1cbe88413113392e0057a83f7f64261a54261fdce57e3ed0d   #>   de3f140acb3dd473db3bf4a95d4ee4032daf1873316624f2a3076fd47c4b10bc8c4e38113123   #>   095ea037782b03b850f87de787bdc1bb7bf52f675ca84fed6185c2d636978bb91b3312f9d183   #>   376abe25085e46279c889891042f5015bcc7973f5aeab1ce0f7b8377eb42e10875dbbdf4a97d   #>   6aa130f4ff6cae1773356624f2a3076fd47c4b10bc8c4e38113123095ea02a78c76fbae9a6dd   #>   43bc3778b72a147edb73d3a797d3a7f6634379351dd8c38c447ef4e08d9a6f098297d1092722   #>   6624c10b54056f95dee0ddb350d8a0fb4d84dea8fca671786a576e30f4b6aa439fcf75b598cb   #>   3123911f3d78a3e65b82e06574c289881949f00271c13bbafcd1efdea87cf4fcee85a5eb4ced   #>   27d72814963fb77bb04fbc73e4f76d2c1a732b6624f253277823e65b82e06574c289881949f0   #>   0271c1fbeabae50fbf7fc2a5e71f589ecec7d799da6d632bef24b4f6c8d3479f73dc6edf2a14   #>   be6b6de5980b3123919f3ac11b31df12042fa3134e44cc488217880bdeb6bb57ec7959f4a54e   #>   78b0ded46efbcb3ad52f9efe3d4bebc65c891989fcd40bdefaf32dc91b4f303ae142c48c2478   #>   81d8e06dfbfb365de378b39bdaea4fedb6974ff94ef7c85e669b339fb3b26acca59891c84fdd   #>   e0ad3bdf12bdb530a3130e44cc48821748e291d1a34ebbeca1c637b9ec8ce34f1b73f7cb9656   #>   84b91533120e649d6f8c4e58173123095e006825cc480088163123095e006825cc4800881631   #>   23095e006825cc480088163123095e006825cc480088163123095e006825cc48008816312309   #>   5e006825cc480088163123095e006825cc480088163123095e006825cc480088163123095e00   #>   6825cc480088163123095e006825cc480088163123095e006825cc480088163123095e006825   #>   cc480088163123095e006825cc480088163123095e006825cc480088163123095e006825cc48   #>   0088163123095e006825cc480088163123095e006825cc480088163123095e006825cc480088   #>   163123095e006825cc480088163123095e006825cc480088163123095e006825cc4800881631   #>   235b2678ff27c5575f7ffdf5e7ae17d1b42fbffed4f5129a56fe83f8fa33d78b68dad75f7fe2   #>   7a09cdfab8f227e1c357f1b1eb3524247d467e59fefbf085eb4534ed4b0fa6cb575eccc8af5a   #>   ff6cd539235bfeab68a1b355c48c6c99e02d4931bbbc98cf5c2fa269b33afee77a09cdfa57e5   #>   afc5c7ae57d1b48e8effba5e42b33eacfc497ce47a15cdfa7747c7bf5daf2121e933f2ebf262   #>   be70bd88a67dd5f189eb25346d4ef94fe253d78b68da6cce56427474fcc7f512128a9891046f   #>   5a04af10de8c1082570482d71882570a8257086fce5604af1daef74f217885f0668410bc2210   #>   bcc610bc5210bc427873b62278ed70bd7f0ac12b84372384e01581e03586e09582e015c29bb3   #>   15c16b87ebfd53085e21bc192104af0804af3104af1404af10de9cad085e3b5cef9f42f00ae1   #>   cd0821784520788d2178a5207885f0e66c45f0dae17aff148257086f4608c12b02c16b0cc12b   #>   05c12b8437672b82b779735e7f68dc7dcf7ddef036aef74f217885f0668410bc2210bcc610bc   #>   5210bc427873b62278355f4fbaefa283762c168b5f26b9b863ce5dfb142b868d8e7ab1e00ad7   #>   fba710bc42783342085e11085e63085e29085e21bc395b11bc6147ee54ecf665828b3b3efb7d   #>   cfe5c5bd2645dfabebfd53085e21bc192104af0804af3104af1404af10de9cad08deb09d8b75   #>   cb36e2e23927972fd9f5a27157ef5ffeff3da39629689813bc42783342085e11085e63085e29   #>   085e21bc395b11bc61e5b2fdf989d78faa13bcf52efe4bf982e33e297f30676cf9a31323efd5   #>   f5fe2904af10de8c1082570482d71882570a8257086fce56046fd88d4fcc28ffefd5e1b2ad7f   #>   f1177b148b23bb7f5dedd2f275af46ddabebfd53085e21bc192104af0804af3104af1404af10   #>   de9cad08defab4e0ad7ff143e5cfc7777ffce9f062f18ca8fb73bd7f0ac12b84372384e01581   #>   e03586e09582e015c29bb315c15b5fc2e03dbd58fcc5d73d9f8c2e1687d739a693ebfd53085e   #>   21bc192104af0804af3104af1404af10de9cad08defa9205efece1c5e259eab3f1e52b2744dc   #>   9febfd53085e21bc192104af0804af3104af1404af10de9cad08defa9205ef94f2a77f569f95   #>   ca9fdd19717faef74f217885f0668410bc2210bcc610bc5210bc427873b62278eb4b16bccf94   #>   3f7d567d3667e7627174c4fdb9de3f85e015c29b1142f08a40f01a43f04a41f00ae1cdd98ae0   #>   ad2f59f0de5dfe7472efa7bf2a167f1f717faef74f217885f0668410bc2210bcc610bc5210bc   #>   427873b62278eb4b16bcb7963fad5ada61c5e2a155377ee23ae5de4fa4a88c90af5c2fa269b3   #>   3bbe70bd84a655fe8a7ce97a114debe8f8dcf5129af559e54fa2e5bf8a4fcb69e07a0d0945cc   #>   5cd7cb522a3f14f8daf5229a36cb83e9e2c7d96a4eeb9fad3ead7c83b6fc57519e3c9fb95e42   #>   421133d271f05e5bfef4a3de4f8f29160fa8baf1c9eb297be4b54e000000f8cd71f05e51fef4   #>   d3de4f4f2816f7adba31c10b0000806689fb09effe55372678010000d02cd1cfe12578010000   #>   d02c01afd2f06eefa7bc4a832dbc4a8314bc4a8310bc4a8331bc4a8314bc4a8310de9cad7895   #>   86fa9205efd3e54f9febfd74175e87d71282570a82570882d71882570a8257086fce56046f7d   #>   c9df69ed1ef559e59dd6ee88b83fd7fba710bc42783342085e11085e63085e29085e21bc395b   #>   11bcf5250bde59c38ac573d4678f97af9c10717faef74f217885f0668410bc2210bcc610bc52   #>   10bc427873b62278eb4b16bc1da7168bbbcfeaf9e4a26271589d633ab9de3f85e015c29b1142   #>   f08a40f01a43f04a41f00ae1cdd98ae0ad2f61f03e58fefc89ee8f3f1d5e2c9e1e757faef74f   #>   217885f0668410bc2210bcc610bc5210bc427873b62278eb4b18bc9fef5e2ceef745d7c79797   #>   af7b39eafe5cef9f42f00ae1cd0821784520788d2178a5207885f0e66c45f0867ddef9789794   #>   eb757ae5837f37beb8f2c264c757de6c6dceeddb973f8abc5757fba6217885f0668410bc2210   #>   bcc610bc5210bc427873b62278c3ee2cd618def8e2d9a3ca9fec3a66dc350794ff7f8ff6c87b   #>   75bd7f0ac12b84372384e01581e03586e09582e015c29bb315c11b962e783b3e3d465db6675b   #>   f4bdbade3f85e015c29b1142f08a40f01a43f04a41f00ae1cdd98ae00d4b19bc1d73eed8bbf3   #>   9261177cd4e05e5def9f42f00ae1cd0821784520788d2178a5207885f0e66c45f0366fce6b0f   #>   8ebbefd9cf1adec6f5fe2904af10de8c1082570482d71882570a8257086fce5604af1daef74f   #>   217885f0668410bc2210bcc610bc5210bc427873b62278ed70bd7f0ac12b84372384e01581e0   #>   3586e09582e015c29bb315c16b87ebfd53085e21bc1921228377fa9fcf3cfcc4cb5f4d745b82   #>   d732e93392e09582e015c29bb315c16b87ebfd53085e21bc19210283f7ed438604157d37b937   #>   c1ad095ecba4cf4882570a8257086fce5604af1daef74f217885f06684c80bdefb160f9491d3   #>   636f4ef05a267d4612bc5210bc427873b62278ed70bd7f0ac12b843723445cf08e1b1054d96a   #>   46dced095ecba4cf4882570a8257086fce5604af1daef74f217885f06684480bdee7160a6a1c   #>   147700c16b99f41949f04a41f00ae1cdd98ae0b5c3f5fe2904af10de8c1069c1bb6d6def06fd   #>   9f8c3980e0b54cfa8c2478a5207885f0e66c45f0dae17aff148257086f4688b0e01ddf2714bc   #>   c1f09823085ecba4cf4882570a8257086fce5604af1daef74f217885f06684080bdea3c3bd1b   #>   2c38b5f11104af65d26724c12b05c12b8437672b82d70ed7fba710bc427833428405efe65af0   #>   060f373e82e0b54cfa8c2478a5207885f0e66c45f0dae17aff148257086f4688b0e05d5d0fde   #>   9b1a1f41f05a267d4612bc5210bc427873b62278ed70bd7f0ac12b8437234458f0aeac07eff5   #>   8d8f20782d933e23095e29085e21bc395b11bc76b8de3f85e015c29b11222c78bfaf07efdf1a   #>   1f41f05a267d4612bc5210bc427873b62278ed70bd7f0ac12b8437234458f0fe56ebdd41ef35   #>   3e82e0b54cfa8c2478a5207885f0e66c45f0dae17aff148257086f4688b0e0bd4f0bdead628e   #>   20782d933e23095e29085e21bc395b11bc76b8de3f85e015c29b11222c784b1b8583f7af3107   #>   10bc96499f9104af1404af10de9cad085e3b5cef9f42f00ae1cd089116bc0f0ea8edddb8f79d   #>   20786d933e23095e29085e21bc395b11bc76b8de3f85e015c29b11222d784b17d5bcd7dadaef   #>   c7dd9ee0b54cfa8c2478a5207885f0e66c45f0dae17aff148257086f4688b8e02d5d356f6fef   #>   6e3e29f6e604af65d26724c12b05c12b8437672b82d70ed7fba710bc42783342e4056fe999ed   #>   ba7fc85b183d23fed604af65d26724c12b05c12b8437672b82d70ed7fba710bc427833420406   #>   6fa9f4f23923b71f71f8dd097297e0b54efa8c2478a5207885f0e66c45f0dae17aff14825708   #>   6f4688c8e04d83e0b54cfa8c2478a5207885f0e66c45f0dae17aff148257086f4608c12b02c1   #>   6b0cc12b05c12b8437672b82d70ed7fba710bc42783342085e11085e63085e29085e21bc395b   #>   11bc76b8de3f85e015c29b1142f08a40f01a43f04a41f00ae1cdd98ae0b5c3f5fe2904af10de   #>   8c1082570482d71882570a8257086fce5604af1daef74f217885f0668410bc2210bcc610bc52   #>   a40fdef76f3ef3a8336f897db319ab085e29085e5b5cef9f42f00ae1cd0821784520788d2178   #>   a5481bbccfef3aa8f3f5b7e71df1426e6b4a8fe09582e0b5c5f5fe2904af10de8c1082570482   #>   d71882578a94c17bd100f50e8b032fce6f556911bc5210bcb6b8de3f85e015c29b1142f08a40   #>   f01a43f04a912e784f08aa9d9ce3bad22178a520786d71bd7f0ac12b84372384e01581e03586   #>   e0952255f0ded0b72678fbde92e7cad22078a520786d71bd7f0ac12b84372384e01581e03586   #>   e095224df04e191ad45a666aae6b4b8ee09582e0b5c5f5fe2904af10de8c1082570482d71882   #>   578a34c1fb8720ec825cd7961cc12b05c16b8bebfd53085e21bc192104af0804af3104af1469   #>   8277732d787f94ebda922378a520786d71bd7f0ac12b84372384e01581e03586e095224df0ce   #>   ab05ef7c792e2d0582570a82d716d7fba710bc42783342085e11085e63085e295204ef5b5aef   #>   06c1dbf9ae2e2982570a82d716d7fba710bc42783342085e11085e63085e295204efc43ac1db   #>   96efea922278a520786d71bd7f0ac12b84372384e01581e03586e0952245f0b6cfa3f5ee80f6   #>   7c579714c12b05c16b8bebfd53085e21bc192104af0804af3104af14699ec3bb9e16bc1be4ba   #>   b6e4085e29085e5b5cef9f42f00ae1cd0821784520788d2178a54813bcc76bc17b62ae6b4b8e   #>   e09582e0b5c5f5fe2904af10de8c1082570482d71882578a34c1dbf68d50ef2ef466ae6b4b8e   #>   e09582e0b5c5f5fe2904af10de8c1082570482d71882578a546f2d7c462878cfce73656910bc   #>   5210bcb6b8de3f85e015c29b1142f08a40f01a43f04a912a784bbbd6f4ee881cd7950ec12b05   #>   c16b8bebfd53085e21bc192104af0804af3104af14e98277c64155bdbbe7f41cd7950ec12b05   #>   c16b8bebfd53085e21bc192104af0804af3104af14e982b7541abb4677eeae352eaf256540f0   #>   4a41f0dae27aff148257086f4608c12b02c16b0cc12b45dae02d951efefd882d471cf7484eeb   #>   c986e09582e0b5c5f5fe2904af10de8c1082570482d71882578af4c12b11c12b05c16b8bebfd   #>   53085e21bc192104af0804af3104af1404af10de9cad085e3b5cef9f42f00ae1cd0821784520   #>   788d2178a5207885f0e66c45f0dae17aff148257086f4608c12b02c16b0cc12b05c12b843767   #>   2b82d70ed7fba710bc42783342085e11085e63085e29085e21bc395b11bc76b8de3f85e015c2   #>   9b1142f08a40f01a43f04a41f00ae1cdd98ae0b5c3f5fe2904af10de8c1082570482d7188257   #>   0a8257086fce5604af1daef74f217885f0668410bc2210bcc610bc5210bc427873b62278ed70   #>   bd7f0ac12b84372384e01581e03586e09582e015c29bb315c16b87ebfd53085e21bc192104af   #>   0804af3104af1404af10de9cad085e3b5cef9f42f00ae1cd0821784520788d2178a5207885f0   #>   e66c45f0dae17aff148257086f4608c12b02c16b0cc12b05c12b8437672b82d70ed7fba710bc   #>   42783342085e11085e63085e29085e21bc395b11bc76b8de3f85e015c29b1142f08a40f01a43   #>   f04a41f00ae1cdd98ae0b5c3f5fe2904af10de8c1082570482d71882570a8257086fce5604af   #>   1daef74f217885f0668410bc2210bcc610bc5210bc427873b62278ed70bd7f0ac12b84372384   #>   e01581e03586e09582e015c29bb315c16b87ebfd53085e21bc192104af0804af3104af1404af   #>   10de9cad085e3b5cef9f42f00ae1cd0821784520788d2178a5207885f0e66c45f0dae17aff14   #>   8257086f4608c12b02c16b0cc12b05c12b8437672b82d70ed7fba710bc42783342085e11085e   #>   63085e29085e21bc395b11bc76b8de3f85e015c29b1142f08a40f01a43f04a41f00ae1cdd98a   #>   e0b5c3f5fe2904af10de8c1082570482d71882570a8257086fce5604af1daef74f217885f066   #>   8410bc2210bcc610bc5210bc427873b62278ed70bd7f0ac12b84372384e01581e03586e09582   #>   e015c29bb315c16b87ebfd53085e21bc192104af0804af3104af1404af10de9cad085e3b5cef   #>   9f42f00ae1cd0821784520788d2178a5207885f0e66c45f0dae17aff148257086f4608c12b02   #>   c16b0cc12b05c12b8437672b82d70ed7fba710bc42783342085e11085e63085e29085e21bc39   #>   5b11bc76b8de3f85e015c29b1142f08a40f01a43f04a41f00ae1cdd98ae0b5c3f5fe2904af10   #>   de8c1082570482d71882570a8257086fce5604af1daef74f217885f0668410bc2210bcc610bc   #>   5210bc427873b62278ed70bd7f0ac12b84372384e01581e03586e09582e015c29bb315c16b87   #>   ebfd53085e21bc192104af0804af3104af14a983f7bdab77db78f58d7f7ecd7b79ad280b8257   #>   0a82d716d7fba710bc42783342085e11085e63085e295206efcc33170dba2c76ceccfc569516   #>   c12b05c16b8bebfd53085e21bc192104af0804af3104af14e98277f29641af6ddecd715de910   #>   bc5210bcb6b8de3f85e015c29b1142f08a40f01a43f04a912a78a7ff20a8b6f9f43c579606c1   #>   2b05c16b8bebfd53085e21bc192104af0804af3104af14a982f790a0d66179ae2c0d82570a82   #>   d716d7fba710bc42783342085e11085e63085e29d204ef0b0343c13be8c55cd7961cc12b05c1   #>   6b8bebfd53085e21bc1921d1c1fbc193773fd666712d1911bc96499f9104af146982f7d020ec   #>   f05cd7961cc12b05c16b8bebfd53085e21bc192151c17bcb9683ca279d3edf3ee503ab0b4a8f   #>   e0b54cfa8c2478a54813bcab6bc1bb669e4b4b81e09582e0b5c5f5fe2904af10de8c90fac1fb   #>   eaa6eabc53186777496911bc96499f9104af14298277467f2d78e711f2d26404af1404af2dae   #>   f74f217885f06684d40ddea70a55279efe17da5e552a04af65d26724c12b458ae07d5debdd20   #>   7823dfd52545f04a41f0dae27aff148257086f4648bde07d73f99a134fff71b6979506c16b99   #>   f41949f04a91227827d7095e212fc54bf04a41f0dae27aff148257086f4648bde0dd2374e629   #>   487e1e2fc16b99f41949f04a91e639bc0b6abdbb50ae6b4b8ee09582e0b5c5f5fe2904af10de   #>   8c903ac1fbacf67cba93ecaeeaedf37eb2d48085d73cf06f496e4cf05a267d4612bc52a409de   #>   6db5e0dd2ed7b52547f04a41f0dae27aff148257086f46489de03d4e3bf77ccbe69adacf5cb8   #>   e771b77a3efee604af65d26724c12b459ae0bd421b3a57e5bab6e4085e29085e5b5cef9f42f0   #>   0ae1cd08a913bcdfd3ce3d7d26da5bd2d49daa1e7891bfc6de9ee0b54cfa8c2478a54813bc33   #>   c2af4bb6969017692078c520786d71bd7f0ac12b843723a44ef02ea3056ff090bd25fdace681   #>   177c32eef604af65d26724c12b45aab7167ea0f6add606fe3dcf95a541f04a41f0dae27aff14   #>   8257086f46489de05d38d0dc616d4517851e79b5e9310710bc96499f9104af14a982b774c53c   #>   55dff6f35c99e3bad22178a520786d71bd7f0ac12b843723a44ef0aea207ef785b0bfa60c9f0   #>   439f1f7304c16b99f41949f04a912e784b772daebee997b827bf55a545f04a41f0dae27aff14   #>   8257086f46489de0dd46ebdd01efd95ad035da63af137304c16b99f41949f04a9132784bef1e   #>   bb5ce7b7fc72c7599b370910bc5210bcb6b8de3f85e015c29b11522778476bd1f9136b0b1aa1   #>   3d769f571b1f41f05a267d4612bc52a40ddeb2676ebee49667f2594d5604af1404af2daef74f   #>   217885f06684d409deb7b527f1de606d411be84fa788f9d74d82d732e93392e0952243f00a44   #>   f04a41f0dae27aff148257086f4648bd775a3b33949c9bd85bd0f27af05eddf80882d732e933   #>   92e09582e015c29bb315c16b87ebfd53085e21bc1921f582b7bd58539c4bbc626f41ebe8c13b   #>   aef11104af65d26724c12b05c12b8437672b82d70ed7fba710bc42783342ea056fe9fdedaa82   #>   73196b2fd150b69d1ebcff6c7c04c16b99f41949f04a41f00ae1cdd98ae0b5c3f5fe2904af10   #>   de8c90bac15b6a3fbde779bc7d776bb3b9a03f68bdbb6ccc1104af65d26724c12b05c12b8437   #>   672b82d70ed7fba710bc42783342ea076fa9f4d6f95bacb0c0921b1ef594d5f594260e0e07ef   #>   e1314710bc96499f9104af1404af10de9cad085e3b5cef9f42f00ae1cd08890a5e570e0bf5ee   #>   c26fc71c40f05a267d4612bc5210bc427873b62278ed70bd7f0ac12b843723445af07eb06e4d   #>   eff6bd31ee0082d732e93392e09582e015c29bb315c16b87ebfd53085e21bc1921d282b7f4ca   #>   aa55bddbefacd8db13bc96499f9104af1404af10de9cad085e3b5cefb9cc514b000020004944   #>   41549f42f00ae1cd081117bca57776ecd3d3bb4bdd167f7382d732e93392e09582e015c29bb3   #>   15c16b87ebfd53085e21bc1921f282b754ba7ff842e5daedf39dd33e48706382d732e93392e0   #>   9582e015c29bb315c16b87ebfd53085e21bc19211283b7549afed2df9e7827d94d095ecba4cf   #>   4882570a8257086fce5604af1daef74f217885f06684c80cde14085ecba4cf4882570a825708   #>   6fce5604af1daef74f217885f0668410bc2210bcc610bc5210bc427873b62278ed70bd7f0ac1   #>   2b84372384e01581e03586e09582e015c29bb315c16b87ebfd53085e21bc192104af0804af31   #>   04af1404af10de9cad085e3bbe90a2324266b95e44d3e6747ced7a094dabfcb5f0e1abf8caf5   #>   129af565e54fc287afe24bd76b48a81566e46cd78b68da6c0fa68b2f67ab969f2e9cad2c8b98   #>   912d13bc00acf9df55dbaf34ff92eb1ffdbceb8500006042cb04ef675254fe9bf96bd78b68da   #>   9c8e2f5d2fa16995bf165fb95e44d33a3abe70bd04dd458b75bfef449f1ddf8cbff5e7953f89   #>   96fffb54fe2a3e77bd8684a4cfc8cad3be66b95e44d3667b305d385b09e1c78c9479b6aa2b62   #>   46b64cf0ba7e4a88c2737885f0e65951e29ec33bf567556f2dbcf8fdb1b7e739bc96499f913c   #>   87570a9ec32b8437672b9ec36b87ebfd53085e21bc1921e2827744506da167e26e4ff05a267d   #>   4612bc5210bc427873b62278ed70bd7f0ac12b843723445af05e1cd45a7d46cc0104af65d267   #>   24c12b05c12b8437672b82d70ed7fba710bc427833428405ef94a542c11b8c8e3982e0b54cfa   #>   8c2478a5207885f0e66c45f0dae17aff148257086f4688b0e0bd36dcbbc177628e20782d933e   #>   23095e29085e21bc395b11bc76b8de3f85e015c29b11222c7877d382b7cf6b8d8f20782d933e   #>   23095e29085e21bc395b11bc76b8de3f85e015c29b11222c7837d48237b8a7f11104af65d267   #>   24c12b05c12b8437672b82d70ed7fba710bc427833428405ef0a7af05eddf80882d732e93392   #>   e09582e015c29bb315c16b87ebfd53085e21bc1921c282f7db7af08e6b7c04c16b99f41949f0   #>   4a41f00ae1cdd98ae0b5c3f5fe2904af10de8c1061c1bbad1ebc31afc44bf05a267d4612bc52   #>   10bc427873b62278ed70bd7f0ac12b8437234458f09ea7f5ee32314710bc96499f9104af1404   #>   af10de9cad085e3b5cef9f42f00ae1cd081116bc6fcc1b0ede43638e20782d933e23095e2908   #>   5e21bc395b11bc76b8de3f85e015c29b11222c784b87847a77e1b7620e20782d933e23095e29   #>   085e21bc395b11bc76b8de3f85e015c29b11222d78df5fbba677fbfe29ee0082d732e93392e0   #>   9582e015c29bb315c16b87ebfd53085e21bc1921d282b7f4d2cad5bd7b7aeced095ecba4cf48   #>   82570a8257086fce5604af1daef74f217885f06684880bded25bdba9defde64df13727782d93   #>   3e23095e29085e21bc395b11bc76b8de3f85e015c29b11222f784ba57b7758a092bb6b9ff85e   #>   821b13bc96499f9104af1404af10de9cad085e3b5cef9f42f00ae1cd089118bca5d2b4ffbb77   #>   fc9bc96e4af05a267d4612bc5210bc427873b62278ed70bd7f0ac12b8437234466f0a640f05a   #>   267d4612bc5210bc427873b62278ed70bd7f0ac12b84372384e01581e03586e09582e015c29b   #>   b315c16b87ebfd53085e21bc192104af0804af3104af1404af10de9cad085e3b5cef9f42f00a   #>   e1cd0821784520788d2178a5207885f0e66c45f0dae17aff148257086f4608c12b02c16b0cc1   #>   2b05c12b8437672b82d70ed7fba710bc42783342085e11085e63085e29085e21bc395b11bc76   #>   b8de3f85e015c29b1142f08a40f01a43f04a41f00ae1cdd98ae0b5c3f5fe2904af10de8c1082   #>   570482d71882570a8257086fce5604af1daef74f217885f0668410bc2210bcc610bc5210bc42   #>   7873b62278ed70bd7f0ac12b84372384e01581e03586e09582e015c29bb315c16b87ebfd5308   #>   5e21bc192104af0804af3104af1404af10de9cad085e3b5cef9f42f00ae1cd0821784520788d   #>   2178a5207885f0e66c45f0dae17aff148257086f4608c12b02c16b0cc12b05c12b8437672b82   #>   d70ed7fba710bc42783342085e11085e63085e29085e21bc395b11bc76b8de3f85e015c29b11   #>   42f08a40f01a43f04a41f00ae1cdd98ae0b5c3f5fe2904af10de8c1082570482d71882570a82   #>   57086fce5604af1daef74f217885f0668410bc2210bcc610bc5210bc427873b62278ed70bd7f   #>   0ac12b84372384e01581e03586e09582e015c29bb315c16b87ebfd53085e21bc192104af0804   #>   af3104af1404af10de9cad085e3b5cef9f42f00ae1cd0821784520788d2178a5207885f0e66c   #>   45f0dae17aff148257086f46c87fa7bdfce254d7cb6806c16b99f41949f04a41f00ae1cdd98a   #>   e0b5c3f5fe2904af109e8c908fced9a06f10046b1ef186eb956446f05a267d4612bc5210bc42   #>   7872b622786d71bd7f0ac12b841f23e492c5826ef39fdcee7a311911bc96499f9104af1404af   #>   107e9cad085e6b5cef9f42f00ae1c508f95d506597e9ae97930dc16b99f41949f04a41f00ae1   #>   c5d98ae0b5c7f5fe2904af10ad3642a6bef8c8cbe1a23d25a8f12b270b6b1ac16b99f41949f0   #>   4a41f00ad16a67ab0804af2daef74f21788568a911d27ef51603cb453b78bb9baa2f7da27f6d   #>   f006e31c2daf3904af65d26724c12b05c12b444b9dada211bcb6b8de3f85e015a29546c853df   #>   564dfbbd177a2fde2ed4bbc1daee96d80482d732e93392e09582e015a295ce560d10bcb6b8de   #>   3f85e015a28546c89fbf5115b58b3ddc73f1a479c2c11b8c77b9ccac08ded4265c70e48127dd   #>   3c25e3d1d26724c12b852fc1fbdc3987ffe6d43ba6b95e48762d74b66a84e0b5c5f5fe2904af   #>   10ad33429e5ea8266a9778b9fbf2abb5de0d46395d6846046f4ae3d6ebfad31ebcdfc44cc74b   #>   9f9104af145e046ffbd835bbbe5f163a62b2ebb564d53a67ab86085e5b5cef9f42f00ad13a23   #>   648350d56ed57df9283d78f771bad08c08de54a6febcf7cf7bc89d59ee41fa8c2478a5f02178   #>   276fd9fbfdb2f423ae579351eb9cad1a22786d71bd7f0ac12b44cb8c901bb5acbdafeb8a83f5   #>   e0ddc1ed52b32178d398fea3ea3ff0fe3764b80be93392e095c283e07d77edeaef97c10fb85e   #>   4f362d73b66a8ce0b5c5f5fe2904af102d334276d0b2f6975d579ca407efbe6e979a0dc19bc6   #>   feb57fe2f33f95fe2ea4cf4882570a0f82b758fbfdf2cdd75d2f289396395b3546f0dae27aff   #>   148257889619210b6859bb6cd715d7ebc17b9adba56643f0a6f078bfd01ff94fd2df87f41949   #>   f04ad1fac13b2e3c22f774bda24c5ae66cd518c16b8bebfd53085e215a65844cd2b3b6ffccce   #>   6b260fd4aef9a7e3c56642f0a6304cfb337f38fea010e93392e095a2f583f77bdaf07cd5f592   #>   b26895b3550c82d716d7fba710bc42b4ca0899a0076ff076d7553f0b5fbe91dba56644f02637   #>   7541ed2fc3a1a9ef44fa8c2478a568f9e07d23fc0f2241709eeb3565d12a67ab1804af2daef7   #>   4f2178856895113259efdd81ed5d573d1ffa116fdffbdd2e35238237b947f5bf0d9ba6be13e9   #>   3392e095a2e58357ff8ddf6057d76bcaa255ce5631085e5b5cef9f42f00ad1322364716d64af   #>   de73d5c5b5971feb7299d911bcc9ddaa9fc0574a7d27d26724c12b45cb07ef1ff4ef971fba5e   #>   53162d73b66a8ce0b5c5f5fe2904af102d3342f6d046f621eaba53abffc5eed7ed0e57d90482   #>   37b99bf513f80aa9ef44fa8c2478a568f9e03d57ff7e49ff2f2202b4ccd9aa3182d716d7fba7   #>   10bc42b4cc0879a04f6862f77fa6f7cab12bf75cfacdcbdc2db139046f720feb27f0efa5be13   #>   e93392e095a2e583f74ffaf7cb70d76bcaa265ce568d11bcb6b8de3f85e015a27546c8f6a189   #>   5df362bb5f5dbfcd2241b0d066e7bce76a794d2378939b329f7602ff6dea3b913e23095e295a   #>   3e785f0effb42008ce74bda62c5ae76cd510c16b8bebfd53085e215a6784bcb942cdc0fed6fb   #>   d5577674fcb734f503574b3382e04da1a89dc0ef4b7d1fd26724c12b45cb076f69bdf0b74bdf   #>   175c2f298bd6395b3544f0dae27aff14825788161a21cfad5c35b0bffd4acd7595e06d71046f   #>   0a0f867f6495fe190d04af1504af04dabbf3b4e4331a5ae96cd508c16b8bebfd53085e215a69   #>   84bcbd7bcf2fa70df875e8a7b904af10b6de5af817b5e7ef818fa6bf0be93392e095a2f583b7   #>   b479edf7cb90175d2f2893563a5b3540f0dae27aff14825788d61a214f1db6f642c1c2df3966   #>   42f80a8257085bc13b6583eaf3779f4b32dc85f41949f04ae141f04e5aa9fafb659edb5daf27   #>   9bd63a5b4522786d71bd7f0ac12b84372384e015c156f096dedbaef7fc3df89a2cf7207d4612   #>   bc527810bca5b6eff77ebf2c7ca7ebd564e4cdd98ae0b5c3f5fe2904af10de8c108257046bc1   #>   5b6abf62f9aed377bf61cf67ba03e93392e095c287e02d4dbfacd0fd7cb05fbee17a2d597973   #>   b62278ed70bd7f0ac12b84372384e015c15ef09693f7c1e3f71dfedb316d190f973e23095e29   #>   bc08ded2ec590f1cbbd7ae875cf98eeb8564e7cdd98ae0b5c3f5fe2904af10de8c108257049b   #>   c1db24e93392e095c293e0e56c2504c16b8bebfd53085e21bc192104af0804af3104af1404af   #>   10de9cad085e3b5cef9f42f00ae1cd0821784520788d2178a5207885f0e66c45f0dae17aff14   #>   8257086f4608c12b02c16b0cc12b05c12b8437672b82d70ed7fba710bc42783342085e11085e   #>   63085e29085e21bc395b11bc76b8de3f85e015c29b1142f08a40f01a43f04a41f00ae1cdd98a   #>   e0b5c3f5fe2904af10de8c1082570482d71882570a8257086fce5604af1daef74f217885f066   #>   8410bc2210bcc610bc5210bc427873b62278ed70bd7f0ac12b84372384e01581e03586e09582   #>   e015c29bb315c16b87ebfd53085e21bc192104af0804af3104af1404af10de9cad085e3b5cef   #>   9f42f00ae1cd0821784520788d2178a5207885f0e66c45f0dae17aff148257086f4608c12b02   #>   c16b0cc12b05c12b8437672b82d70ed7fba710bc42783342085e11085e63085e29085e21bc39   #>   5b11bc76b8de3f85e015c29b1142f08a40f01a43f04a41f00ae1cdd98ae0b5c3f5fe2904af10   #>   de8c1082570482d71882570a8257086fce5604af1daef74f217885f0668410bc2210bcc610bc   #>   5210bc427873b62278ed70bd7f0ac12b84372384e01581e03586e09582e015c29bb315c16b87   #>   ebfd53085e21bc192104af0804af3104af1404af10de9cad085e3b5cef9f42f00ae1cd082178   #>   4520788d2178a5207885f0e66c45f0dae17aff148257086f4608c12b02c16b0cc12b05c12b84   #>   37672b82d70ed7fba710bc42783342085e11085e63085e29085e21bc395b11bc76b8de3f85e0   #>   15c29b1142f08a40f01a43f04a41f00ae1cdd98ae0b5c3f5fe2904af10de8c1082570482d718   #>   82570a8257086fce5604af1daef74f217885f0668410bc2210bcc610bc5210bc427873b62278   #>   ed70bd7f0ac12b84372384e01581e03586e09582e015c29bb315c16b87ebfd53085e21bc1921   #>   04af0804af3104af1404af10de9cad085e3b5cef9f42f00ae1cd0821784520788d2178a52078   #>   85f0e66c45f0dae17aff148257086f4608c12b02c16b0cc12b05c12b8437672b82d70ed7fba7   #>   10bc42783342085e11085e63085e29085e21bc395b11bc76b8de3f85e015c29b1142f08a40f0   #>   1a43f04a41f00ae1cdd98ae0b5c3f5fe2904af10de8c1082570482d71882570a8257086fce56   #>   04af1daef74f217885f0668410bc2210bcc610bc5210bc427873b62278ed70bd7f0ac12b8437   #>   2384e01581e03586e09582e015c29bb315c16b87ebfd53085e21bc192104af0804af3104af14   #>   04af10de9cad085e3b5cef9f42f00ae1cd081119bc1fdc78fcaf0e3fefd944b725782d933e23   #>   095e29085e21bc395b11bc76b8de3f85e015c29b11223078df18396fd0e9dbb725b835c16b99   #>   f41949f04a41f00ae1cdd98ae0b5c3f5fe2904af10de8c1079c17bc7428132626aeccd095ecb   #>   a4cf4882570a8257086fce5604af1daef74f217885f06684880bde1bfa07557e382deef604af   #>   65d26724c12b05c12b8437672b82d70ed7fba710bc42783342a405ef93f3073546c61d40f05a   #>   267d4612bc5210bc427873b62278ed70bd7f0ac12b843723445af0feb4b67783be8fc51c40f0   #>   5a267d4612bc5210bc427873b62278ed70bd7f0ac12b8437234458f03e1a84ed187304c16b99   #>   f41949f04a41f00ae1cdd98ae0b5c3f5fe2904af10de8c1061c17bb816bcf3c7fcde1ac16b99   #>   f41949f04a41f00ae1cdd98ae0b5c3f5fe2904af10de8c1061c1bb9916bcc1438d8f20782d93   #>   3e23095e29085e21bc395b11bc76b8de3f85e015c29b11222c7857d383f786c64710bc96499f   #>   9104af1404af10de9cad085e3b5cef9f42f00ae1cd081116bcabeac1fba7c64710bc96499f91   #>   04af1404af10de9cad085e3b5cef9f42f00ae1cd081116bc9beac1fbf7c64710bc96499f9104   #>   af1404af10de9cad085e3b5cef9f42f00ae1cd081116bc8768bd3bf883c64710bc96499f9104   #>   af1404af10de9cad085e3b5cef9f42f00ae1cd081116bc7fd78277bb9823085ecba4cf488257   #>   0a8257086fce5604af1daef74f217885f06684080bded20f43bddb27e6190d04af6dd26724c1   #>   2b05c12b8437672b82d70ed7fba710bc42783342a405ef3f06d506ef1e710710bc96499f9104   #>   af1404af10de9cad085e3b5cef9f42f00ae1cd089116bca52bfb56f7ee06316f3b41f05a277d   #>   4612bc5210bc427873b6227853681f7ff7ed8f4c9c13be78ceeb0f8dbbefb9cf1b1eea7aff14   #>   8257086f4688b8e02dddba606fef6ef14eeccd095ecba4cf4882570a8257086fce56046f62cf   #>   1e5aecf4cb3b6b9277ce5dfb745e3c6cf4ff1a1cec7aff148257086f4688bce02dbd38a27f57   #>   eeae78757bfcad095ecba4cf4882570a8257086fce56046f42b32e292a4755a5ed67bf5717ef   #>   3529fa70d7fba710bc4278334204066fa934e9b243468c1cf570a2db12bc96499f9104af1404   #>   af10de9cad08de8446978b76fb5137dd7ec99ee50f8ef9bae7e23927973fddf5a27157ef5ffe   #>   ff3da39629689813bc4278334244066f1a04af65d26724c12b05c12b8437672b823799f1e59e   #>   ddf7edca475f5e5afef0c69ecbff52fee4b84fca1fcc195bfee8c4c8e35def9f42f00ae1cd08   #>   21784520788d2178a5207885f0e66c45f0263267ff6271d894ee4fce2a1687ffa7ebc32ff628   #>   164776ffba5a25845f8dba03d7fba710bc42783342085e11085e63085e29085e21bc395b11bc   #>   894c2cc7ecd53d9f947628166fe9faf0a1f2e5e3bb2ffe7478b17846d41db8de3f85e015c29b   #>   1142f08a40f01a43f04a41f00ae1cdd98ae04d645c396cdf549f1d5d2cfeaeeba3d38bc55fa8   #>   e7f38e2e16877f197107aef74f217885f06684f811bc0ffdee7b2bafbae9618fb85e4c6604af   #>   3104af1404af10de9cad08de442a2fd1a0c2b6e3f2f267ed950f660f2f16cf5217579ee73b21   #>   e20e5cef9f42f00ae1cd08f121789fdface7757b7ff294ebe56444f01a43f04a41f00ae1cdd9   #>   8ae04da4f2b4dddecf6e2a97edb3950fa6943ff8b3bab854feecce883b70bd7f0ac12b843723   #>   c483e0bdb1eadd88e7bfc1f57ab221788d2178a5207885f0e66c45f026727eb1b863ef67d796   #>   cbf68eca07cff4946fa7393b178ba323eec0f5fe2904af10de8c90d60fde3bfa54bf1771ff3b   #>   5c2f281382d71882570a8257086fce56046f225795cbb6770d67973fbba4f2c1dde50f26f7de   #>   ea57c5e2efab0efa708a32f343292ac1fbb9eb45346d56c727ae97d0acced7f9f8d4f52a9ad6   #>   d1f13fd74b68d62bf3053586bce97a455994ff3efdc7f51a128a18b2ae97a5cc2a2fe64bd78b   #>   68dad71e4c97395e9cad6673b612a2a3e323d74b48286246da0ade47cb65fb70cf27b3f6287f   #>   766ee5a35b6b3ab8e3b062f1d0aa834e5e4fd9c3d23a01a4f48b20e477c98e9bf3dcb987fce6   #>   e4bb3fcb77750000d80bde0f7728160f9eddfd49e5b5c88aa7543eaa3cb7e1a3de5b1d532c1e   #>   507510c10b88f7affee1e01dfc6982c3665fb77cf7ad0ffb77ee6b0400cce5acbdd3da39e5b4   #>   bdb2ebc3b7475482f7f8ca8757943fa83a399e502cee5b750cc10b88f7a770ef06c13df1477d   #>   b46defcd17fd47feab0400ccd5ac05ef8c4ae51e3fe193afa6dc32bcb8c32ec5e269954bf59f   #>   f0ee5f750cc10b88778c1ebc67c51ef4d15ad5b71ff89885750200e662d682b763c2b0a2726f   #>   b97e2fa85cd8f839bcaf3da8fcf37f52547e0de04bd78b68daec8ecf5c2fa16995bf229fbb5e   #>   44d33a3a3e75bd8426694fe10d8203630fdabaf68045deb0b0d0c63eeee8f8d8f51a128a18b1   #>   ae97a5547e69ed2bd78b68daac8e2f5c2fa1697e9cade6b4fed9ea635fce569fb85e42421133   #>   d25ef0764c3ab83b77777df8cb9e371aaebc4ac3bbbd3709bd4a4335d7af72a1f0b2644278f3   #>   422fadfeb26423f5e03d2cee985bc2478cb0b1d286785932637859322978593221bc395bf1b2   #>   6489cdf9bfcb8ffcf581a3eefe6fc7a472e73e52b9e8e9f207cff5de62175e87d71282578ace   #>   e09de97a15cd38410fde3fc41db361f888be2fda586a2304af3104af14ae83d7cc602378a520   #>   7833b9b7dcb9532a1f54de69adf7175c4a3def475187ebfd53085e213c1921b3c6edb2d43cfd   #>   96d8eaa229ae5792d5837af03e1773c86b7db543ceb4b1d446085e63085e295c06ef7d23579e   #>   375878c3135e6dfa9e085e2908de4c8e2f16f7ae7c2b76cc1a562c9ea32e7ebc1cbc13220e71   #>   bd7f0ac12b841f23e4ae357a8a6fe96b5caf25a3f615c3f1ba6edc2137ea8d3cccc6521b2178   #>   8d2178a57017bc2f6cd1f39d3df8c8e94dde17c12b05c19bc5b4ed8bc51bbb3e3cb558dc7d56   #>   cfe517158bc3be8c38c6f5fe2904af105e8c90b3ab5ec3b6cf21ae5793d155e1781d1b77c41f   #>   f4e0fdbe8d953642f01a43f04ae12c78ef5fb4ea7b7bb3b79bbb3382570a82378b938bc51d67   #>   767df860b1587ca2fbe24f87178ba7471de37aff148257081f46c8157d6aa2ef44d7ebc9e6df   #>   3bd5b6ebcf638f20789b227d4612bc52b80ade7f0ea9f9e6fed18ca6ee8de09582e0cde0faa2   #>   fa016fc7e7bb178bfb7dd1f5f1e5e5cb5f8e3ac8f5fe2904af101e8c9017e7ad8dbebe0fba5e   #>   51261f7efcbdeaaf62b3a9b147f09486a6489f9104af148e8277e6daa1efee139aba3b82570a   #>   8237b1539ff8bcf3ffdf3ba5dcb5077ed57371e585c98eafbcd9da9cdbb7ef7efbb5ba5cef9f   #>   42f00ae1c108d9cdf08f39279cf6b31ffee41763dab42ba6dff5dbed36ddeeb77735fb64bafa   #>   3eecf862a4fa5175bffd133cc8ebfa2fad9d95cbd25220788d2178a57014bc9787bfbb17d467   #>   520a04af14046f623b17773af8cc0b4efd75e59578f7fb97ba78f6a8ca2bf38e1977cd01e5ff   #>   dfa33df270d7fba710bc42b4fe08796fa0967dff6ce2ee9e2d7657e780fd27d55e73c572dd77   #>   bffc554d2d38c287e53f88e776185c79800576199fe890ef86bff07ebc2c5972d26724c12b85   #>   a3e0dd441b6ce735737704af14046f623bf7bed1dab1d5abf9f41875f99e6dd187bbde3f85e0   #>   15a2f547c80dda69213823fbbdddba60efdd2cf548d5155347543dc02e39bcfa5925783b3e9a   #>   f2d08d373d12ff6c86eec586bf70de782205e93392e095c24df0bed33ffced1d6cd1ccfd11bc   #>   5210bc895db36f77d61efad09c9a2be6dcb177e7e5c32ef8a8c1e1aef74f21788568fd11728a   #>   1ebc2333dfd9cdfdaaef6748ef8f8adbb7ab7984edda4d2cbd4657f0a63b669bdaaf7b91978d   #>   af2a2d82d71882570a37c1fb0f7db0add4ccfd11bc5210bc29cc78eaee5bef7d72867ec59cd7   #>   1e1c77dfb39f353cd8f5fe2904af10ad3f420ed6cf0b3b64bdafe717a8bda355d4cf5a8f0f3d   #>   84f99782c812bc93d7a85ed3c0bf185f546a04af3104af146e82f70e7db00d69e6fe085e2908   #>   5e5b5cef9f42f00ad1fa23a4ce7bf2ee9df5be8687efe9f4ee2bde982f74c5fc6f185abe9225   #>   784b93b7ec5dd237ef37bda40c085e63085e29dc04ef43fa605bae99fb2378a520786d71bd7f   #>   0ac12b44eb8f902bf5f342d697ef79557bd983a5bb9fba70acf618c71afb02ba650aded2cccb   #>   96eb5acfe0df4e8abf75fe085e63085e29dc04efc43edad0f96133f747f04a3157046ffb7da7   #>   eebdd96a43175962c5f5763af4ea9767c51f9103d7fba710bc42b4fe0869d37fb7e3b18c7755   #>   e79d1c1eeeba661ded8a758c7d01ddb2056fd9c3a7edbfef31377f607a3dd910bcc610bc5238   #>   7a958675b5a17352337747f04ae17df0ce7ee4f035427f7517d8f18f759e879b37d7fba710bc   #>   42783042b60a9f16d6c87a4fbfd4837774e715ed03b42be69969ec0be89239784521788d2178   #>   a57014bc678467ce80179ab93b82570acf8377e2514be927d2b27e5bddfc55c303cd73bd7f0a   #>   c12b840723647cbfd037d6ad59ef695bfd9bb4eb990b6d75be7d4d3f8997e0b54cfa8c2478a5   #>   7014bc53878646cefe4ddd1dc12b85d7c1fbd036fa537194254ff9578343cd73bd7f0ac12b84   #>   0f2324f40a0afb64bea39df4efd0ae7f447ca7cef7eedba696df8de0b54cfa8c2478a57014bc   #>   a5bfd6fec3d29aef35756f04af141e07efa3bdef963278bd1d7f33eaacd1e79d7ad4ee9b2fad   #>   2e5de084ff66add70c5cef9f42f00ae1c508d9affab4b0ddb4ccf773809eb57fecba667eed8a   #>   f90dad5d21782d933e23095e295c056fe9eaea77915cb9a9273410bc72781bbc137b9e5eb8d2   #>   c89bda66575ff3e1a3a7fc6850d775432eb2f70b6caef74f217885f063845c30a4e7ac30ef71   #>   4dbc2584fea66d7dbadfca610bed9aa6def4a81e82d732e93392e095c259f096feb68a9a443b   #>   37fb4f4a04af14be06ef11f374fd4bc429afd5bdfa93b123ba9af75b1392066bb35cef9f42f0   #>   0ae1c908f9f094b52bdf492b1ed4d47b8d7df08d70d66ed07dcd182d78c71858750dbf8277ea   #>   adc7edf7dbd31f89bbb94bd26724c12b85bbe02d4d1fb359e5790d0beff640d37745f04ae16b   #>   f056ce8b03f779aa4180fe67cc9a951b8d8a2d55435cef9f42f00ae1cd08f9effbcf3c39b9d9   #>   bb392e9cb5b7775f316d85d0152b667fe244049f82f7ad83ba9f03b2fc65a65fccc21ce93392   #>   e095c261f0964d7df11f467e4196e095c2dfe05de8d8b8d71e9b73ef0f08de5645f04a510e5e   #>   1377f3c1b76ab376b8bae6ceda57fbed7f978987abe151f03e5af5b2349bbfe57a4951a4cf48   #>   82570ab7c16b0ac12b85afc13bf8e8ff24a9d087d61f95e46626b8de3f85e015c29b11622478   #>   4b2fd4bc82e08655efe6705ef58badf439d7c8a3d5f02778ff3aa87a13576ffae7ee39913e23   #>   095e29085e21bc395bf919bcd3927668e21b36cbf5fe2904af10de8c1033c15b7a6dc3de541b   #>   31a5fa9aeb1650572c78bd9907abe14df0beb668ed8fc9b771bda608d26724c12b05c12b8437   #>   672b3f83571ed7fba710bc4258192113efbbfe9e09b93e82f94883970000200049444154b1e0   #>   2dcdbcacf369f541bf4def095d3371bfaed78218f2ab89861eab8637c1bb7bf889d099df0824   #>   5fd26724c12b05c12b04c16b59c48c2478d3227885c87f84cc18b341df4af6ac70d43bf93d88   #>   b9e02d9b70ed1967dfd8a65d3cf5b4ae145ef3b4a9e61eab972fc13b35fcc677c186ae17559f   #>   f41949f04a41f00a41f05a16312309deb4085e21721f21cfaca1c267919b727b14a3c15bdffd   #>   bd6ff439b4f9d708d2f912bc97857b37e8fb9aeb55d5257d4612bc5210bc4210bc9645cc4882   #>   372d825788bc47c8fd0b5597cf39793d4cfec1fba7ea373d1a7883f907f02578f7d28237f893   #>   eb55d5257d4612bc5210bc4210bc9645cc4882372d8257889c47c80b8bd5944fbfdb727a9cdc   #>   83f791c1355fc8e0478d3f822fc1abbf295d90db7fe73445fa8c2478a520788520782d8b9891   #>   046f5a04af10398f90ed42e953f820fe982cf20edef66f87be90759a7807e3fa7c09de9feac1   #>   7bb6eb55d5257d4612bc5210bc4210bc9645cc4882372d8257887c47c8c37dc2ed734a3e0f94   #>   77f05eab45dcb5a61fc297e0dd93a7349841f04a41f00a41f05a16312363837791ba965cedbb   #>   3b9df6b72f53676b76aef74f217885c87784fc4e6b9fefe4f3407907ef0eda17b283e987f025   #>   782fd1b6aacf2bae575597f41949f04a41f00a41f05a163123638357ffa147afc58e9c993a5c   #>   b372bd7f0ac12b44be23646d3d7edecee581f20ede21da1732c4f443f812bc1f682f4bb6beeb   #>   45d5277d4612bc5210bc4210bc9645ccc8a682370816bf3b75b966e47aff148257887c47c8a2   #>   fa5ff6c77379a09c83f7fd3adfb5ef197e0c5f82b763b7f04edde87a51f5499f9104af1404af   #>   1004af651133b2c9e00dfa8c4d9daed9b8de3f85e01522df113248ffbb7e7f2e0f9473f0be5e   #>   e79bd6f48bcb7a13bcaf2c5cbb515bb85e5304e93392e09582e01582e0b52c6246c606ef0b2f   #>   fcb3f2fbea43f6bcf0af4f3cf7f0adc76e5cfe64a12b5f187fcf99dbcf5339270c7a2975bb66   #>   e27aff148257887c47c850bd139fcfe581720ede19da3fd307fd66187e0c6f82f7dff70ca8de   #>   a855f279124bf3a4cf4882570a82570882d7b2881919ff2a0dfffb41102c7665efefa7b5ed18   #>   04036ea97c347d64e5acb05dc2626d92ebfd53085e21f21d213fd13a71c1e9b93c5086e07de7   #>   a6b3475dfcb784af2eb6aaf685ac96e4b0f6072f3ee9ec1bdf4af410fe046fe9bec57bf769a3   #>   375c2f298af41949f04a41f00a41f05a163123638377ce9641b0c6b49a8b2eec13f47facf3a3   #>   ce5f6b7e2541ae36cff5fe2904af10f98e90f3b44edc259f074a1dbce3b7e9fa31e412c7267a   #>   2eee21da177248fc41ef1f57e8bce93c5b26799b0a8f82b7d4b67ff7935996bec8f40fc2cd91   #>   3e23095e29085e21085ecb2266646cf05e1d04f3bd1bbaeca02058e1abce8ff6289f19ce8d8d   #>   55135cef9f42f00a91ef0899acfdd6dabdf93c50cae06d3fbcaf5ad1520f2638e0f901a1af63   #>   c073b1c73cdafb848ebe87cc8cbdb94fc15b8efdeb8edc73e4090fc47fd9ee489f9104af1404   #>   af1004af651133323678570e82a3c3977d3428086eeefce8edf2d977dbb8bb30c2f5fe2904af   #>   10398f9033439db87d4e8f932e78db4754af69d05d090e3930f485fc36f6887b6bde8c78e7d8   #>   e74ef815bc2d40fa8c2478a520788520782d8b989171c1fb6af98cf7ac7669310886757df4ed   #>   205835e62ecc70bd7f0ac12b44ce23a47da79a4c5c29d9d359d34b17bcc7d7c6ebc213e20f99   #>   ba51cd211b4d8d3be085456a1fe4e8b803085ecba4cf4882570a82570882d7b288191917bcd7   #>   974f781f6a971e1a042b747df4eb20582ce62ecc70bd7f0ac12b44de2364caf0aae8fbd68b79   #>   3d4caae07d6160e8c7b5db253868d26655076c3629f6f63b871e23f6391004af65d26724c12b   #>   05c12b04c16b59c48c8c0bdeb3ca27bc2fb44b8f0b8279bb3e3a3e08fac7dc8519aef74f2178   #>   85c87f848c5ea2e7a90307bf9fdb83a40ade5f865a34e8f38f04474d3ff11bdd375fe8a4f897   #>   9a78ba6ff8417e1e7304c16b99f41949f04a41f00a41f05a163123e382b7f24cc6c9daa5e5f3   #>   eea0ae8fce501fe5ccf5fe2904af101646c8fb570dfbced0d5b73adbf43b35544b13bc33170f   #>   b7687044a203df1ab3fdda43d7de7e4c92e7651ca73dc690984a26782d933e23095e29085e21   #>   085ecb2266645cf05e5b3edf5dad5dba5c102cd7f5d19141b048cc5d98e17aff148257086f46   #>   48f2e07d5a6bd16013e30bfa91fe2031af4d46f05a267d4612bc5210bc427873b6f23c781f2f   #>   9feed69d15baf0cfe50b7fd2f5e1f020f8566cac9ae07aff148257086f4648f2e0bd536fd1e5   #>   8d2f680dfd416e6e7c04c16b99f41949f04a41f00ae1cdd9caf3e09d55f947d4636a2f7ba7f2   #>   a2f417777dbc6c106c1f5fab06b8de3f85e015c29b11923c786fd35b7469e30b5a497f906b1b   #>   1f41f05a267d4612bc5210bc427873b6f23c783b8eaa9cf046feb7ea92bf557a7781999d1fbf   #>   5cfef0a444c1da2cd7fba710bc427833429207efa37a8bae6f7c419be80f727fe323085ecba4   #>   cf4882570a8257086fce56be07efc74b57ce788b1dfed4679d9fbeffa71f779e0247775d7b78   #>   f9c3bf27afd626b8de3f85e015c29b11923c783f08bf6b5a10ec697c41fb6b8f316072e32308   #>   5ecba4cf4882570a8257086fce56be076fc7530b749df5fa2dfbadf55619d27d0adc7576d784   #>   2d5ff78d2f53856b56aef74f217885f06684a4785932edfd8e83c38d2fe81eed317e1c7304c1   #>   6b99f41949f04a41f00ae1cdd9cafbe0ed787231ed0cb857f7afb1bd74eeb9e78e4b51ad4d70   #>   bd7f0ac12b8437232479f0bedd5ffb56fc99f105b57f27fc1877c61c41f05a267d4612bc5210   #>   bc427873b6f23f783b4abfe85373fe2bdc91ae558d70bd7f0ac12b8437232479f03ea4f56eb0   #>   8ef915fd3594d5b1efe646f05a267d4612bc5210bc427873b69a0b82b7a3e3cd2356ec39fb0d   #>   fec9cd769ec310e27aff148257086f4648f2e0bd450fde420e4b3ab3e611567927eef604af65   #>   d26724c12b05c12b843767abb922782bc3f4ef378e39efca712f845f93d716d7fba710bc4278   #>   33429207affef4da60e53cd6747ed52fc76df87aeccd095ecba4cf4882570a8257086fce5673   #>   4bf0bae67aff148257086f4648f2e0fd3f3d7837cf65518ffcb0fbee173e6d5afcad095ecba4   #>   cf4882570a93c1db9e6014e483e09582e0b5c5f5fe2904af10de8c9014afd2b0ac16bca3725a   #>   d65327eebaf9b6bfbaf18324b725782d933e23095e294c05efcc6b7729f40f16dbfc9c770ddc   #>   596a04af14736ff046dd615e5cef9f42f00ae1cd084911bc87847bb7ffffe5b7b2c4085ecba4   #>   cf4882570a43c17bdf9a3d0367b18b9abfb7d4085e29fc0fdebbea5ffc9f75e30e34ccf5fe29   #>   04af10de8c9014c1fbe642a1e0dd2bbf852547f05a267d4612bc529809de31d56f78b3cf4c03   #>   eb4a87e095c2ffe09df7e97a977ebc91ede742b8de3f85e015c29b119222784b7fac7d85c0e5   #>   decc6d5d2910bc96499f9104af144682f7a6be3543e7772616960ac12b85ffc11b2c3a49bff0   #>   b31f06046f4b2378a54817bca5e3aa8bf79b8fe7b5aa54085ecba4cf4882570a13c13b71c1d0   #>   3f2b8d33b1b234085e29e682e00d566a0f5ff6e59601c1dbda085e2952066fe9f26fa813cf77   #>   5f4e7ad0b4db0fd87ae3ad0fbc239fdfb3ce1abc6f5efcf31f6fbcf3f14f9a5f511604af3104   #>   af142682f7d7e15f1c58abddc8da922378a5981b8237f8ee67b5177dbd4340f0b63882578ab4   #>   c15b6a3b7899ce5f57fbfe3589cf3b972fd37daa5ae68f69979744b6e07dfba041ddabfaf1f8   #>   3c569516c16b0cc12b8581e09d16febd812078d0cce2122378a5f03f78572dfffdde6176f525   #>   b34754fece9f9230544d71bd7f0ac12b8437232465f096fdf3aeebef7f2bf1ada78ea83a57ed   #>   9ce885c6d2c914bccfaed2bba80163cc2f2a3582d71882570a03c17bb7d6bbc19166169718c1   #>   2b85ffc1fbcee2e5bfe0bfa9ba60ce3e95bff247270d55535cef9f42f00ae1cd08491fbca9cc   #>   dca6e664b5adf95fb2ce12bc2f2c56b3aa4b8d2f2a3582d71882570a03c17ba11ebcc3cc2c2e   #>   3182570aff83b7e3d9c1e5bfe167f77e7e60e56ffcef9276aa31aef74f217885f06684e41cbc   #>   c785ce56c71b7f840cc13be3dbb58b1ae8fe590d04af3104af140682f7043d783733b3b8c408   #>   5e29e682e0edb8a75f10f4b9a5e7b3232a7fe1f79d9338544d71bd7f0ac12b84372324dfe07d   #>   6dbed0d96abed74c3f4486e0bd287c0efd91e945a546f01a43f04a612078ffa007ef8e661697   #>   18c12bc5dc10bc1d9796ff8a0f78acebe3132b7fdf7f3ebbf1017970bd7f0ac12b84372324df   #>   e03d5a3b5d1d6dfa213204efeadaaa9e30bdaab4085e63085e290c04ef583d780f36b3b8c408   #>   5e29e68ae0ed38aafc777ca1d72a1f9d5df9ebbed3d72942d514d7fba710bc42783342f20dde   #>   b5b5d3d5daa61f227df0fe9f7e123dcef4aad222788d2178a53010bc1f0cd6be57ef31b3b8c4   #>   085e29e68ee09d53f935ef65a675748ca9fc6ddfeacb54a56a88ebfd53085e21bc1921b906ef   #>   cc79b4d3d53ca67f6d2d7df05ea707afed7f26d510bcc610bc5298781dde11e16fd565671859   #>   5b7204af147347f0767cf183f25ff375fe7755e55d9e36fb2cfef63970bd7f0ac12b84372324   #>   d7e09da8a765f086e1c7481fbce7e88bdac8f0a25223788d2178a53011bccf0f087dab5e6164   #>   692910bc52cc25c1dbf161e539776b57de527be38f5354aa41aef74f217885f06684e41abc93   #>   eb04ef3b861f237df08ed61765fb37bf3504af3104af142682b77441ed77aaed17252378e598   #>   5b82b7e3dd25bafeb2affbdfe48d6a94ebfd53085e21bc1921f93e87777e2d2de737fd10e983   #>   f7363d787733bdaab4085e63085e298c046fe9e83e55dfa83fcee1ad6b6210bc52cc35c1db31   #>   a1f3d58dd68cba9fdcb9de3f85e015c29b11926ff06ea1a5e596a61f227df0be13fe57d22070   #>   fe666b04af3104af146682b774f5e23ddfa6038fb0fd04de12c12bc7dc13bc1d7fed17042b4f   #>   4f7c73d35cef9f42f00ae1cd08c937782fd6d2f262d30f91e165c9b40c1fd8667a556911bcc6   #>   10bc52180aded2bb27af5f7942e3f2bf79c1c09da546f04ae16bf0fea58ee1c13c97567dda44   #>   bc66e17aff148257086f4648bec13b7da5505aae34ddf4436408de07fb84567590e945a546f0   #>   1a43f04a612a78cba63effd4bb66ee293582570a5f83577f8a9da68978cdc2f5fe2904af10de   #>   8c909cdf5af8cfb52f4c36cfddc61f2143f096f60b55b8e95fa44b8fe03586e095c260f03a44   #>   f04a41f0dae27aff148257086f4648cec15b3abf6fd5b76ddff3cd3f4096e09dfed3ea61b2d8   #>   33e6579516c16b0cc12b05c12b8437672b82d70ed7fba710bc42783342f20eded20ddf50dfb5   #>   0bdd98c3fd6709ded2f45ff73eab61dd177358555a04af3104af1404af10de9cadfc0cde55e3   #>   3511af59b8de3f85e015c29b11927bf096da0e58a4332c173930975f0dcb14bca5d2435b74bd   #>   56c3ea634cbff55b2604af3104af1404af10de9cadfc0c5e795cef9f42f00ae1cd08c93f784b   #>   a5190f5c76c6a50fe4f48a421983b7547ae7b6d1675ef79ce9e56444f01a43f04a41f00ae1cd   #>   d98ae0b5c3f5fe2904af10de8c101bc19babccc12b0ac16b0cc12b05c12b8437672b82d70ed7   #>   fba710bc42783342085e11085e63085e29085e21bc395b11bc76b8de3f85e015c29b1142f08a   #>   40f01a43f04a41f00ae1cdd98ae0b5c3f5fe2904af10ffeaf8ea632f46c87f4b53edbf3d7d02   #>   9393be4305c16b99f41949f04a41f00a41f05a16312309deb4085e11665ebbd3378360beef9e   #>   e8fc2d699bf4e5b55b0d0982057f70a6abb731aaebe563d71914f45df267b724b931c16b99f4   #>   1949f04a41f00a41f05a16312309deb4085e091e58b3e7355c1738a9ddf5629a71cb0aeacd17   #>   2e76bd1665fae1f3f6ac6a83f1f13727782d933e23095e29085e21085ecb22666444f07e96b4   #>   4313dfb059aef74f217805f8e3c0aab740d97eaaebe5647752f5bba0fd4a48ba4fdebc6a51f3   #>   c7ff9097e0b54cfa8c2478a520788520782d8b989111c15bb86256920a9d38eca4243733c1f5   #>   fe2904af7be3fad7bce9df08d7ebc9eca2da772f3ccaf57a3acddcb26651831e8c3b80e0b54c   #>   fa8c2478a520788520782d8b9891916f2dbcea355fc635e8ab7bf50f46c5ddc814d7fba710bc   #>   cebdbd48e86daeffe87a45194d1850fb75f4b9cff58a2ace08edee32713f4127782d933e2309   #>   5e29085e21085ecb22666464f006c152674c6f10a0b3eeddb64ff946a312b4aa11aef74f2178   #>   9d3b2c0827d934d74bca6678f80bf9aeeb15954d0effe744707acc1104af65d26724c12b05c1   #>   2b04c16b59c48c8c08de5d3a4f74fd77baf5e3fad73f77cc529db7f8e643898bb549aef74f21   #>   785d6b5f325c64c1d86447be77cb59275c7877d257dbcadde401da17f28ceb35954a976b8b5a   #>   23e60882d732e93392e09582e01582e0b52c624646bd4ac383ab759deb066e75f63f43cf6d78   #>   ef867d87765dd9ff908fd2766b66aef74f21785d7b442bb2e057498e7b66a7ae5f751b72e09b   #>   792f3199ebf42fe434d76b2a9586e9ab7ab1f11104af65d26724c12b05c12b04c16b59c48c8c   #>   7c59b2afaf5ca6e774d77f8d6187fde1badbeebee3c6cb4ef8e5a60bf55cdcf7176f3511b069   #>   b9de3f85e075ed5abdc87e9ae0b053e751371f92f027c2393b59ff42f675bda652697d7d557f   #>   6e7c04c16b99f41949f04a41f00a41f05a1631231bbc0eef9797afa69ffa94817bbf96395eb3   #>   70bd7f0ac1ebda79fadfc6efc41f7560f5edfb5f99ff32e31dac7f213bb85e53a9b4bcbeaaab   #>   1b1f41f05a267d4612bc5210bc4210bc9645ccc8866f3c31e7af3beacf32ecb4f2a93333866b   #>   56aef74f21785dbb4afffbf8e3d88346d71e30e8610b0b8d73a2fe85ece37a4da5d277f455dd   #>   d9f80882d732e93392e09582e01582e0b52c6246c6bdd3dabfafd87efef0e96fad239fce92ac   #>   cd71bd7f0ac1ebdadff5228b7d26c0a4854247ac9fd39b3ccc7cf5b1c72725bcedd5fa177252   #>   3eab4a63477d55131a1f41f05a267d4612bc5210bc4210bc9645ccc8046f2dfcd5d363f6f9c1   #>   32951ff5f61df2ed1d8ebb735aea5835c1f5fe2904af6b3317d38aece6b8638ed20ec9e569bc   #>   4feef5cdca7daf71f45b496efd561f6d558fe4b1aa748ed716b560cc1104af65d26724c12b05   #>   c12b04c16b59c48c4c10bcdd66fdeff3e4796a9eebfd53085ee70e0c17d99253e20e595dabb8   #>   3dccaf6beac87e3df73ee4e204b77f5aff59aa80dfa6d35ee5381814f3426e04af65d26724c1   #>   2b05c12b04c16b59c48c4c1ebc8eb9de3f85e075aeed1ba1221b1d77c45b7a5aae647c599337   #>   aabeff83e30fb8405fd5a1c65795da8ff4553ddaf80882d732e93392e09582e01582e0b52c62   #>   4612bc6911bcee5ddfb7a6c7b68b7d3eee137ac4cd677a5133b7ac7d80b3628f385a5fd508d3   #>   ab4a4fff6178dc3346085ecba4cf4882570a82570882d7b2881949f0a645f00a706effaa1cdb   #>   ecbdd8db3faa47dc00d3bfb57661f801627ed5ab543a545fd52e861795c1cafaaaae6b7c04c1   #>   6b99f41949f04a41f00a41f05a16312309deb4085e096e5fae27c6061e9ae0ad825fd3236ea8   #>   e1154dd5def078d7b843ced257f51bc3abca60137d550f343ea271f0be71e6e6cb2f34749313   #>   9e37bd50c3085e63085e29085e21085ecb226624c19b16c12bc2d4f337abbc70c82a0725eaa8   #>   76ad4683ed0c2f689cf608833f8839e43e3d2dff687855191ca02d6ac0e4c647340ade6947cf   #>   d7732ffbbd6b7eb10611bcc610bc423c72f641fb1c73659beb65348be09582e0b5c5f5fe2904   #>   af10ff9a33fdbd2f928e905f6a1597e46514d2d05e3a2208c6c51c3273712d2d13bd9c59befe   #>   a27d1d3f8939a241f04edab4ea7ed610fd435e82d718825782f6ab57eafabeeb372cf6d955b2   #>   11bc5210bcb6b8de3f85e01522d50879669e50c40d8d7d25b3948a7af05e1077cca8f011b16f   #>   a06141fb7ae155dd15734474f04eddb8e68e5612d0f391085e63085e01a60cebfdc61b7899eb   #>   d53485e09582e0b5c5f5fe2904af10e94648f81feaaf31bd9c1feac13b2aee98292bd51eb0e8   #>   1ba65795c57da1ff3828c61d101dbc0787766447f3ab3586e03586e075aff6bf35fb98fe072d   #>   ab66ff7d9f95060f286c7961fcaf274b45f05a16312309deb4085e21d28d90699bd694d76f8d   #>   2f67673d78e34f324fd7bce3f1807b8daf2a93b36bbe8ad5629ec1db20785f1a14da913e31bf   #>   fee612c16b0cc1ebdedeb5df79031e72bda0ecfea17e8ff69b635caf252b82d7b2881949f0a6   #>   45f00a9172844c195ed55d07cd34be9c23f5e0bd3ffea86756ecbdf9c2771a5f543653d6a9fa   #>   22fadf107bfbc8e03d56db92ddccafd61482d71882d7b947fb86bef3beeb7a45995d3fb8eacb   #>   d86786ebe56443f05a16312309deb4085e21d28e90f6cb86760fcdf5f3f849ea582deefa87ab   #>   fafd3a87bd7554f74f41fbedf16a8a47ab7757a6b4ef52f3652cf078dc013dc13b35fc0271da   #>   b38183454cbffab13904af3104af73fa3f38fdc5f59232ba6740cd97f11bd7ebc986e0b52c62   #>   4612bc6911bc42a41f2133ee3e6497cd773dee1fb92ce73ced0c1354bf28c12307ac3c309877   #>   8d839f0c1ff7d515df99370806ad7672e286bd738fa1f3040bac7fdc2b46d6ad0bbfe3f12a71   #>   2f745c09decf2efac9a2419fc5b7b9785ad515e1b7802e93fb124904af3104af6b5317d0bef3   #>   0e70bda66c262f16fa3a6e75bda24c085ecb226624c19b16c12b84b011f20b3deeae5657b6ed   #>   d4a7fbb27ebbd73e2576ec2a3db75e22d96bf03ef3fd9e03e63d32c15b6ea4f7c112e1afe3bc   #>   9823cac13bb6e7a7e7c172bd27a4a9fa9604b13f2e7686e03586e075ed1ffa77de86aed794cd   #>   11e1af6375f34f47b340d8d92a2b82d716d7fba710bc42081b213fd14f31a7f75cf7e4b2d503   #>   bbfa07bfa7f7abbae63709febdffceea5f73dbfc9d1cbe90abb5afe3db31477cd8f1fbaa5bf7   #>   ed7d718a81fa9ebc94c38acd20788d21785dd39f60152ce37a4d99b417b42fe43ed76bca42d8   #>   d92a2b82d716d7fba710bc42081b213fd54f3167745ff5c6d09a8bab5ef6e092da037e1ffb28   #>   e3e7af39e0a739fc0ac708edebe813f3e4890fcfa9bdfd853d57aca8ddd5805c7e286d04c16b   #>   0cc1eb5a9de05dcef59a327948ff420e71bda62c849dadb222786d71bd7f0ac12b84b011b2bb   #>   3e99afedbe6aabd0e5bfe839e6f9d08f40fbc6bdaec3f4954377758af92f6403fd0bb9bbf111   #>   8f847e237cc0b3dd578cd4eee9c7e6d76b0ac16b0cc1ebda78fd9b7823d76bcae40afd0b31fd   #>   a6f056083b5b6545f0dae27aff14825788f423e4833fedfdd30db6fedd3d067e2c3ae9d2dd36   #>   df70bba31ee9bd64b43698fbbcdc75cd5fc357f47ba2fb985dc3d76c1cf3b0e7870f18f276f3   #>   5f4bc8f2fa29e6eac6476c16befd0edd57dca7ddd3a546973a71f4881f7e7787e3cc3c2f98e0   #>   3586e0756dda42dab7de41aed794c999fa346ac97227782d8b9891046f5a04af106947c8f433   #>   17ed9e98abded4e443bf7b58cf4b436efcb79ecb2686dfbc3858affb9addb491ddfdb617efea   #>   cf717db6cea355595f3bc0fc2bb1afa33d46707bc3035ee813befd3c93baafda2274c5ea269f   #>   8231e9809e172cdadcc40b6f10bcc610bccee94f4c12fc9e2f0d5ca27d1dc196aed79405c16b   #>   59c48c2478d32278854839422657c7d79e4d3d95f4a5b57befa9df093d97ee1b1ecc3d59bd68   #>   f88a60d5ae2bfea40ff3d3eb3c5caf89e157934ff0bebfa96da7afaa71869fab1f7065f7552f   #>   d4bea6d0bc0f1b5ce73fabde97798081ee27788d21789d7bb27fe85b7233d72bcae61e7db88c   #>   74bda62c085ecb2266646cf02ebbecb2cf69178e295f9aa4520d72bd7f0ac12b44ba1132a5f6   #>   87a37b37f1c0af2d55735767765f3c71c9dab9bc75f7e593f5913da0ebe5184ed6afd9b7e123   #>   3fa01fb056135f487de197e18dfd759703f5551dab56bc70d5a583ae37b8cc098bd43c62f3cf   #>   9520788d2178ddfb4ded77e460b9af07d8d0d405b5e172b3eb356541f05a1631236383b7fc17   #>   ec71edc253cb9726ca54735cef9f42f00a916e84ec159a9ad97f24d8be71ed3df5ef79999c07   #>   e7abbe78f59e970c9ba0f760d0f5ccdb83f52b76a8fb903d6ed60f5832f3d711a56d40f8318e   #>   6c7c80feafa7c17eeacae7bea32e5cf1ef0657397dcdda471c38bed97b24788d2178dd9b51f3   #>   3a89fdae8d3f42a63dc2b3e59b535c2f290b82d7b2881949f0a645f00a916a848cef171e9bef   #>   657ddc6bc31378839e97cf7daceae5c77efc56cfeddfd27b709eaed74e3f51bfa6f14f9ef55f   #>   020b56cffa65449a1efec7d0e0d0c607fc5a5fd551bdd7b65fb559a5a0fb6e78deb4e8bb484f   #>   fbf5bda65fff81e03586e015606a552a2e34d6f56a327b6950e81bfd0fae579409c16b59c48c   #>   2478d3227885483542b49f13f4be586c5a1b6a77a55e09fddd23bb7f397aa52baade43427f83   #>   dde5bbaeb84a2fc551e147abf18a7ec05659bf8c4827698f31a4f101a7ebabbaa4e606ef3d7e   #>   e7f8b7220ece6a15ed319f6af21e095e6308de245e1fffd4bbb93ec0edeb757d67ccbbef1bb9   #>   3e4ebe2eacfd36dfa225df688de0b52d6246660bde9383a06fa24c35c7f5fe2904af106946c8   #>   ccf01bb267ff5ddf37f45f1cab7ac19f69779cfceb43ceaafde7f59db503ba7fed6292f6c20e   #>   41cc3fccafa91d706ec62f23cd63042f363ce019edf67d5f37beaad8c70c4e883faa2182d718   #>   8237d6d3fb76be85d8dac7e5f16689ca843f9e78d09963dfcff321f27774f5abc06c98eb7ee5   #>   87e0b52c6246660bdec383e01b8932d51cd7fba710bc42a41921afea7d3434e3c3dea9df55cc   #>   bfa6df16be7d9f9e27b36e1bbee65b310f7e4af880c1e67f76a3ff9648dcbf226a2f9696ffdb   #>   4b5ca32f729726ef92e03586e08d31ed57ea79438bfc31af07a99853fe93f834cf07b0e1aac5   #>   7b36abff7e535d2f262382d7b28819992d787f1a04cb268854935cef9f42f00a9166843ca2f7   #>   d180f6f8c3eab94cbfab35630ef95ee8f6dbf75cf144f8e9b2e362ee69cad2a1038ec8f64534   #>   a2fdce9a7adde0287f09ddbcef63e6571552e7f5e83769f22e095e6308dec6dedda4eaef6d9f   #>   1cbe87152f82b7f4df33d7a9fc947789bd9f74bd92cc085ecb226664a6e07dae7c9ede3a51a6   #>   9ae37aff148257883423e449bd8f16c8f8b0daefac05c1fa3187845e416be9de9fca867e62bb   #>   5f833be9726f6d8e6e90c30f3cc2bf24527674e3233e3ca2f6e6c7995f5498f63b6bcdff5899   #>   e03586e06d68e636b57f7373fc352c3f827776c7ff263ff9d86b197f442102c16b59c48c8c0c   #>   de095776a99ceeaeac76c9c93b564eba273711af59b8de3f85e01522cd08795b7b33b09e377f   #>   48ed7e3db562dfdcfdfeea57a32d543f4ff7b7d54f6a1a340000200049444154f7b35382b7c3   #>   b8aafaddd9be95c773656bebbcd3358d8ff87056cd8bbeed67e1c4748bbec8dd9bbc4b82d718   #>   82b7a1f0bb900f7c3e9fc7297914bcae97d02c82d7b288191919bca3f4334ab5be6f3711af59   #>   fc4f8aca08f9d2f5229a36bbe373d74b685ae5af45d2afe2dbdadfe091191ff55f0b6877755e   #>   ec41aff4fe1be616933a2f79eaa88d862ebee6cfaebb44fd3add7ca77f94e4f11f594d7d0fee   #>   3533e3d7d050f8ed80cb0ff4afaaab5f1cf5fde517597d87cba7f55ef44947c785ea99bf0b5f   #>   92c7a2c23ed07fdfefaa26efb2fc557c6c646df9933e23679517f395eb45346d56c717b9dcef   #>   bf970affd5dd3d97c7a9f0e56cf599eb2534ebe334672bb9cafff9e47a090945ccc8acc17b4c   #>   13ed0ad87686f637f891ac77b57bf89ee6f920c151f7feac92844376ef7ad8f786f5fcc879b9   #>   ebcedeb0f2f15a27cc48f8f8b3aedfbaf253dea50e7839eb57d0d843da56adde7be5bff6eb79   #>   daf1e297cea93eaa7d54e5bf29faac7fc67ff2595598f6fb7e833fb4f3c04073feae7d83cdff   #>   b9eb350173856cc1bbc05973a28ecbcb2c292a8b99e37a114debe898ed7a094dabfc4924fd2a   #>   3e0cbf2ed966991ff6f5f06f9a1d98f0c069afcfecfee8f1c5ab0e3ff4ebcfde69fb24d512be   #>   fae0f50f531d90ca8ae16ff7f1eaaa57abafdb552dbaeb4fe293496f7f9adfaa429e093f49e5   #>   f74ddfa5a0211343fa8c9ce3c58c9c93d38c3c543fa1fe3d97079ac5d94a8e34672bb95ae76b   #>   88989191c17bed0fbb94bf1bd7f96195cdb6daf5e8b19f64acd626b87e4a88c273788548f7ac   #>   a8ab6a0369fe267edff7a8da93d5d0b6b477f078edb3220ecebe945c3c1a7a57ba2dd435af2e   #>   5973c54edd4fd6edfcd9ea479657b95fed22576dfa35fc790eaf313c87b791a21ebc99df0527   #>   0ecfe11582e7f05a163123b3bd2c9903aef74f2178854839428ead3ec10cb8a989076edfa5fa   #>   ae16fe47dae3a7ad143adddddcc462f27049cd7f1cacd87bc5f7430b3fbbeb6227c13bfda7d5   #>   2bf9e6734ddf21c16b0cc1dbc80ff4e03d2997072a11bc6210bc9645cc4882372d825788b423   #>   64ccbceafc52b82ffee60db41fd1fb33d0359f4b7df859e1d3ddaa339a5a8e79b754bdf8d9e6   #>   bd6fe5795378e18b74bded9193e02d4dff75ef7bde6df072f3f747f01a43f036b2931ebc17e7   #>   f2402582570c82d7b28819191bbc9b6cb2494ebf1c938eebfd53085e21528f9057f65ea8f3ec   #>   b2f4b1ef35fbd84fecd055cfab9d9fe095c4c256d3ce777736bb1ed3dedba13b7997b9bdead2   #>   9f680bbfa8f3f2b8e07dfeaeabc73e6366614f8fbdfacfea8d8e1fdeba6b95dfba6c66a36312   #>   22788d21781b395c0fdefb7379a012c12b06c16b59c48c8c0d5e295cef9f42f00a9161844cbf   #>   efb2b3af31f33660efdf79f1d97f7a36cb9113f4f3ddaf8d2cc9acdb0eda718fd3deaebee4fd   #>   81dac2b7edbca261f04e3d7d8dce9b2e77d4e46697f4d661cb74ded55a674debbe64f2b831e7   #>   dc60e8554c095e6308de46fea67d1b2d9adb3ff110bc4210bc9645cc4882372d825788561d21   #>   b7eac1fb23d76b4ae4097de1ab745ed128781f5ab6f7b43eb6b9c7bfb1f7ed3b564cfdc4e978   #>   04af31046f23ed6b85bf8d0ec9e5712a085e215af56c1542f0dae27aff14825788561d2163f4   #>   6e5ccbf59a12b94b5ff8429d573408deb1f356ddbadfe8661efe9cbe557735df5dcddc555d04   #>   af31046f4363c33fe07d3bfe988c085e215af56c1542f0dae27aff14825788561d21d7eaddb8   #>   b1eb3525a2bf234530b4f38ae8e07db2f605d8e6f973f647bfadf6c5d2863c97fdaeea23788d   #>   21781b3bb8f6bbc2fc7fbc2904af10ad7ab60a996b8277d68793dfa895bc558d70bd7f0ac12b   #>   44ab8e10fd8d96825db2fd16ddd4770c2fadd6db536b3f7f23aad4a383f77ba1db2f37b5dead   #>   9298127e3f56e34f0321788d21781b9b39b2ea2ff2bc57e7f42815046f2a9332fc0e7232ad7a   #>   b60a993b82f7f15fafa3bf757daa5c6d9eebfd53085e215a7584cc5858fb5e0a82c1df3f3ddd   #>   ef74cdbc66fbf2fd0c5af7b8d77359e48b47ae35200816dfe5c6f6aa0bb5e71e06c7765e1e19   #>   bcb76b079c977541fa7b43df9bf5ae2210bcc610bc712e59a2e7aff1068fe6f6202582378527   #>   7fbbd23c41dfa5f6b83b977b6fd5b355c8dc10bc2fad5fe7044df0b63682d79d5fd6fd7e0a16   #>   bd28c57d3cb066cf61f31d67e235b96a4d3f6450cfddaf57f5eb61278697dcafebc5c6228377   #>   77ed8bdc34eb9236d4ee6a64d6bb8a40f01a43f0c67aff822d96ec3f68b95fdcd61e7fdb2610   #>   bc09bdbb877acad48f5ec8e1fe5bf66c556b2e08de070668a71a82d7f5229a46f0baf3cabcf5   #>   bfa38291894f7e7fac7e85b0ad3f30bcc0777e5875eff3f5be29dd7b4b8416bc7bd7e591c1bb   #>   6c10d67f5a9d9b25f07e5fedae56cd764f91085e63085e2908de645e5eb36ab22cf637f30fd0   #>   b267ab5afe07ef5b83bbff16f419582b75b236c7f5fe2904af10ad3b422e8808dee0f0847770   #>   47ff9ac37631fb53a219356fda1b0cec1dffa15f1c5baeadebe2a8e06daff3dfca197f7af2ac   #>   7e4ff367bba74804af3104af14046f22ef7dab66b42c3cc1f823b4eed9aa86ffc13bbcf33f79   #>   8e19ffafd9a91bd528d7fba710bc42b4f008a9f35e4b5dff5199ec79a9ef2c1a3aceec3b939e   #>   16baf7a1bdbf69f687eae25de289ee4ba382776a1ffd4b7c42bf59128fe9f7d4cff05339085e   #>   63085e2908de44f60bcd960d8d3f420b9fadaa791fbcffabfcb6dad6ff491fa8a6b9de3f85e0   #>   15a29547c8c5dfa85fbc1b243afa88f0614b657ef1833a266bbf54776aef95b77d535dbac92b   #>   3d17463ea56188fe154ecab6a8d7f47b5a22db3d4522788d2178a520789398a0fd53d49f4c3f   #>   442b9fadaa781fbc7f29ffe12fff79fa3e35cef5fe2904af102d3642debff5ccdf9f33aea74c   #>   db0e5dbe6ef13e9de09eda97d60ebb39ee980fc69ef5fbb3c7267ab2efe5dabdaf5e75ed7b27   #>   74be53f0801fddd07b5964f06ea4ddd592495650c7cc45b4bbda2ce35d4521788d2178a52078   #>   9338561b2e5b9b7e88163b5b45f13e782f2dffe15f903e4fcd73bd7f0ac12b444b8d90093feb   #>   7add83f9f6523f177df1bea3f5e03db5d19d741baf1ff6cbc647bcf8f3ae67e20ffec58bf177   #>   bf8b7ef7b54fbc7ded813bc6bf5b7d4164f09ea4ddd33ef18f5fdfcfb5bb3a2beb5d4520788d   #>   2178a5207893d05f876ade8cbf5c1ba9a5ce56d1bc0fdecaf3f9fe993e4fcd73bd7f0ac12b44   #>   2b8d90f37bffcd6c70efebcceb3d1857ae9daed70fdbbce10197a817190b065d1a7bf7755e85   #>   30e6ada0228377e202a13bea373ef6e1233c1c7e3ef0908c4f8e8844f01a43f04a41f02611fe   #>   9d88b2e70d3f442b9dad1af03e78cf2bffd9bf993e4fcd73bd7f0ac12b84d311f2fca95bacb5   #>   d2c6fb8e9d91e8d6c7548fd23ee7f45c7cb03e677748706f17ea87addde8f627d7dcf494b8bb   #>   aff35c8b98f7828a7ea7b5134277b457dc8347db3574576766bfabfa085e63085e2908de04da   #>   fb059a870c3f06c16b59c48c8c0bde3bca7ff6cfa5cf53f35cef9f42f00ae17084b4edd5f3ba   #>   60abdd96e0e6d7d6fe74b27fcf0f4c47e97336c93ff95fa71fd6e8f9ac37d7be846ddf5b63ee   #>   fe3bfadddfd9f888e8e09db975cdfdacd3c42b06bfbb66cd5ded60fc05fb095e63085e2908de   #>   24eabcf7253fe1adcbfbe09d513e5b5e9f3e4fcd73bd7f0ac12b84bb11327e68ef60ec73646c   #>   79bd1f7ebf8695bbdfb1fd1a7dce9e94e0e11fd50fdb3bfad65387866ebb4ccc4b3aec987afa   #>   47076fe9fdea7bfbdec498afaca1d737a8baabe1539ab9abba085e63085e2908de24d6d526de   #>   4093af7b5341f05a163123635f8777eb20d829759de6c0f5fe2904af10ce46c8f3b5af187074   #>   dcedcfd0c6e9e55d57bc358f764d9297a96d5f523becffd93bf7401baab681cf3987e3386eb9   #>   25a4d0051595527457c92587945b5711a1222a4592945b49c8ad444a25b9457289a4502a4544   #>   c8fd7238e7ecefeb7debabf7adf78df3edebda336bcdde6bcdec356b3d67cef3fba76dd63cb3   #>   d6acf63cf33bb3d7acf54ee2bdd9552e26243ffc142680b7a65912e10d14bc129bc8acfc3329   #>   be08923ba46cf4503526a776245b5078a581c20b05145e11063129af85ec2a50781593204772   #>   85f7bb0c230dc29806ddfd4740e10582ae1492dfc89a1bd31672029a31e9b46db4a41d5d70a9   #>   500b06d0616724192a702353fb8dc98fbeef343ae0594e7b92096f2070e4cdae57d469d261b2   #>   8497cc7e7eb5fde575afbc73b6fcc7bb01145e89a0f042018557846f4ad0298ff3d682735078   #>   159320477285b770ac61d43ae2544fe5a3bbff0828bc40d0954226d3c9f182e44b7ee531d9d4   #>   a81c2dda443fe2e54c8710651fbda043b267b6d9064d36e7f0cf52fbd7e08dbc4d2ebc450514   #>   5e69a0f04201855788fba994d758fa1b0228bc8a499023f9c25b38cc30aaccd3bcb030a0648e   #>   c20b045d29e462c6209726dd7f07b3bf91161b2136d6bafd11c126bc6f7dadb86d92f4bc9fad   #>   ddd897fce827aeb7ec9db98cd71c145ec540cf9128bc5040e115e260034bca3bed1be935a0f0   #>   2a26418e4c20bccbcc740f7e056af7796d8165e3b214e4d50dbafb8f80c20b044d29643b3d21   #>   ac61f4491ab0d546390fc70a1f371fadabd824674126991f0ddf7028c99e7b6c6ae7bd3bb6f7   #>   0ad3cea566725b83c2ab18e8391285170a28bc626c39cf94f22a7e24bf02145ec524c8910984   #>   d7e62e499382bcba4177ff11507881a029852c642f85e4cb3ee4b2865c3e5e3a93bc8156c1c9   #>   ccb24bcf25423af044b21d0b9865e28d4ceeef75b9bd89505fb09adf18145ec540cf9128bc50   #>   40e115647f4792a69b7debc1f1517815932047a2f03a058517089a52c834f652b82079440326   #>   e01a53e9efe32f48378cb43a4fee116d41c19a677a76ee7bcfb5a1f5d3ea3fba95b3f7654ced   #>   9709d4f1cdc3e704f7cc6efd7af2f1c911c2c29bf7ce6377defdc40736d3f96c79a977e75e2f   #>   7c297020ada0f04a0385170a28bcc2aced5e3398f24ebbfd7d4f8e8ec2ab9804391285d72928   #>   bc40d09442de622f8526c9231e670246c70b8f8e8dce7a5eba3f67686d948237ea4602326e5b   #>   f383c06c91cf30b53f23544f20f7879fc5760c09ef3f9f2e13397885a147ac859fde10adf692   #>   458287d3040aaf345078a180c2eb84a35b0e787568145ec524c89109bcb51e9f94f4d539bafb   #>   8f80c20b044d2964352bbcb7258fd8414f9450399e56b7358c6faebe46a0fa6377c4034a4d13   #>   08d85381aabd82f0a364517e29fcd1b41e71dd4de6b251a6f7ebee4b71225e6f41e195060a2f   #>   1450788180c2ab98043952f5835ad7e8ee3f020a2f1034a59013f49c6086f10a276428b5ff44   #>   52b2f574f3f6329f716bcfbdd21c90f6aa40834751b53b192a2cc62fdbcb5b7cfebb78d1404b   #>   d577489fed472228bcd240e185020a2f10507815932047a2f03a05851708ba52c8bdb4ef66fe   #>   c48928c8b1ec7f1f29387e91f54835b98b3374a3aafe44a0c19d2d219d04221c72b8b6b5550d   #>   c8488b37a917f686cbaf5c1a28bcd240e185020a2f10507815932047a2f03a05851708ba52c8   #>   0c5a786b73434ef434edde2b3ef9d88bf4a17813f1ae4ba7029a083c33cdeb6fb66d0f86153c   #>   419fc6f3d182636752056576caaf5d1628bcd240e11560f7a2696faef064cd401328bc4040e1   #>   554c821c89c2eb14145e20e84a21cd69bd33d6f383e69c1fddb791e9d5ad02da078dac6453ea   #>   06b99da93bf9a2175166578dee5df56d91dd1d72b42cdda8aad1b91d2631cd1de841fd9240e1   #>   95060a2f97b79b8607b797e9b0d1bb3a0228bc6040e1554c821c89c2eb14145e20684a21fbd9   #>   896d070b84157c32a84b8bae4f5b46e9ae618e64cc4e7a90dc724c406f81ba175589abe86281   #>   fd1df22e7b1a1f474a5a3205f5e4572f0b145e69a0f072d87d2db922320688ccfce716145e20   #>   a0f02a26418e44e1750a0a2f1034a590a5acdedde2f2502fb187ea9734603d1bc099122dc46b   #>   254cfb977cdd656313c34ebb66bc1029399d2de13cc2d6080aaf34507893b3ed2cf325d15678   #>   8145e7a0f002018557310972240aaf53507881a029853043780da391cb43d99862f257cae6b3   #>   01b5b8b5acb03e922eb5d2656b13720fdbaa87c30527e811c741be965dbb345078a581c29b94   #>   a38decae164f40e105020aaf6212e448145ea7a0f00241530a99c94adc252e0f35883d5497a4   #>   0136cb1a9fcdab248f5ee8ad81ec074af7b1ad8a3ca8cecb604bbc58b6530e28bcd240e14dca   #>   d3d43591bed69b7a0228bc6040e1554c821cc915decab654af7f6587919ffce5425cdda2bbff   #>   0828bc40d0944296b112d7dae5a15e660fd53f69c00636a029af12f689f40c97cd4d848db78f   #>   8a949cc114a41d497e2c8da0f04a0385371987cad35785db31517c50788180c2ab980439922b   #>   bceccd2c4ed541f92ed4d51dbafb8f80c20b044d29e47029e63a78365eba7e48db2657771a2f   #>   36fb96cd08856149034e546202921b72905b99905b851a278ecd69ac8e94e430050d25d72d11   #>   145e69143fe1cd5bd2b765e31bef9d7d5860dfd9cc5591b95fa8921fc674687665bb67bf116e   #>   150a2f18507815932047a624bc8671fa5217eeea0addfd4740e10582ae14d29abe08d2c8b8d4   #>   cf63539665f61459bf77327b4171a6edba930958c5ab845e59d830ca0b34cd09b9ccda736746   #>   67077e9da97b88e4ba2582c22b8d6227bcefc4661dacf4c209eece3dd8cb7eae401d3fde191d   #>   2194d6565c7951788180c2ab9804393245e135d2e6bb905737e8ee3f020a2f1074a590d5d4ea   #>   61468758c98cacf8c61a02e3f2e8b17c41ee4e1eb1a904b57f735e1d876c2eda83fca6396238   #>   5d416cade513e7520515b94bc9e90385571ac54c782d2bbb34ddcddb9df98bd9305ee657b2d2   #>   34e5499939620d43e105030aaf6212e448aef06eddfa4ddbd09deabe89cb376e5e3b6f48b3e0   #>   3f4e7b63ebfa8fc6b42b19baf6b2b6b9b05717e8ee3f020a2f10b4a510ea25ad4a5ba3dba75b   #>   4cb822fff5ac01ec9daf0327e451ebee65b8d3d6ef62eb30784b213b855e21b90979cab5807a   #>   6d6d82e49a6582c22b8d6226bcf75bbee3971ce5ec7e037b453ecf090904d69636ef9f315fac   #>   6528bc5040e1554c821cc99fa5e1b7eb0ca3ea1bf1f7d3f6dc661899ef873e45164c6d2becac   #>   29a1bbff0828bc40d0964272af32df7b32634b396ca006f7d6e72ee23b9abdf3f5e184e4b532   #>   ef5de22d6e63f3e967c2c128d9d334fc72a09af9f8b54c2398475a6aee29b962a9a0f04aa378   #>   092f3d3289f32b4da0137bd97327c73e58d31a50619b50d35078a180c2ab980439922bbca75a   #>   1ac605c72d9b26a619253e0f7f9a1abaf67e1412d654d1dd7f04145e20e84b21c73ac6ef3ca7   #>   af886dbd85be8b8de51de743f6cef72a2fe678f7f8ce15170a34f602a68e0b04a21cf14be1a1   #>   8be3876f6279636f6afccf80f4a105a9d6f4f3cc110346bdcf7b84e60e145e69142be13d42cf   #>   4592be2e79c0b3ec65cf5d9c9c9909e54eb1730029bc9f8d7ff2a9894e965446e18582ff8577   #>   96619439446deb6f1875ff13fe746ff0d21b27a0aba9a3bbff0828bc40d09942e64505af5cff   #>   7db14ddf3277b13abca39c60def6cae00e000c04c64667354a6bb459a4a9ecea168f8b8439e1   #>   97c2c2bf26558f1cbcd604eaf9f1f71d230b5f64dcfc45aaf5ac6f15795c9dddedc7540f6503   #>   0aaf348a95f0beca5c601c19fd8a09e04ea6cd4ecf5242e4ad5888c27be2e5e83273e74e135e   #>   531985170afe17def30ce3297adbaf59863137fc697fba61dccab75509e8ee3f020a2f10f4a6   #>   90cdaf3cd1f7f9f9b9f10d2398db98b1817790c7e888e40bad85c87b30be77e58f041afa4316   #>   5547d60f02518ef825f47fe21f2b47f71f30e6539b87b807660fed3b78ba80ca27a760687ce1   #>   b632fcb11c8e41e19546b112de36cc755f993366a8391d309a57c71236b94c113a0770c2bbcd   #>   f45bd0d562d28ec20b07df0bef8ee0f7f25b666b8e61748c7c0a7e7deb710e2107ddfd4740e1   #>   0502b014d295bd277147e61da86e0d28bb851791dfd6bc7fa6c87446b4553f21743a4e080bef   #>   afd20f4bd1d37c126993a41f1f85571ac54a78cf662f7cce00dbcfad8b7d1be7e726dfdf76b4   #>   ff4342e7004d78b758c67fd411345e145e28f85e78df0e7e2d7f61b60e348cba914fbd0da32a   #>   e71072d0dd7f04145e20004b21cc631b9177af575b1ebfa6bfc30da0062894dbc46f589eb565   #>   cd65bfb2a64878c759cf3c73053fc41928bcd22856c25bda60f88413621d0551817f11f761eb   #>   6821d23668c27bec42eb495c2536aa0185170abe17deb1c16fe59fccd6a186513af2e919c328   #>   c139841c74f71f01851708c05288cdec9a2ff1a3969a06e765cfe2eefe6d49aa8a9b055a76c8   #>   bcd85adb4302110e5121bc7be8f5581b0a8f00140485571ac54a789981f802efa0bd627ac65b   #>   5360c6eef66c1d978ab40d9af03e479fc564a130145e28f85e78c704bf940799ad3d0c232bf2   #>   6934f9e431bafb8f80c20b046029c466fda47705c27eb82b3632f5e62ff97bdfc3d4b146a08e   #>   82976393d6571b9ff2440936a8105ee6357583ff38dc1928bcd22856c2db80bdf0f9cbabac69   #>   16ddb5443791c1edec1addc625226d0326bcc79977ef6a0bc5a1f042c1f7c21b5af77b16b3b5   #>   76f09b1af914bc0f55e61c420ebafb8f80c20b0460296416734b2a29b4ac58e1be17da346e74   #>   cb53227318e455662a1920d4b8a36fdd73f50557dff39637137aa9105e562bba48ae0185571a   #>   3e13de4f1eb9e48ccaf56f9f693fd4b617f3cdbc48e4e8ab07b6b8b049db31626f90766385f7   #>   1aa14058c2bb903d0dce146e115078a1e07be1dd10fc4e5efa37b531f4cee8cd918f9d0ca321   #>   575665a0bbff0828bc400096420e96a573f98d42718585ff14ae63237bc368e6b6bd125120bc   #>   fbd933177b38240e0aaf347c25bcdfde1cfbc69d35db6eb78f996fe650e94d798efdfaf7100a   #>   8425bc4fb2a73146240e85170abe17debf433f860eb66e3b5023b86d4ae4f3d986d18e6fab12   #>   d0dd7f04145e20404b2183a9549ec67b75258213e15de4bdf6b94181f0b273971a5992ab40e1   #>   95869f8477e169a6ef5c3fbb114137505fcc2a07a437e56df6ebcf9dca2c0c2ce1bd8f3d0da1   #>   5fa85078a1e07be12d0cff51d6f39fa62d9f847cb75c7ef8f3f6e0c7e78484355574f71f0185   #>   1708d052c811ea0de45e62614e84773e7bc3a8e5b2b5325120bcebd933cf943c1c1985571a3e   #>   12de35d669acede6f4db647d9f328dffeea9630e51cb9607f94e281096f0dec55ec58f88c4a1   #>   f042c1ffc2fb7f6786be96551fffea5fe17f1e997353f87b3a29521a9a2569b5b8b5a680eefe   #>   23a0f002015c0ad972a63993df7c422cca89f07ec1de309ab86cac4c1408ef1ef6cccf945c05   #>   0aaf34fc23bc47cfb47ee9d216d9ec38df22c543bc684b17fadb7fb5581c2ce11dc85ec52345   #>   e25078a1e07fe12dfcaa5ce49b997176c3cbce8f4dc1d2e56424c306cb2afce5485cdda2bbff   #>   0828bc408097427e6a4af2787a6f41df7524bcb9cc3861a3a7bba64a45c54b6bd59833179b88   #>   541c145e69f8477887d1dfba4676bf2bac8e6b71b6d8445b4ed942ad9798be5a2c0e96f0da8c   #>   ccf858240e85170ac540780bbfacca7c4bbb455f63db366edcb8050eac350574f71f01851708   #>   005348c11b97a685ae8f526d3e138e7122bc36f3712e76d14cd9a810def39833bf5d720d28bc   #>   d2f08ff09ec57ced56daed7a745864bdb54a3d7678d498e96996563c231695bf75d9fbebf6db   #>   95ec5b3673ce2aee0a6f92d9c2f4669ad07867145e281407e12d0cdc6dbdd86a2c7228ab32d0   #>   dd7f04145e20c04c21dbe74e9cb2c8c9e20e8e84774d1a75c368ecc5bcba4e5120bc79f4ba13   #>   f2e7a740e195866f84d766e878a2b7acd6bf3d7ec60ad19f755c303ac3d408db97e71876f40c   #>   3fab4abb7432bd48cbfc1bc22bd894bd7d83072d4dcc44b63be788c4a1f042a158086f61e1cf   #>   4f9c13fb8266df3c57cd18060addfd4740e105826f528803e1a55ffb28297d815d372810de1f   #>   d95be5e992ab40e195866f84f74df66bd7565773169e1b6b428d994201e3e38b1e37fade5cb0   #>   bf2529c8e8277fa5f1c43cc276e7309138145e281413e10d25d3d5ef4e7ef98d055be9397955   #>   a1bbff0828bc40f04d0a7122bcc72eb7dc2ec679d52a472810de75ecad325df2dac228bcd2f0   #>   8df08e65bf7657686bcf89d7da564b37aadcfc8ad8f23103ccadaef479bc60d7f9e692561e3e   #>   95a6e9ca76671f9138145e28141fe1d58deefe23a0f002c13729c489f0060eb589df2c325ff5   #>   aa51ce5020bcdfb1b7caf292ab40e195866f84772afbb5bb596b9b4e080fbba5860f9cb92b56   #>   907ba5b54470fa4419f464bbf3499138145e28a0f0aa4277ff11507881e09b14e2487803f953   #>   6a456e15696dbeb229fef9b09c660502057b4417224e41788fec11dbef6809e6567981ab0a13   #>   83c22b0ddf08ef52d6d0eed7dd2c3176d113badc152b194d15a4d1afe11ddf73dca3460d67bb   #>   53e86f76145e28a0f0aa4277ff11507881e09b14e24c78030573aecb368cf46a3dbfa74b7e7e   #>   b649a66194bd6962ea6f5f6f19d8a0a461546aff96c8db312e85f7c4b4d6e50d23f392213f09   #>   ec7c2d73ab7cc87185c941e195866f8437b71cf3b57b4b77b3c478986e77c6b79182dcca74c9   #>   f5e6b855f707ff9e4eabd55d6c9948877ccef466da369138145e28a0f0aa4277ff11507881e0   #>   9b14e24c78bf681cbb59643e6415db31156225677f905a9b8ef7cb8c1deae275fcdddd09ef52   #>   32d35899617cad9ec0dc2a3f755a2107145e69f846780377d25fbb4ad27e41f1948233e986c7   #>   6632fb8029c8d84dc276dd4a2eaf1cc1df5e1c519fae5b6caa15145e28a0f0aa4277ff115078   #>   81e09b14e24878df2f63ba5d5cb9375e90677e2324e385549ab4ff6ad3a1b2f91307b912de89   #>   254d95b4e53e933e7e8e61a59dc3fab8a0f04ac33fc2bb2593fada09ad0ca69f6f19ad356e88   #>   94d8cc94f0662c6a632dd3d6b3be94dfac3974d562b3cca0f04201855715bafb8f80c20b04df   #>   a41027c2bbc6bae2d275f157ac1fb414a44d77dfa2bc1b2d872a653bd5be1937c2fb6ebaa592   #>   aedc801556f5a82e7d867f145e69f847780363ac82768d57c35b25b384d5daf3222577b025b1   #>   bf8e77d5b26c3e6b77c2c3bba6b3b5e6be625128bc50f0abf04e0871887cb2c3bdbbba4277ff   #>   11507881e09b14e24078736b53f72ab2e212fd4b6569a1c171b63c4f1daad6314e800be1dd53   #>   81aae4756ec84cb3f156963da0018557223e125eeb13d18bbcf89ddf0be6b25a5b3352d28a2d   #>   19120d6a436dcf91dfae63cdcd15b4139c041885170a7e15def0d77125f964877b777585eefe   #>   23a0f002c13729c481f032f38296ff39525070215d7257f22325e64025fa502338112e84f721   #>   ba8eb3f88fce96c7d7796db2c5516d4228f7a2cd0000200049444154a0f04ac34fc21b984816   #>   f94beb5c3406f006f994bd61378e94dcc7964c8c94aca0b7a7ad92dfb0130f93f9564a0d115d   #>   261285170a28bcaad0dd7f04145e20f826853810de4b98cb7042a4602d53902d3aa918cd34e6   #>   500d3811ce8537af0a53c9427e54ee98c6a1a595336f78d38b05955178a5e12be10dec195027   #>   f4052ddfc193990bbce1003df698fc054ccf4a16bad1474aba3105ddbd68daa67bc2177ff507   #>   c4ff6845e185020aaf2a74f71f01851708be4921e2c2fb531a7319de1a2919c25ea06e676ab8   #>   9d3d14e7d6e45c7857b175082db914d8b36ef186434e6a120785571afe12de20db572edd5444   #>   46ef4669ce5c60d1974fb73005a747972cacc1949ce94ddbf2377fbc7c8b93bf595178a1e057   #>   e16d1f620bf964877b777585eefe23a0f002c13729445c7857b29e185d7e81993ec930c6ba6c   #>   d065eca13e4c1ee15c785f67eb68e5b2b9d240e19586ef84b7e8c10ce2ad139b088519c4fb74   #>   647b2efbd7745aea137a4b0185170a7e155e78e8ee3f020a2f107c9342c485f73dd613cf8894   #>   d8bc8a22b468a70d75d843cd4a1ee15c78c7b0753471d95c69a0f04a0385573fd753d7d7dbb1   #>   822f4b590b6a1d896cdfc15e93c64e5dadb782c20b05145e55e8ee3f020a2f107c9342c48597   #>   79ad843ce1edca96b87dc2db983dd4e2e411ce85f735b60e7cc22b0ef41c89c2ab1f6a8eb147   #>   e225d641fad9b19565f009af97f8e66e85c2ab06ddfd4740e10582cc14b27df5aa6d5ebc0825   #>   8013e1ddc9de93da444a06b30639cf127af8cb8fbf147bc7bc037b28e963786dccbdb793782f   #>   40e195060a2f00be6b60babafae59b4a2699de68abfa31d95c9db9266baa6fb52d28bc5040e1   #>   5585eefe23a0f002415a0ad9da2bbc0e67f51edf493898631ccdd2d088b927bd122960a7212a   #>   7d241e963ff5bad0644025af9b966f7f5c33539943d5e344b898a5a13253c90227f15e80c22b   #>   0d145e081cec171bbc70fe5c6bc9a7cda205e99db7c7b7decb5c93ddd436382128bc5040e155   #>   85eefe23a0f00241520a291842c6b4650e14f041d938125e66ec6bb9e84cf8050de812d3da65   #>   1b2e205b2fe4af17babf227da8e19c0817f3f0f6a1eba8a5fd2578145e69a0f0c2e0a7973b36   #>   addfbccf82134cc9aa479b3768d8f2d96fcddb9633c22bb6f0aff7a0f04201855715bafb8f80   #>   c20b04392924afbd39c3b7543f68cdd94a6b6753b7a4a1b192f7a982acad24e8c372a6ede597   #>   702b798e3ad499bc197dddacb4569eaae43547e15e80c22b0d145e289c0afe9ff84374e7d6d4   #>   35d9d6cb96390185170ac545787f5b35ecfe76375cbfd581a14a4677ff11507881202785f4b6   #>   e6f87b65b4cc118e8437f04996a5b9d790e7a2f9b5ad27d28e847c7d9aa5e0b46f78759cb0ce   #>   e199c97dcee34278036fa75b2ae9e42cda0b5078a581c20b0547c2fbb1f59a4cf760a13577a0   #>   f042a17808efee5ed15f7dd785ffb9f7f2cb2e7b4cd85425a1bbff0828bc4090924296510f35   #>   5c2fd7e01a67c21b7837dbd4d8267bc8767ae46dc686584953aaa419b78e7dcd4cbb67cde6ee   #>   ef4678032f973055d2ea98c3680f40e195060a2f141c09ef9554a6b8cacb96390185170ac542   #>   7827948c5d01eb221bae0ede06ff21acaa72d0dd7f04145e20484921b40d1a0da5b4cd010e85   #>   37f039595eb864eff8008cbc5af489dc1a2d99471750d337d891fb30798fbbe15a7e935c096f   #>   e0c3736275640fd530769a0185571a28bc507022bcf4a8280d7ffd270085170ac541787bc52f   #>   8075912df3831f678abbaa1474f71f018517083252c856769eaf8d725a274ce19f0b1eebdae5   #>   d1d9c20be616cc6e57c130d2ceeb677ee3e423e63c32f7474a3a312522c307beeb5f2fdd30ca   #>   b79d25a2a2ee8437707c728b6cc32871d1a01d8e43bd0085571ac55078b7bef8e0ed0f0cfb4c   #>   3c60dfeb8f74be7bd022f67d32a93811de8e4ca6e8ec69dbc439f9df6583eeeefcc86b7b7537   #>   c43d28bc8a499023f9c21b7e313ced9aa1d3e3c2fb47f03ed5c981acca4077ff115078812023   #>   854c6072bc31524eeb4439322a3ac436ebe19fc5a30e6da3263518c89e487469a52a4c4115b1   #>   3a4e6c3f28d81a97c21b62df0e080f77c3a0f04aa3d809efe73745afadfaef8805ecbc3ffa1b   #>   4a95d19ebe27eb4478d9a902ab7ad934718ebf5a2dd29e92f7fda8bb2d6e41e1554c821cc915   #>   de83a10bb3e9b6d0ae44780b3b1846e553e2b22a03ddfd4740e105828c14f238eb896a1740f8   #>   ae7ebce63356bb3f4e67f64446850b8eb205c611cec19c9282f0020285571ac54d78c7978c5f   #>   5c77f0e63409b1dcf467e8e55efec0e14078ed3285c8b978ce9eabe20daab848776b5c82c2ab   #>   980439922bbc3d82dfb2567f85778d0bef4bc1cf87855d550abafb8f80c20b041929a4179be3   #>   ef94d33a31b65435579dfda9eb03b5624fe4a970c14f36b731d97758145ec540cf91c54c7887   #>   5aaeae1679dc804525cd0167efe106b8c681f0eeb4c9143bbd6b99307bea985b5462beeef6b8   #>   038557310972244f78ffae681895222fa89984776df0f32a61579582eefe23a0f00241460a79   #>   9acdf1fde5b44e88dc0bac75d77030aac1ca3dec898c0b179c48670ad2658f1b44e1550cf41c   #>   59bc84771e75890de4056ca59676b9dabb55cd1d08ef71365364783cc2588482ebac6daac059   #>   e71c2828bc8a49902379c2bb29f8151b16dd352ebc7b839f6788aaaa1c74f71f01851708b91b   #>   e6bdb52ac5d71866b19e38594eeb8460164e7bc8ed919e634f24bac2445da6a0aeace6c740e1   #>   550cf41c59ac84f7c4b9d4f595f93d27a20b7d45be21a1b5f63819c35b876e96718e67ed1267   #>   36dda83b74b7c81528bc8a49902379c23b27f80dfb2aba6b5c7803c1cfe3c5655506bafb8f80   #>   c20b822f6f2f13ca7e698d67a4f278e450269d4ed37f92d6442e0535e9dab344df13a3f986b9   #>   595588bed6d69729716dd58940e1550cf41c59ac8497fda3b967f280edcca354efe6427422bc   #>   cc72dfc6c39eb54b9cc674a3d28ae4235e145ec524c8913ce11d1ffc869d88ee1a17de5f839f   #>   478acbaa0c74f71f01851700058fc5972d6892ca9bbb5de974aa7239cd35cc1dc678d3edb1ae   #>   a28f14d3da8d19544186f489d7507815033d47162be1bd83b9886b26ff1bfc25f6b2f7cce19c   #>   08ef063a5394f8d2ab6689b38d9d3872b4ee36b9018557310972244f78433fbafe6f74d7b8f0   #>   1e0c7e9e222eab32d0dd7f04145efde4773027c0ea9bdd1f696b696b322dc55d7857223677be   #>   7e6e8ff50975b7aa448603df475571bf9cc69b40e1550cf41c59ac84971d33c4792bf44e3660   #>   969406dbe068a5b57ba95675f7aa550e98c376168065c89d83c2ab9804399227bc6f04bf607b   #>   a3bb5a5f5a9b272eab32d0dd7f04145efd50b3ced6733b1020c89bd627082a47f0da4d8ae63e   #>   998fb01ca7447cfa9ec30d2d250d654f4a86c2ab1ce839b258096f19f62a4e3edbca8d6cc028   #>   290db6c191f01ebec8d2a846f2338573c6b19d75adee36b9018557310972244f789706bf600b   #>   a3bbc68577b84146f6aa4277ff115078b5c3fcf6f6680a079b681ac65b42edaf6583d864dec5   #>   fdd19e32a97bb67968c48e4b4d1534f660d64f145ec540cf91c54a78cbb357f1baa40137b301   #>   63a434d80647c2eb7da670ce78b6b3aed7dd2637a0f02a26418ee4096f6ef00bd623ba2b11de   #>   ffd6368c32ff7160ab12d0dd7f04145eedb4a75360562a3359aebc2476980b974a6ba21036c9   #>   3c9549d1e69e133bca555f580a8e3e522a5a50aadfb1d49a6c0b0aaf62a0e7c86225bce7b157   #>   f1aea401365308be25a5c1363813dec0d187639922abbf1799c239efb29dd555779bdc80c2ab   #>   98043992bbf044c3e077ff58645722bc93831f5b3a905519e8ee3f020aaf6e8e946672604a23   #>   110a3eb8b741c50af5ef7c57f52ab7f3d9643e2c95e31d7fb3e3f9e52a5df8c012a664db73d7   #>   d6ccae79ed73db440f55b0fc915b2ebdaaf364a1bf24507815033d47162be1bd9bb98839f3fe   #>   bdca04a47bb6c08343e10d668ae1914cb1ddab16396437fd6b9e61bca2bb4d6e40e1554c821c   #>   c915ded05b6b37859fe612e15d1ffa2bf04347ba9a3abafb8f80c2ab9b253ef9a33f30993d91   #>   c774b729c2e246d1f6941e7898bf370aaf62a0e7c86225bcef331731e7679a3dcc5c8857c868   #>   ae2d8e85171c57d39d5512c2f26f8e41e1554c821cc915de3fce087ec75ae61712e1fd7b5ac8   #>   771b9e726aac29a2bbff0828bcba99c67ae275badbe48a21ec89dca5bb4d614699660a6dc09f   #>   3209855731d07364b112de828ba96bb80c6f2a6f664173ef96cb2dfac2bb88eeac1eba5be40a   #>   145ec524c8915ce12d9c1bfa925578fcabdf43c27b72e7b87ae1bfb2363a57d6d4d0dd7f0414   #>   5eddbcc27a6213dd6d72c500f6443ae86e5388c19626d5dacddb1f855731d07364b112dec04a   #>   ea892df7cdd73dd48233ed526e6a428abef0063a583bab06371d81048557310972245f780b9f   #>   8d7cd142ef80572b19fdd64d752caca9a2bbff0828bcba7987f54495cb45c863347b227d74b7   #>   29c87c6aae77ee5bd128bc8a819e238b97f006265b964e13f891e6b372e6804602a386dce203   #>   e13d62596badcc6added71070aaf6212e44801e12d1cc9acc0a278d18910bafb8f80c2ab9bef   #>   594f1ca4bb4daef8903d11a5f300db93d7806ed4bb9c08145ec540cf91c54c78036fc7e7e24d   #>   7f5c64a9f30db5e357576b7a16f1bd3387f77ffead433661eb5f1ef4c48b6b9caca5ee03e10d   #>   1c6e1befacb3bee0ef0f12145ec524c89122c25bf8857542ea0b3f7728ab32d0dd7f04145eed   #>   5cc078e25add4d72c5898af4796400f8bd6e01d3bbbc99de517815033d471637e10dfc786f56   #>   44779b0b66a223432b47aead06f48c641bdb467e462dd5991a3c9f3f353aed60cd31c745dbe5   #>   0be10d043e8c0e93ae34c4c387e1de82c2ab9804395248780b4f2d6f1fbb37976ef1fe4967aa   #>   2a07ddfd4740e1d5ce24dac89ae96e914b98a5d6525877421a0f30c25b726ff208145ec540cf   #>   91c54e788306fbce887e43a6279f80d742de47a3070c1aff35bdf98512e4b22b35d55cb0e72a   #>   d32327fe8ba451fc21bc270bb7be32e8d1514bf27437c43d28bc8a499023c58437c8a9ed4b66   #>   8d9f367fe39f0e245526bafb8f80c2ab9dbc469490add1dd22971cac613d91725b75b7284833   #>   46788d15c923507815033d471643e195447fcb75f742bc604f5d7341d5ef048fe717e12dc277   #>   ab0828bc8a49902313096ffb095bb43cc84d88eefe23a0f0ea674b15cb7de145dded71cda759   #>   e6f3487f4f777b429c6330cc4e1e81c2ab18e8391285d725d48c8b1964beb2fcabac25f58f88   #>   1d1085170828bc8a49902313096ff09aaad076dce6bf537154a9e8ee3f020a2f00be36ade759   #>   22a5d5c934b3a26afc44b2395ea9880b59e19d973c02855731d073240aaf3b0e56a12ebc3ab1   #>   d1ba53e94b72a8d81151788180c2ab9804393289f08628d77aeca6ffa6e2a9d2d0dd7f04145e   #>   08eced1d9bfcf2ca4f74b72525b6dd179bd3a8e526dd6d89d09415def5c923507815033d47a2   #>   f0ba630473e54d8996303fbb94cf153a220a2f1050781593204772843744995b466dfc2b1557   #>   9582eefe23a0f0c260e7f82ed73469fb44119d96314ee181d16d9b5cd6eae90dba1b12e306e6   #>   ae9b762c794448784fcebbb37ea52a0dbacd77326912285078a581c2eb8e26cca5d73a52b09e   #>   fd23f47da123a2f0020185573109726422e13dd37a7595bef1f92f74bdae164177ff11507881   #>   e09b14f24fdd4db062f3849733d75250783f6b18dbb7f12a35cd940e0aaf3450785d71829ef0   #>   de302a454a5e66afc901428744e105826fee563e15dec2fd6fde5fc77a8595bafed9b5ff4a41   #>   59534377ff11507881e09b14024c78997527b82b4ffc5238d174abce04b078861b5078a581c2   #>   eb8aedec95971619b930882de92a7448145e20f8e66ee557e10d71f4dd07eb59afb2cc6b86ae   #>   fedda5b2a686eefe23a0f002c137290498f09ecfde5cdf4e1ef1cb2ccbdee9f45cfa4503145e   #>   69a0f0ba622b7be51991d91806b2059d840e89c20b04dfdcadfc2cbc21f2e73fd230cd72a595   #>   683a78e56f2e94353574f71f01851708be4921c084f71af6e6ca792ff09b4cebee65b6a969a9   #>   5c5078a581c2eb8adc34e6ca3b2d523296bd26fb091d12851708beb95bf95d7843fcef92c72e   #>   b30e2fca68f28443614d15ddfd4740e1f5847daf3fd8a163dfd90e968ef44b0af9fd9d873a76   #>   78703a67353375f463eead599c493fdbd20177a969a95c5078a581c2eb8e8b984baf79a4e013   #>   5678df143a220a2f10fc72b72a16c21be2b715839b95345f700e645506bafb8f80c2eb017b7a   #>   451f12660f3c201ae38f14727058d9c89967f6dcadbb2d115632f7d6d6c9037e4aa703320faa   #>   69aa545078a581c2eb8e27994befa54841410dba20eb90d011517881e08fbb553112de107f7c   #>   faecf5646928278112d0dd7f04145ef97c56339ec96b6f140cf2450af9d6b48246a58f74b726   #>   02b5a89391c659597822fbf809c6121ace40e195060aaf3b7695a5aea36ab15fbc46d357d8c3   #>   624744e105822fee56c54d7843fcb9fe853a28bcba1b9132a08477b56581dd8adf8845f92185   #>   6cae64796a036346afb5d490dc2e9cfdd93110a2eb40810285571a28bc2e7981ba8e5e8b15e4   #>   5e602da82938020a8517087eb85b058a9ff09efce1d53b4e375078753722652009efcf675893   #>   f9799c750ea2f82085e45293a054dba3bb4561a6585e9eb9e42867f7aeacf03ea8a49d7241e1   #>   95060aaf4b0a3a592ea33ef1922d9655874b7366c626a0f002c10777ab10c54978fffef6e59c   #>   8af16b4e3c500abafb8f80c22b9b87685d1a2e14e683143212a828be593adea41bf7f1f6eec5   #>   0aef132a5a2919145e69a0f0ba25af7ffc224aeb9f6f2af9ae7ebca4baf0fa9228bc40f0c1dd   #>   2a447111debf368e6e59ce7443abdb6da6235d4dcea99f3e5db062f3bf93eea3bbff0828bc92   #>   396419d010a26a9e489c9a14727c27ef01a77bf2cfa0cf3c53f8953d6fd9dc3efa225aad29f9   #>   dc9d47b0c23b49b4a2833bc12c458cc22b0d145ef72c6c14bd869aadb4161c19523e5290f5b0   #>   f88c2e28bc4040e1554c821c2920bcfffaecb9e6a6273ee98d1e9e97cb8fa2699f43b1375672   #>   eac3eee10d1d27259bdd5777ff11507825339bf5a58f45e214a490f5bdeba41946954ef3bc39   #>   fc2af6ccdff0a626e7ec9cd0fbf6bb9f5aced7dd602f316791f6834815c727df52c6304a367c   #>   72478a6d95030aaf3450785361fdf01eed7abef02d5b706cee802e9d1e9925363f4304145e20   #>   a0f02a26418ee408efffad7afa6ad32b2c99cd9e5cf68fe411896084f770b4e05f4f934dddf6   #>   268ed7dd7f04145ec90c60b56f94489ce729e4d05d64bead66822fd239e345f6cc1ff1a21eaf   #>   b9803e8b6622518bcf89ed9efdb488577b0d0aaf345078a180c20b04145ec524c8914984f71f   #>   1f3dd1a444fc2656b6c5f3ebfe954c6993430b6f9fe8f6532382ffe8f2ea82597d82ffbd2f51   #>   33012573145ec9d8bcf324b48a90d72964bbd9e32a2ef5a086c7d833efe841359ef33e7d16cb   #>   0582c69b728bd15aec3d454f41e195060a2f1450788180c2ab9804393291f02eec7fb1693af9   #>   2ab78dfff66f9ed226e77f4c6d591574db05d1edcb829f87fe1efc706a7ef0d3b309e3b5751c   #>   0d0aaf64ee61b56f80489cc729e448434b932a6c925f053bcfbcd1557e2ddef34b77eb493c24   #>   1033c7ba5a4567cf1bc90585571a28bc5040e105020aaf6212e4c844c21bbf159d7dcfeb3f71   #>   64d629237372daff12f9f8e7bd39393da3afab4d0b1aef8e4431bafb8f80c22b992758ed7b51   #>   24cee314d29b6ad3c5f27f767fc5a5ea43e3973fdb98cfe13681770ef794a74efc357e8cc7a0   #>   f04a0385170a28bc4040e1554c821c995478d32ee8fdee91e4eeea867fde96933322faf9d3a0   #>   e4ae8f7efea3534ecee84441bafb8f80c22b9905acf67d2112e76d0ad99249376a86f43abe64   #>   cfdca3d7e3bce597c2bf8790eeca1a2a32ef425ffac46b1df7bc991c5078a581c20b05145e20   #>   a0f02a26418e4c26bca70dfd2ec5710cf62c0e4aee57d1cfa37272eefe6fac60524e4ea7bf12   #>   04e9ee3f020aaf648e57a2e5a7ae509cb729e419c6459b4baf637f1a53c9e7d22b51c02f8585   #>   3bae8f9dc1cd9b0522f22a3367bec0e3467241e195060a2f1450788180c2ab9804399233a4a1   #>   5ccb511bfe4c26af6e782828b951933ed92927672c29581f34e1ef1304e9ee3f020aaf6c9ea3   #>   dd679a5098b729a429636499d227e4b599906d84ec3a54f04be1c232f153a8309f1fb1923df3   #>   dedeb7333928bcd240e185020a2f1050781593204726125ed30fba59d73df3c9ff25135887ec   #>   096aed1bd1cfc7829f97909240f05f8b1344e9ee3f020aaf6c8e5d64559f6bc546cb7a9b42aa   #>   b34a267d6a32c6f40da387ec3a54f0cb32cb1b6899cbb811afb367de4a41439382c22b0d145e   #>   28a0f0020185573109726422e1fdd7dae13798569b28d1e4b125ff9344629d3025a8b587a29f   #>   bf0e7efe96949cba3d2767528228ddfd4740e195ce568b5d9ebb472ccadb14528a55b215b2eb   #>   7894ada3bdec3a54f023f5065a959f791163d8336fa2a2a5c940e195060a2f1450788180c2ab   #>   98043932d9c2137f6d1c655e4f38edc2beef1f4bb2bb207f75c9c91918fbc7d2a0f01e8c973d   #>   9893f3748230ddfd4740e195cff6c6f1afd90d5c5b8ae26d0a6156fdf5e009ef70b68e22f984   #>   f76efa2cfaf2225e63cf1c9ff08a033d47a2f0420185170828bc8a499023794b0bfffdedcb39   #>   154db7a5baf7cf4ab21c9a089f051d7779ec1ff382ff3035ed31930b0779fd1ec2b0ff4221d4   #>   b093ba1b61e2e0c62ff6fee938ea54e1df1eb4c5357fbe5e37f2fdbae0bdff080779fa7fe23c   #>   c6c8d27f935dc707acf68d130a3cfedd673b7e97dd1ad71494a4cfa2ecff714236b267fea892   #>   b626a3b050770b4449905a75378b10d2ac53ba1b9132a740e5f9300736aedffb97930068772b   #>   7714c2ba5bb902ff4fa825418ee4096f8853db5eed58cd746baade79caf6530271f63c9d9373   #>   c7efb17fcc0e0aefaff1b2c139397d4dbb8eb88c70afebfa7ccdb1816787fe8f54edb153774b   #>   5266dbac11cfcfdea3bb1584068c91954c740db9e69fccd467c62e7ed4ef632f09ed99dd618d   #>   ecf6b8e45dd65e977342feaeca8440391b0481c99147cf0a5d28a7f7daadbb250852441111de   #>   30bb5ebfbb96e9f65431c7658579ed7272c6917fcd080aef1ff1c26139390f98f645e1e5302e   #>   3bf6ff23a3ff7f7437c65f9cc55adc217e94439855959bf26396c5075bb449bc12b74a86b05d   #>   f5222f865955b90e7e7f112431a74667c5ae95128f49ffdb1b418a05c2c21be2c0eceee7903b   #>   94cb0adf0d2aee56f22ff6096f1fd3be28bc493975bfd9189affc18f4084c93618be965ec95e   #>   ea116fdafa043b1e796d50af41d343c63dd93c21429dfdd29be4026a61e110037831ff731a15   #>   3157454b11a48872d23250bec5bf74b707418a228ebd35776e9fb35210de533d72727ac4c743   #>   241fc33bff29c2e43fa1106afcdfba1b11867ab276c7bf1dc49e2afcaf67ed5245e82be2d959   #>   b02b2318dfcbaf65aab586a7ecf7da786374858a1b362cb44c00665c5020bf4d8ee9c376d560   #>   6ed022eb89dced7d3379fc5558f897ee36089220b9ea6e162194234fea6e44ca9c8494231fb7   #>   5e605d05933d9cbb552ae0dd0a0a8585ffd1dd044112e448a7de1a58fce8a5e92908ef96a0e1   #>   be17ffe752d3146585384b83233eb32a8361bcee2018d62c0daef0f6bd576a6ee020697b3da8   #>   668879b1b5fbec27201e15ff1f9d569a6ad4831eb4c9294359e11dc78f9a607ed5adcd31cf5b   #>   c90567699006ced2209b55f4a28cb3c5e270960620e02c0d8a4990239d78ebf1797d2f8c5f77   #>   0e024dbc9493d32e2ffecf4d41e1dd1cffe71d380faf3837d39671b6d8820d61507839f46524   #>   ae9140d4d129b7d62a55ae5eb785c2f5bc4d46c6577a45b42526327f10aec9333e619b253283   #>   db523211469961059e37920f0aaf34507865733d7d859d2b76c9782fbcfb5ebab14666a50bfa   #>   7ee2611d28bc502836c27b68ce03d4444d828156feef0eeb33dcd04a6b1f917f85565a5b9420   #>   5277ff11a008ef9e128c66385819018597c32aa67787f1835eaf19dbf98acf452bfaf76bcd4b   #>   07c5f58a11fbedcba7320db13052b41eef28389b6e5443a1b813535b950b9ef9c5837ff2b881   #>   62a0f04a038557323be95ff30c638d50a0d7c25b308a4c5ada6a8b67b5a0f042a15808efcf33   #>   efa56e69655a8cdc2010c8f2715069d799fefd77c79c9c97c8bf36044bbf4f10a9bbff085084   #>   77162b3f4f8a47a3f0f2b885eadc6a877811f9e6c1acd982bf39062fcc7f06f6255e5cee103b   #>   8197859b44cfc743a6d38d9a2b1c7a0886ec8640e195060aaf64982bcc30860a057a2cbcc7da   #>   9b5a5479b957d5a0f042c1efc27b6ac7b42ed5ad175af9d66337b99e1565404e4e97bfcc1b5e   #>   c8c9b9e7efd83f5ecdc9e9f8171b144677ff11a008ef083607de291e8dc2cbe3fb4a96be4d7f   #>   871b619d6aabe412b17a42c29b049b45782dd413abc553fee7566b9beed0dd2057a0f04a0385   #>   573236c3e4bb09057a2bbc057758d5e04b8fea41e185829f85f7e496891daa582fb2d3725ede   #>   fc77e2082e07737272a658b6ac096ed918fdfc47a79c9c51894275f71f018af052afed86682b   #>   1e8dc2cbe5a3b2a6ae4d7b8ebbff22eabd922a09c628507084f71a8ef056173b194ff9e5d7cb   #>   cc4d6a765477835c81c22b0d145ec9f4672ffc0e4281de0aef04aa4d0df2bca90785170abe15   #>   deaf5fbab582f5cb5cb9c3c4ad2713e9a820a17526ac8b69fdfb9e9c9c5ed129245e0b966e4f   #>   14aabbff085084d7e6d15f77f168145e3eebe3934e5798c9ddbbe062fa7fc700a15a38c26b33   #>   1fb0858bc4cec5537e29fc233e4b685ab75cdded71070aaf34507825f33c7be18bcdcfe2a9f0   #>   1e39836ed4046f2a42e185826f85d7fa3d3ebde3e414161326fcf7ee9c9c87a86da189c99e09   #>   ad99706a61bbe0a784b1bafb8f00457817b03970b478340aaf00c7c74416183ee3e1c4636c09   #>   6b98ff1d55849e772417defd1cdf359a5876ff69dee4698bed061b177cf6f6f8b7d7793419c2   #>   2fc1ff11eb5b8417d1c86a23f6320d405078a581c22b99b9ec853f4e28d053e19dc934ea526f   #>   2a42e185423110de1a5da7ff9450439db13128b78ba96d278707377699bce0cdbec1ffde5b90   #>   305677ff11a008eff10a4cbaf95e3c1a85578c2df3a7bebb5ec81307b1f7a4952271c985f780   #>   13e17dbb49f865ee52ad68e9dc37203210bffa40b161160e09096fe1af0796cd98b9fc8817c7   #>   57030aaf34507825935b96beeed3b609057a2abc9d996c94b6d3938a5078a1e073e1ad75cf1b   #>   3f275450e73c979373db3fe88d7f0cce8971df1ebba808bafb8f00457803bde96cd3dc41300a   #>   af6ceea0ff7718c61491b814cc9a3939000020004944415487345c48f6dc139fab33adc771f3   #>   313e88bf7f5769be9b73e310115e0f0eac14145e69a0f0caa6077ddddf2216e7a9f05ecea6a3   #>   659e5484c20b051f0b6f9dfb671f48ec9f6ef8dff6393923d9cda716dd1fd6dd8e137e4d12ac   #>   bbff08608477cf69d65c534278ead7000aaf7c98a9e10d63b8481c47786d0e6b81bcb4b6a3b6   #>   79f30da681b493334c05194216ee0c145ec540cf9128bcb2f9a9bcf5b2cfdc2016e7a9f032f3   #>   6f1bc69b9e5484c20b05df0aef3b4792c8a76c4eed5cb360c5b7ff4aba8feefe238011dec07c   #>   ebd213639cc4a2f0ca2687cdfe42af707084f7458ef0d68fee97dbd8bafd1e72846599d65ba5   #>   fcd932517815033d47a2f04a676e86e52a1e2f18e6a9f03662d3d1224f2a42e185826f85171c   #>   bafb8f00477803b34ac7334dbac042602650786563b302f00291388ef01ea9ce1ed74c8be87e   #>   ccb4cc4ba30579f5a8827ad2e70e42e1550cf41c89c22b9fd74bc52fe18ce745a33c15de366c   #>   3afad6938a5078a180c2ab0addfd470024bc81cf9bc5124dfd85ce22517865339f49fed942f3   #>   d172843730338d39b099e873fd6395e882aba2f1ec224dd353394d3b507815033d47a2f07ac0   #>   da26b10bf802c1356d021e0befcb4c6aa9ed4d4528bc5040e15585eefe234012de406049cf8b   #>   aa566ad0758ed3a77628bcb2c9651ec576e6076d1dddf6aa26ad1e5f6b5b98b7b0d78d8d9a75   #>   6e99cc774bfd18d9f77da6243dfac2746ba6a4b5a43326a0f02a067a8e44e1f584c50f8492fd   #>   5defe68b06ec79f5ae6b1bb7e9b74438c019bb4ad3a9e5096f2a42e185020aaf2a74f71f0196   #>   f0ba0585573a13a9e49fc99d256ee7ddb18179d77ec696ce392f26b5e9e49819f4f4448f4477   #>   7e9875e1372225e5998272124f3a0c0aaf62a0e748145e081c1e1013d2065ecccd1264009559   #>   2a1ff0a61e145e28a0f0aa4277ff11507881002d85e4b7b266ff177901ebce34d9f1ab54619e   #>   7935d1f211e54d6fb17e7ebaa58e8b0e4777bf9d15de11e182436c8121fbb684c2ab18e83912   #>   851700db4d4b3fa6f5f7e421efd14b2c79257dae1795045078e180c2ab0addfd4740e10502b8   #>   1432ce92fd4b6de2ecbeb19c79f7346a646d4fcbc1ce7979508f41537605027baa58b63f10db   #>   dde6fd91c1e1825d36c2fb93e41347e1550cf41c89c2ab9f3dd649c3c4d63977ca76f31bb119   #>   2f7952470085170e28bcaad0dd7f04145e20404b215f58a7ff32cecb4dbafbb13ad6dd4b6d34   #>   97be4e396a4e74fb4dd6cd69ef44b7dfcf6aedc470417e09a6a0a4eca73d28bc8a819e235178   #>   f573239529def5a496031dc83bb5353d1a371140e185030aaf2a74f71f01851708d052c84db4   #>   588e4eba3b338f584b53e1b15a7469640923662a8873a24baabdc40aefea48c9454cc145b2cf   #>   1c855731d073240aaf763ea0affa738ff383dcb0b2536801a4f4cb471df3e6f8215078a180c2   #>   ab0addfd4740e10502b014f23523966727dbbde04c66ffefe2a53398c2b6e1ed8c541bd147bc   #>   db99c9cbaa17444a06312183649f3a0aaf62a0e748145eeddcc85cf6de3ce20d7262fb9a2f0f   #>   7a75f03028bc5040e15585eefe23a0f00201580a19cedc618cf54976ff8cddfd857829fb0e5a   #>   99d000894399ccf6bba311ede982d8bac63fd2730795fe51f6a9a3f02a067a8e44e1d5cd4136   #>   53dcc38f820a0a2f14507855a1bbff0828bc40009642bab006fb5a92dda7b2bbdf192f6dc096   #>   7e15b0b5e4c6d1886fb3addbeb925f189fa222064b3f75145ec540cf9128bcba59cb668acb74   #>   b7c93d28bc5040e15585eefe23a0f00201580a69cede624624d9dde681f08df15266dd34c3f8   #>   30b8791ebbb9462c64b6655043b90de458792d2c012de44f5084c2ab18e83912855737ec4234   #>   464ddd6d720f0a2f14507855a1bbff0828bc40009642d815cd8c64d3f48c61776f1b2f6507f8   #>   1aab829b97b09bcf25316f9ac62e9cf189a9aa639d4cfbb73f22fbc4517895033d47a2f0eae6   #>   4336539ca7bb4dee41e185020aaf2a74f71f01851708c052c803ec2de6bd24bbbfc5eefe60bc   #>   b4095bba3db8f91b76f375f1a08d3747b795e8b6cb5257c1ab35a225352617483de90828bc8a   #>   819e23517875c3be426b5cafbb4dee41e185020aaf2a74f71f01851708c052c86ce60e53725f   #>   92ddf7b0f3e3ce8997d26b76469fe416d464b63f6d3ee886a16d9a5c79dbd86d4c6db973bbdf   #>   78f18ddde7269f1ad82d28bc8a819e238b88f01e997c6bddecaa0dfbaeb42f7622bcbbc734af   #>   957d4693415f496a5aaad8648aa1badbe41e145e28a0f0aa4277ff11507881002c851c2a4fdf   #>   615a24dd9f19f35bc134d8e0736696b1c7c2db1fa237a7f3d67353010aaf62a0e7c8a221bc93   #>   cf885d45376fb62b1717de134f978d1e29e3ce3df21a980a7d994cf1b5ee26b90785170a28bc   #>   aad0dd7f04145e20404b2143e93bcca749775f453bed7073695baab0e2def0e69fca50dbbb78   #>   773ee2a0f02a067a8e2c0ac27be23ef3e5f5a1cd1ec2c27bc0fcc76b6d180f7977d299a2abee   #>   16a5000a2f14507855a1bbff0828bc408096428e5e6cbdc33cc4d9bfa775f7c696e1065bab58   #>   4ba747b78fb76eaebed39b7371060aaf62a0e7c8a220bcd6cb2ffb73760f51e13d61fdb1a626   #>   886b32f0b23553d480d12a77a0f042a1b808ef6fab86dddfee86ebb73a5154b9e8ee3f020a2f   #>   10c0a5906d6799ef30adf338bb9f6869debd36b51cc48a72e6d227c8f647cc9b4f5b23ff2c5c   #>   80c2ab18e839b208082f3de4be363bbc5d54788750876a2ebbadee781860a670090a2f148a87   #>   f0eeee552a72d9ac0bff73efe5975df698b8aaca4177ff11507881002f85ecb98edc6032faf3   #>   7c3710c87b283d7e936486fe6d3837fef8e955d3f617b3c8f60bbe49b5c547deeed3a14dcf57   #>   7e721092b76440e7d6f73e6fae1a855731d073247ce13d710e65a9c648661f41e1dd5d963ed4   #>   7c91b02f3a5d50add6c503f73a68f4c1590fb66fdb738ae828e1b1a64cf1ad836ae081c20b85   #>   6221bc134ac6ae9b75910d571b46d63fc45d550abafb8f80c20b048829e4ed2b33c2867adb06   #>   febe41d6b70bcf9d9bd1cc6e9dfbe36323ebad55eeb9c3b27d5bb7c8b21417bdc277eae41c1e   #>   1c7d8c9cdef507c190fc5763af7f5f171fa28cc2ab18e83912bef0cea725d5389fd947507847   #>   32876acb0f5a7e7674dfb41b44fd75ffa3d189b64b7617fc03f58758a698906aa6d00c0a2f14   #>   8a83f0f68a5fc9eb225b42d962a603599581eefe23a0f00201660ad9b570ca8ce54785773fba   #>   fcfdb797ee4e54bae5fd57df5ac3deacf256cf7e759ea8a226665bc3f8955d36d99cc1710e99   #>   96d7c81816db8ac2ab18e83912bef09a6e6a319887a082c27b3d73a432dcd9ff869ade58cdfa   #>   58a8c5dfc47ff1312a2d150a09668aaf17bdb902c8bc112980c20b856220bce125a1d2ae193a   #>   3d2ebc7f641b462727b62a01ddfd4740e105826f52c83ff554bcfd0cf34dba84c8efb0b9d605   #>   3162c68bc2ab18e83912bef0da2c043e97de4750786d5645fc9e1332c8b277c63a815abeae68   #>   0e29b542a465414e05ff4ffc21b82f5c5078a1e07fe13d9819bcbe9a6e0bed4a84b7b0836154   #>   3e252eab32d0dd7f04145e20f82685e811debcc6d69b74852dfc986ed690f40591cd28bc8a81   #>   9e23e10b6f23d65227d1fb080a6f29f6500956b288b1949a91b0ec096e25c7ceb3869c2ef8d8   #>   16851708beb95bf95d787b04afae567f85778d0bef4bc1cf87855d550abafb8f80c20b04dfa4   #>   103dc23b99be4b77e4867c9e4e85d48f0cb740e1550cf41c095f78af662d7536bd8fa0f05665   #>   0fc5998a977926dc8d5bc9083aa49748d35078c1e09bbb95cf85f7ef8a865129f2829a4978d7   #>   063faf12765529e8ee3f020a2f107c9342640a6ffe4ed1117bf5e85b683abb22314567e6cefe   #>   4e783b0aaf62a0e748f8c2db85b554669d1841e1bd843952c6a1a4012b998052bc3af2abd121   #>   990744da1638f5dbd1ffa0f002c037772b9f0befa6e0b5352cba6b5c78f7063fcf10765529e8   #>   ee3f020a2f107c9342a409efee21176704ef9ed78f3bc6dff76bf68eff2227e4444526e4ce70   #>   010aaf62a0e748f8c2fb1af355ae924fef2328bc039943354d1e90c35e7a760bbd9959c186bc   #>   c16f59feacb6a1f5cecf7bb808af2a1c0685170abe17de39c10be6abe8ae71e10d043f8f1776   #>   5529e8ee3f020a2f107c934224096fc1083221e899ef70f79ec1de42efe2847cc3865c182e40   #>   e1550cf41c095f78f757a0bfcaec180141e1dd400ff4315e4e1e5087bd8e7a73ea18cb863cc2   #>   6dd8da8b62fb96ec29f02730605078a1e07be10d2d657a22ba6b5c787f0d7e1e29ecaa52d0dd   #>   7f04145e20f82685c811de13b79bee86e9cff2767f81bd85dec40959c686540e17a0f02a067a   #>   8e842fbc8167a86f7259766e5bd195d6e8913e758f27dfbf127b1db5e154c13e45363af19af5   #>   7669d3de4d8af4dc6428bc50f0bdf0862625fbdfe8ae71e13d18fc3c45d855a5a0bbff0828bc   #>   40f04d0a9123bc3dacf7c3c99cddc7b0b7d0969c109bdf55cf0817a0f02a067a8e2c02c29b7b   #>   a5f59b3c9ddd45547877d7b21c2993334783dd5b6eed392183d890ae9c9095d6d923aee65838   #>   685078a1e07be17d2378adec8dee6a7d696d9eb0ab4a4177ff11507881e09b14224578e752f7   #>   c3529c59c666b3b7d0fb39556c61432e0d17a0f02a067a8e2c02c21bd875a1e97b9cf6b4cd1e   #>   a2c21b586f9ed13a933bb8f63cfa2a328cfe9c90f16cc8c0e411b9b5a8fdedceb0a880c20b05   #>   df0befd2e0a5b230ba6b5c78871b6464af2a74f71f01851708be4921898437776eb766e75e9e   #>   337e97c0510a1ad03744ce13a09dccc843e3355e1dec14fb7dc20528bc8a819e238b82f0060e   #>   7726d3e1567ed36e0761e10dfc780db922eaf09784e8c65c46c6464ec8976c0867a19851f4fe   #>   e58af0a006145e28f85e787383974a8fe8ae4478ff5bdb30cafc475c5665a0bbff0828bc40f0   #>   4d0a4920bc6f9c1dbd55951e70987b9435cc0db1f491e4114de980ac7dbc4a7a33952c0f6f47   #>   e1550cf41c592484371058dde9b4d097f8c2a70fda168b0b6f2030b77556f048e957bc243072   #>   6033731995e7c630930856e42c5fdc90a96482e0a9000485170abe17dec2e08593752cb22b11   #>   ded09cf52dc55d550abafb8f80c20b04dfa4105be13d611e937bd10fbca30c66ee6fc6fbc923   #>   16d0fbf37e560d04b697a642ae8f6c47e1550cf41c5944843778956d59fe45c2279f4e843710   #>   c8fd66f906b1b9710397d297def3dc10665295e1c9f7df91460718b78a350e2228bc50f0bff0   #>   865e6eb929fc349708effad070f80f9dd8aa0474f71f01851708be4921b6c26bfdddb3ee5ece   #>   51ee6485770c27e476ebee75f7f3db4aadf75436fa4b2c0aaf62a0e7c82223bc497126bc0ed8   #>   52c27a1d9dcd0f29686e0d69c89967cce605d30ba5b45d0b28bc50f0bff0fe111a90df32bf90   #>   08efdfd342bedbf09443614d15ddfd4740e105826f52889df04ea1ee56ad394769c5dee09ee4   #>   841cb9dcbc77a52f451a7b9739a4e49ce856145ec540cf9128bcc9996379fe5a96f7d76c887d   #>   f5cd21d5b772767f97cd07d565b45c0f28bc50f0bff016865fffaef0f857bf8784f7e4ce71e1   #>   d14425373a36d614d1dd7f04145e20f82685d808efd11af4ed8ab31693cd13deb1bc9a8fb48f   #>   efdc60b350630b06c5df75abbc34b615855731d073240a2f874599f14baf9688ef068df7a678   #>   c8653ff2f6b679c27b51caadd6060a2f148a81f0163e1bb95e427f94562b19bd78a63af5d594   #>   d1dd7f04145e20f82685d808ef74e67675abb978e79a251b8f5a0286b037b80ff8757f7059e4   #>   51d399638467e9fca265e4f7d88afde2efb8a1f02a067a8e44e1e571e8d68cc8555a66a86848   #>   c1ece8446a7527e57177dec98ee16d9b5283937074e392d53bbd3a7818145e281407e12d1c99   #>   415d3a25142f3a114277ff11507881e09b146223bced99db553619b4776868780ab2ac96e689   #>   893e63038eb28765f961faf0a726ad75d4e0bdb3470e7a69e909d316145ec540cf9128bc7cf2   #>   a7dd794d8b1eab1cc57c37f5992193d70bed7a09931026b969259f05adc3afb2d61f2cf8c69e   #>   1b5078a1502c84b7f08b8b2c57ce859f3b735529e8ee3f020a2f107c93426c84b73e73bb3262   #>   636ce754219b9aef26010517d1fbdfa3a6f921507815033d47a2f06a672c9d0f2a888d9c70c8   #>   9ef8408bcab3bda8200c0a2f148a87f0169e5adebe62f46b5dbac5fb271d99aa2474f71f0185   #>   1708be492136c25b8915dec59192d1e605236a6d2611f3a9ddb3b7ab697e08145ec540cf9128   #>   bcdac9ad432504ce3c66eef8fe6c530d6923bca822040a2f148a89f00639b57dc9acf1d3e66f   #>   fc53dc51a5a2bbff0828bc40f04d0ab1115e7a5dd0209f840bdeb22e90767e7c2eb1be9682b4   #>   d755b53f80c2ab1ce8391285573f6bad936637e78ffb75ce41ebfa8e69b33ca823040a2f148a   #>   8ff0ea4677ff11507881e09b146223bc4d58e1dd11dabe9f7ef4db8b84e499a70ccb18a9acfd   #>   01145ee540cf9128bc009857d694109a7932a0e1212a1b9df6b317b5a0f0c201855715bafb8f   #>   80c20b048829e4c8abad6b64669f7beffc02e1105be17d9cf1ddf3c3db9fa437679a26e47c29   #>   36ecc8a8339f3da487a0f02a067a8e44e185c006f26773667f6a169663536ead9959baee5def   #>   8be7291b7e2c45a7a301a91c2e3128bc5040e15585eefe23a0f00201600a99563d96f99b7c26   #>   1a632bbceb99598522cb489cc388f00ba6a8bdcf5d916518e56e992c3cc9981c507815033d47   #>   a2f082a0e0bd8ed50ca3e48503b7500533cf8ca58f4b57a7707ce6c538a3562acd4d0c0a2f14   #>   507855a1bbff0828bc40009742f27b99527fe93705a3ec575abb8dba93540a0fd6ddc2dc618c   #>   1ba9c0bd87533a0757a0f02a067a8e44e185c2a97f074efd416d2be867ca1fa55e737f709be5   #>   1dbf4ea9b58940e185020aaf2a74f71f01851708e052c8004bea2fb9582cca5e78b757b31c2c   #>   fa3ac832f60e534f5efb5d83c2ab18e8391285170aa782ff2768e11d6c492019f3928427ffeb   #>   b9219b8e16a4da605b5078a1506c84f7ef5f0eeeb222eeaa52d0dd7f04145e20404b210ba961   #>   0895f7f16302898437f0c96966df8d2ec73497bdc35497d67ef7a0f02a067a8e44e185828df0   #>   7e4ce5a90a7bec433fea76564923fbd227b7da1707a9cda6236fe6e245e18542f110de0dbd2f   #>   29c97cb51de96aeae8ee3f020a2f1080a5908246f415f2a8505c02e10d7c1d9ff2a77cec67c7   #>   d5ec1da691a4e6a7020aaf62a0e748145e28d8082f3303cc837681df378f1597ea979be0e036   #>   73c97c2cb9fd115078a1501c8477dbe5ecf71a85b788e36be1fdee9d0953171f51dc1c5646ab   #>   084d7d9948780379132f093f8ba9fe307904b3b70453494739ad4f09145ec540cf9128bc5060   #>   85773d9342b25f9ab6f41815b7dc3cff61d304b38d75650e95becb93b340e185423110de5599   #>   b6be8bc25ba4f1aff0e64d8c3c1acd6ab741697306b197c80a91b884c21be4c72533e66e30cf   #>   1c743553c7cc54db2d01145ec540cf9128bc506085f719dbbb797647cbeb669b2a584aafb19f   #>   f6e52de6304dbc390b145e28f85f78f76547bfcb69a5ac3856d6d4d0dd7f04145e20d8a7902d   #>   1791ec9b31305f6173ee60ef225344e292092fc31b7415d5553fc8b603855731d073240a2f14   #>   58e1bddb56780da3e4d0f85fd6f9f4eb684fd91efc18b320e4546fce0285170afe17de4ea1ef   #>   71d5c1ebffe7a46347958aeefe23a0f002c136856ca86ccebf1d141aeff5ec3d4468f97a47c2   #>   5b400f2f9aecb6b93241e1550cf41c89c20b0556785b26105ec3b89becf31a5d54c67ea8c274   #>   6ab78b3dcab728bc50f0bdf0fe167a5badf53f9c0baa6c74f71f018517087629e4e7b3ad19f8   #>   7175cdc961ef201344e21c096f606b554b0d77ba6cac5c507815033d47a2f0428115dece0985   #>   d77836b6cfb54cd118fbc3df67d9a9d2f71e9d050a2f147c2fbca1993febfcdbb99f4a4777ff   #>   115078816097427a5179bac457ca9a43af2b1f64a1489c33e10d7c61fe19b14ba2f7a7d582c2   #>   ab18e8391285170aacf03e96587833a32bb21d64df8da5d7b78972dc3c40a2c6a75e9d050a2f   #>   147c2fbcd3825fe409cef5543ebafb8f80c20b049b14b28379c1f27665cd59c0dc24b2e9579f   #>   6d7128bc815d5dd3a3c73f7da2ab86ca07855731d073240a2f1458e1fd38b1f01af746766127   #>   72306a27aa60f219d13dd23bedf4ec2c5078a1e07be11d19fc2a7fe35c4fe5a3bbff0828bc40   #>   b049212f3389ba8c9074cae0780dbaeeae42714e853710f8eaa9a66756aad7768a864584ed41   #>   e1550cf41c89c20b055678f36b2716de4a91891497b025e513d670645a4ebd4a35af1cb4d1c3   #>   b340e18582ef8537a4103f3bd753f9e8ee3f020a2f106c52480736537b3313ba1daf5235c77e   #>   20e4e05c78c181c2ab18e8391285170a360b4fcc482cbcc6baf01e9fb3056769687b1c145e28   #>   f85e781705bfec9b9deba97c74f71f018517083629a4299ba967286b4f7e1b6bcd2f8b85a1f0   #>   020185571a28bc50b011de82b3d92c19e3bdf01e7bd399826b35b43d0e0a2f147c2fbc79c1ef   #>   fedbcef5543ebafb8f80c20b049b1472099bc215cedb75c8b22cc400c128145e20a0f04a0385   #>   170a36c2fb5662df35de8cecc2ae19fc9cfaa69b40e18582ef85b7b0b56174706ca71ea0bbff   #>   0828bc40b04921b7b0297cbec2161def4d5e6faef49a68100a2f105078a581c20b059b31bce7   #>   2511dee5917d98772132b76a687b1c145e28f85f78bfcb30d2208c69d0dd7f04145e20d8a490   #>   814c064ffb51699b36f5a81eaab5e1d3fb85430a0bbf1833e091911fe779d82c8f41e1550cf4   #>   1ce95be12d583dead17ea356a85cc13125b6cc18fed88b0b8e9a37ad4ae2bb25f646f6395e97   #>   2ae89ba48ea3ef3ddb77d02bdf79781628bc60f0bff0168e358c5a471cfba97474f71f018517   #>   083629643593c21b2b6fd64f5f6c3ce060f7bc99b5232dadf29cb209256483c2ab18e839d2a7   #>   c27bfca59a916bb5da681813607358185d97b1744fd342698392082f19a9bb26cbb2bd61e205   #>   cc77f7ca8e665a0f7f4b43e185423110dec261c19bf13ccd0b0b034ae628bc40b04b2157d229   #>   5cdd3b6beed87545bcade77fabbb352e41e1550cf41ce94fe1dd6e7a45e042b1295874927b6f   #>   bcb9a72d209bbb2611def7c85eef669b36d7ff2161258b2ac677bbcbb3bf025078a1e07fe15d   #>   b66c59f7e097b9769fd7162cb3e0dc59534277ff1150788160974256516b045d59a0a76da2ec   #>   b2bc315de96bdded71070aaf62a0e7485f0aef76cb44dba74337debc9bcdcd2df1566c7bcbc4   #>   bedbdc14beeea2d8d6f42e071356f28e25df363fe1d1b9a0f042c1ffc29bf0ea70eeac29a1bb   #>   ff0828bc40b04d212f5abea3d5776869993079d413e9730fe96e912b507815033d47fa51788f   #>   5353c05c007c04d2c3d6e696d910dd7e67c23bfa597bccf1f9335a86c63554ebb636711d5f96   #>   b51ea1b747e782c20b05145e55e8ee3f020a2f10ec53c8f892f1afe8395fe968970326d317d5   #>   93ba5be40a145ec540cf917e14deb1f4b5aa77a62e1e5f51bf751937440b9e4e744367476914   #>   ecfc26f9eb08375387c858efc5a9a0f0c201855715bafb8f80c20b8404296475b3e817346b40   #>   e29fe2805087bea8ca1ee507c103855731d073a40f8537bf3a7dad563aaeaf697cd8a1ba9f44   #>   0ad6d9dfcecb3c99f8c5b4447cc61ce576c967110585170afe17de7a8970eeac29a1bbff0828   #>   bc404898423e7bf2d626d7769dbcc7a60816ebd9fbcebbbadbe406145ec540cf913e14de95ec   #>   b5ba585fd3b89ca8c834b77fb4e862bae0accbafbf73fa3e17953cc6d451ce9bf7d65078a1e0   #>   7fe18582eefe23a0f002a1e8a710667e77c37854779bdc80c2ab18e839d287c2fb027bad0ed1   #>   d7342e367f4b378d162da2b697dde9b692ebd84a920cf84d01145e28a0f0aa4277ff11507881   #>   50f45388cd94985d74b7c90d28bc8a819e237d28bc0fb3d76a777d4de3b2806d6eed58d9a396   #>   cd69b35d57528fadc49b5fa85078a180c2ab0addfd4740e10542d14f218fb3378c4ebadbe406   #>   145ec540cf913e14debeecb5da4d5fd3b8cc679b7b56ac2cbfbb696bc997dd57722e5bc91c19   #>   8d6740e185020aaf2a74f71f01851708453f85bcc4de301ed1dd2637a0f02a067a8ef4a1f03e   #>   c75eab4fe96b1a972fd8e65e112f9d5425b6b1de47295472355bc99a945b6e070a2f14507855   #>   a1bbff0828bc8af96c48d79b3b3fceae5f5ff453c807ec0d63a8ee36b901855731d073a40f85   #>   f723f65afd20a5a36f1fd7ad65bbdeb30fa7d8c804e496639adbc7547c70cc75a719c6e93933   #>   f252a9a41f5347b637b3cca0f04201855715bafb8f80c2ab94858da2b9f49c37a992a29f42a6   #>   b237d1c775b7c90d28bc8a819e237d28bc7955e84bb57c2a33127c7f7b5ae42865077ba3bc1d   #>   98d4b28cdae368ca332ab03357b44df590f6a0f04201855715bafb8f80c2ab9002f37b5db75b   #>   1f1f14fd14329415de7b75b7c90d28bc8a819e237d28bcec98865446347c503e7e9c06dfa7da   #>   503bd6a553cdbdd2834acea0fb24b587de0941e185020aaf2a74f71f01855721f75bd2692bcb   #>   b086a29f4206b0c27b9bee36b901855731d073a41f85f718352741dd149eccbe9b613e52f51f   #>   536eaa0dd6d469647e2abf8a2d1906c583f22b0981c20b05bf0aef841087c8273bdcbbab2b74   #>   f71f0185571d13933d5429fa2964242bbc1edd31bc05855731d073a41f8537b0b992f9422dff   #>   a5fb036f2e6bbde82f67de4f90406e53731569933da8e279267d9d51e0413528bc70f0abf086   #>   bfbd2bc9273bdcbbab2b74f71f0185571907e9717359db4ca5453f85d8cc1d345e779bdc80c2   #>   ab18e839d297c21bd86c7ac65b7b430a076e4f5ff55ed868e058c77805a5a67951430b367f6d   #>   f4a21e145e30a0f0aa4277ff115078953196f9d2f5379516fd14c2be4a9db68d1f050f145ec5   #>   40cf917e10defd5b7ea5843770e4e90a91cbb4dc93875238f29634fab2af9f524b135130eb9c   #>   c8e133eed8e2490517b25630df938a5078a180c2ab0addfd4740e155c6f5cc97ee3c53a90f52   #>   481ffafc6ed5dd2257a0f02a067a8e2ceac25bf04efbd0dfa2351fa007bee6ce1f74cf5d4fcc   #>   3d96d2d147b337d36f533a6062d68eed77ef9333f67874f43aec89b85fb62d1928bc50f0abf0   #>   b60fb1857cb2c3bdbbba4277ff1150789551894da847e2a53e48217ba8332cf5b5ee16b90285   #>   5731d073641117deaf9ac42ec8b43bf6c93f7c5736adcd945f4b8453c1ff137f7875f02bd813   #>   59e1494528bc50f0abf0c24377ff1150785591cbfcf4677914e28714b2b8a4e5eca6ea6e8f3b   #>   507815033d47166de1fdb082e9923c4ffe6880e66c5a1b29bd92289e0aef7dcc7994f8d9938a   #>   5078a180c2ab0addfd4740e155451e33eb8d61986e3fbe4821ef94899f5bc971ba5be312145e   #>   c540cf91455a78373f25357400002000494441545a47d6373828bb825bd8b4f6a2ec3a62782a   #>   bc7399f3b8da9b8a5078a180c2ab0addfd4740e155463526a1a69b5607f2470ad9486e7f8dbd   #>   f939500128bc8a819e238bb2f0e637a4724e0fd935b00f468d39b2eb88e1a9f01e3f873e0f6f   #>   86f0a2f08201855715bafb8f80c2ab0c66fa1ea389a9d42f29e4eb47afac55a349cf45de4c61   #>   a902145ec540cf9145597867d039a7e466c9354c63d25ac66ec955103c15dec01cea3c9a7994   #>   c35078a180c2ab0addfd4740e155c64ce6ce30c254ea9b14f24fdd4d4815145ec540cf914559   #>   786f6492ce60c935ec2d45d7e0d1488080d7c21be867398dea3b3caa0685170a28bcaad0dd7f   #>   04145e65e435a06e0ca79ba7bff44d0a41e105010aaf348ab0f01ecb6484f772d9753c42d7b0   #>   54760d048f8537ff51d38bc5e77936c70c0a2f14507855a1bbff0828bceaf8c83a8941da2c73   #>   a16f52080a2f085078a5518485f73bc6778daab2ebd8474d60db557605713c16de40e0bdf3a2   #>   2791d967bf6795a0f04201855715bafb8f80c2ab9009e9e61bc3204b996f52080a2f085078a5   #>   518485770d2bbc25a457f2a565feed2b525bc722299e0b6fe0c4fc079a9d7b719bb13f7a5807   #>   0a2f14fc2abc13f8a420af6ed0dd7f04145e95cc89cf1194f98ab5c837290485170428bcd228   #>   c2c2fb3d2bbca7cbafe53bd360ad2e1efaae02e155010a2f14fc2abcec55cf9082bcba4177ff   #>   11507895b2ab67f9f0d7ad74177a0678dfa410145e10a0f04aa3080b6f2ef34699718507d51c   #>   1f7b56f8d8e9572ef6e0e871400aef89af962efb26df41000a2f14507855a1bbff0828bc8ac9   #>   5dfcf2d3633f38c26cf74d0a41e105010aaf348ab0f0da2c0b31d49b8a3e9f32f48537bc9ad7   #>   200640e1ddd0b562a857abdcb759380485170a28bcaad0dd7f04145e20f82685a0f082008557   #>   1a455978dfa26f7499f21717560738e13dde8bac9f99f9b8e8535e145e28f85578dbf349415e   #>   dda0bbff0828bc40f04d0a41e105010aaf348ab2f01634a184f761dd2d4a0568c27bf45a73d7   #>   de7a422c0a85170a7e155e78e8ee3f020a2f107c934250784180c22b8da22cbc81ef2c532818   #>   971ed5dda0540026bc051dac7f4cf4140b43e185020aaf2a74f71f01851708be492128bc2040   #>   e195469116dec0aaaa26256be4f5285b6f0126bcb3e9f1221f0985a1f04201855715bafb8f80   #>   c20b04dfa410145e10a0f04aa3680b6f602b595eb8440ff665d922052ce12d389f16de2b85e2   #>   5078a180c2ab0addfd4740e105826f52080a2f085078a551c4853710587a6fcd7423b3c1639b   #>   743724556009ef67ccabef693f88c4a1f04201855715bafb8f80c20b04dfa410145e10a0f04a   #>   a3c80b6f90137bff53f8bbee46a40c2ce17d96115e6392481c0a2f14507855a1bbff0828bc40   #>   f04d0a41e105010aaf34fc20bc81000aaf6c7ab2c23b881f85c20b87e222bcbfad1a767fbb1b   #>   aedfeac05025a3bbff0828bc40f04d0a41e105010aaf345078a1004b78bbb2c2db47240e8517   #>   0ac5437877f78aaeb7b82efccfbd975f76d963c2a62a09ddfd4740e105826f52080a2f085078   #>   a581c20b0558c2fb082bbcc344e25078a1502c847742c9d8b7735d64c3d58691f50f61559583   #>   eefe23a0f002c137290485170428bcd240e105c2d1b56f4f5df4bdee561026b1c2fb8e481c0a   #>   2f148a83f0f68a7f3bd745b6cc0f7e9ce9405665a0bbff0828bc40f04d0a41e105010aaf3450   #>   7841f075c7ecf06dbbf6c85cdd4d89b02b83f6dd2ca169df5078a1500c84774c78f6906b864e   #>   8f0bef1fc1eba893135b9580eefe23a0f002c137290485170428bcd240e185c033e49759a3ce   #>   7add8d8990430b6f77a130145e28f85f780f6606bf964db7857625c25bd8c1302a9f7260ab12   #>   d0dd7f04145e20f82685a0f0820085571a28bc00b8df2c966557e86e4e986f4a597db7c24f42   #>   6128bc50f0bff0f6087e2d5bfd15de352ebc2f053f1f16975519e8ee3f020a2f107c93425078   #>   4180c22b0d145efdbc6055cbaadb743728cc344ba332e68945a1f042c1f7c2fb7745c3a81479   #>   41cd24bc6b839f5789cbaa0c74f71f01851708be492128bc2040e195060aaf471cdbb2f968fc   #>   5f87bfde4606e7eeddb423dfbce7f62c6af04007e14a367eb051425313f0727c9c8591354330   #>   0885170abe17de4dc1efe5b0e8ae71e1dd1bfc3c43d855a5a0bbff0828bc40f04d0a41e10501   #>   0aaf345078bd60dfd04bd28237defa037786fef57ddfdaa167a4578e3a1208acbea74af073a9   #>   9ba7c79d9759e3214dcc6207d70cd5915673a837e71008acb824d6a266eb44635078a1e07be1   #>   9d13fc627e15dd352ebc81e0e7f1c2ae2a05ddfd4740e105826f52080a2f085078a581c2eb01   #>   932ac64c317b78c189fe99b17f557fad435aec7383b5d19d0bcea085d7182c50c7f2f264f7d3   #>   5679741e050bba5f5ced8cc60f7e241e82c20b05df0beff8e057ff4474d7b8f0fe1afc3c52d8   #>   55a5a0bbff0828bc40f04d0a41e105010aaf345078e5d3c72cafedae677c3642e93991bd37b1   #>   45d7f2eb989c6eda3f7d9ab727e400145e28f85e78439392fd6f74d7b8f01e0c7e9e22ecaa52   #>   d0dd7f04145e20f82685a0f0820085571a28bcd2793681e1d264ad0eefbe982d39975bc7ca74   #>   4b40fa6aaf4f4a14145e28f85e78df087ef1f74677b5beb4364fd855a5a0bbff0828bc40f04d   #>   0a41e105010aaf34507865b39e59b22111758f87f67f9f2d38935b49252aa28ae7a725080a2f   #>   147c2fbc4b83dffb85d15de3c23bdc20237b55a1bbff0828bc40f04d0a41e105010aaf345078   #>   65d35ad4770d635c68ffb5ecf68b79758c6442c6787e5e62a0f042c1f7c29b1bfcdaf788ee4a   #>   84f7bfb50da3cc7fc4655506bafb8f80c20b848d93873cfae262208b66ba0785170828bcd240   #>   e1e5933b7f78ef47c77c2eb6f3cf25c485b74928e0701ab3bd29af92ba4cc839a99da2345078   #>   a1e07be12d6c681859c722bb12e19d1cfcd8d289ad22885c4ecd6f10c9c9e59efa87eeb62008   #>   8238e1d7672a44f2d7f9ef9d14d87d9eb8ef1ae9a1bf3f8fb1db9bf22a49674232523f510481   #>   045778436faddd147e9a4b84777d687dc00fbd6d178224e1b776f1ac5cfd6bddad4110041167   #>   4bad78fe6a29f017fb5807c26b6c0d066c643737e4d4f10f9b43fd2ae36411040c5ce1fd2334   #>   a15fcbfc4222bc7f4f0bf96ec3539e37cdca3fa110fa83fc4fdd8d48999385ffd2dd8414387e   #>   a9392b67add0dd9e54282cfc5d771352e5b7d005ea87b3f84d771b04819e23ff0e36e63fba1b   #>   9132ff2dfcb747475e9b6dce5f171ce5060c7022bc1f05036c1e0957e7d4b1c1e6505f4a39dd   #>   943959f887ee26a44af84f87a27ccf8d5058f87fba9b2048821cc915dec2b9a12f7e85c7bffa   #>   3d24bc27778eab17fa77c98d2e9c3525740f0921e0185efddc664dcb9561ac13ef0e1cc30b04   #>   1cc32b0d1cc39b949faa59f3572b6ec4734e84777d306025bbb921a78e4336873a2ce57c5306   #>   c7f042c1ff63780b0ba333008646c1578b2d843dd5b9b1a688eefe23a0f06ae7433a2f77d1dd   #>   a21440e105020aaf34507893d29dce5feff122de76e0bb250f060376b12fadb5e355c2ce7c56   #>   42cae9a6cec9c27f7eb9e8bdb540f4db1528bc8a4990230584b770247d259450bce84408ddfd   #>   4740e1d5ce7574624edfa2bb49ee41e105020aaf34507893b1ab249dbf2ee7851c2a252ebcd7   #>   87232e63b64fe555c2ae465c5dc2d9cae0d0c3e167e2a56ef950774b5c83c2ab980439524478   #>   0bbfb8c872195cf8b9535b9580eefe23a0f0eac6668e9ed1badbe41e145e20a0f04a03853719   #>   1399f495b69d17d3455c785f0f07bc426faeb49f57c7f9cca1ea4b385b098cc8222d6ac33d0b   #>   a0a0f02a26418e1412dec253cbdb578c7ee34ab7785f641e15e9e8ee3f020aaf6ee6b349be83   #>   ee36b90785170828bcd240e14dc6dd6cfe9acd8bd992c506d973497e38e004adafa3785514b0   #>   4f914b4b38db9429b8d7dca4f377ea6e8f3b5078159320478a096f9053db97cc1a3f6dfec63f   #>   9d58aa4474f71f0185573793d92cdf4c779bdc83c20b04145e69a0f026e366367ff19734bb5e   #>   d0772b7e1b0d585fd6b2bd553eaf869f6d8eb637d573b5e5e0f237df5a715474efa1d6263529   #>   9a4b0da1f02a26418e14165edde8ee3f020aaf6e26b189f94add6d720f0a2f105078a581c29b   #>   8c1bd9fcc51d92f55112c7352f1851650509f9b0a2697bf383dc66edb139f4cfa99da92d1fb7   #>   c80c1dba74db4f8576df440f601bee419bbc078557310972240aaf535078756333c7e46dbadb   #>   e41e145e20a0f04a0385371977b2f9eb4d5e4c333aa252a5d8a78b570c20e31d5a6c35c57c43   #>   5eeecd1e9cc76f564126d3ac5205299ca63d47ee20474feb2ef2b0f676ba51a71d92de2805a0   #>   f02a26418e44e1750a0aaf6e76b3f3e73cafbb4d317e187b778b5b7bcee23f4f216815de8333   #>   7bb66971cf8b29ce638cc2ab18e839128537192f33e92b6d2b27643b3bcbd8c2d1d75632326a   #>   747c3b28a53f0c695cc6c8acd3fd632aecc3fbea641ae5af7c668750bbae64ea903f526cffc5   #>   e6e35f738c1b70a434d32aee806788a0f02a26418e44e1750a0aaf7698c71d699b753729c2e6   #>   dba237a6324f083f86d028bc071f8baef89476fbf7a91c07855731d073240a6f3276307fb05f   #>   cc0b99c2589f3124b8f998e9c1adfd24b5a70aff28fc43b05dcf33758c148c1426ff266b059d   #>   b9118bd833bf5f76ab5480c2ab980439d2a9f06e19d3a7cf981f1d06c94077ff115078b5f301   #>   9d02814cd230af7cbc49e76c120cd227bc9bebc59b5b664e0a0742e1550cf41c89c29b94bbe8   #>   fcc57d66f934ab7df70a55752af87f4254780f54a6aaa8e2e0872a31a6d267318f1761f38672   #>   0bd9ad52010aaf6212e448aef0feba6cd9b2cdb17ffc6fdbc857ae5dbe23599581eefe23a0f0   #>   eaa7b535039e0663dd8977cc6f8f18d504c7096813deada79b9b9bc15ded293128bc8a819e23   #>   517893f2236596cdb943651f65b54fec8f7c27c21b7895aa628a68a0280567d167c17db63d86   #>   3df3a6b29ba502145ec524c8915ce19d1efc864d8f7efe17198053ff7f9ce96aeae8ee3f020a   #>   af7e0e343027c092f375b727ccb765ac79f95281174502fa8437af91b5b9e5be737d28145ec5   #>   40cf9128bcc95966793fac2e7f2e841758edeb2d549323e10df4b2d4f0a0709c28abd8d3d8cc   #>   0999c986b497de2e05a0f02a26418ee40a6f4bc328fb7bf4f393f12f5d5b67ba9a3abafb8f80   #>   c20b8003b7c4bf8a9516e96e4d847674629e2414a64b7827d0cd753f2e04855731d073240a2f   #>   8795a65f57aef8892acc5d3c79f8e465963f976dd6da7945a82267c25b302cfe23555affd8cc   #>   bdfbde1bf7c2f4f5c20749c250e7a7b19e0d795246535483c2ab9804399227bc27cb05ef84b1   #>   7c1a7ac5a54cfbfbc243ffd63814d654d1dd7f04145e08e44fae15c97e990fecd2dd96085b98   #>   17a9eb09c5e912def3e8e6a6fde0f65028bc8a819e23517879ece9139d4aacc62bd40f41dbee   #>   2b172ea8d4674f7ce36156fbc466b17526bc81c0bcead1c3d788fd6cb6a645c9f086b346a5be   #>   e2430ff6341ee7c5d465423e4bb91d1a40e1554c821cc913de5dc12fd8b4e8e7d0109f738f14   #>   169e0a3de9ede85058534577ff1150786190ffc9987edd87cd91fe5e855b46b3c9fc6b91384d   #>   c2fb15db5cfe724f0940e1550cf41c89c2cbe7f0ec27eeea397405bd00da94f81ac215e2c3ea   #>   c7b1576b4fa15a1c0aefccf8b0acb2e137e9f27ac7ff8e3ff72bf103d9d3953d8dbebc981174   #>   4413f993032b008557310972244f783f0e7ec336443f5f1bfcbc22f4e1d4e58691a5788d61dd   #>   fd4740e10502b0146293cc6788c46912ded7d9e6dee5f65828bc8a819e235178dd32dc7c41a6   #>   4f8e6d66864b194663a1e33913de31e65fa9d25e0afa6e1b739515d63a3f210bfdd9d3788e17   #>   73acb6352063052f0224c0ee566ef1bdf0be16fc8a1d8f7cfca3a4619c7d2afc714670ebf70e   #>   6c5502bafb8f80c20b046029c466c1d01744e234092f3be9a671a3db63a1f02a067a8e44e175   #>   c91ccb442f46e6f2e876764d08e32ca1033a12def9d609824b2c0a3c62adb3668ac3c7a6b1a7   #>   f10137687d5967860c1360772bb7f85e7843bfa5fc11f9f869f063bfc8c79dc18fef88cbaa0c   #>   74f71f01851708c052484b36998f1589d324bc36d3fdb4727b2c145ec540cf9128bcee385a83   #>   ba241b4407f85ecd5ead75858ee84478736bd3557c462f91d1cddd79c5f8b9047d1665050606   #>   2faf12df3ffde9d45aa00d60772bb7f85e78430f82fe8e7c0c4d8df261e4e31fc18f93c46555   #>   06bafb8f80c20b046029a41b7b4f7a5b244e93f0ce669bdbddedb1507815033d47a2f0ba83fd   #>   2b7466a4a0337bb55e29744427c23b89a9a331bda184eb175b2330e3be1e1689faa1736ca845   #>   8385a9d5af0f60772bb7f85e785f0c7ecb7e8b7c6c11fc185b7022f8051c29ecaa52d0dd7f04   #>   2f85377f71cfa6e734683e5474952ef7a0f0cae635e67691b15b244e93f0fe94ceb45768c8b1   #>   1d28bc8a819e238bbcf06ebca35ae912e5eaf4dbc3df35c2d1599d9bd46ed4661c3dc59833d8   #>   07b9d1396799b5250d6398d0119d08efcd6c0663b6b87eb135c20fd6e10946e5bd426127773c   #>   7ded79359a74fb406c6a738800bb5bb9c5f7c21bba8d475612feb38c61d48b6efd3db8f52571   #>   599581eefe237828bc1f368ce681f43b0497e9720d0aaf6cf66551f706e31aa1385dd3925d45   #>   37b7f47eb78742e1550cf41c59c48577cf15b16b22bd2b3d8b822d0513cf885d44038eb8af37   #>   af24239855a345a5e882b4c342877422bc6598da59725c9d18811e3571b150f706efb978b782   #>   81ef857775f05b3933fc29345f43afe8d6a3467cf93545e8ee3f8277c2fb9ce90feaaa1ebf8b   #>   8ac22b1d66f9cf8f84c27409ef87747307ba3e140aaf62a0e7c8a22dbc9f669bae8ab304fe0c   #>   3cd6c9ec70ee9f55ec6005333d3ac6f521baa0b5d8211d08effee4aa1ba189bb338bc1bc2a3b   #>   55280c85170abe17de82e097f2aaf0a79ce0a7f7a25bd7043f7f2c2eab32d0dd7f04cf847794   #>   25139495b2b44d425078a573e01c6b2ebf532c4c97f006ba589b7b9efb198d517815033d4716   #>   69e1fdc1b2eeaf5193fb10b2e0364bc0f9ae7f29d9626398d107b9f955ad9bb30f891dd281f0   #>   ee4ee2b98446eece2ccaf1caf4f1ea08c5a1f042c1f7c25b189a106558f0b2792ff8df52ff88   #>   6e0c8decdded4457534777ff11bc12de55d480a9dac73ca88480c22b9f4d55ccffff9a0a2e4c   #>   a44d788f353537b78ad02a19f6a0f02a067a8e2cd2c25b9372b2b6bc00fa55b3f66e6b3ec62c   #>   d668948f956db78c98ca105b67cd91f0e6b3032a585ab838ad388bd8037e2e1287c20b05ff0b   #>   efccd0b7f29c8ecd42ffb93bb6b1a56194f9db81ad4a4077ff11bc12de6be85430c2834a0828   #>   bc1eb0e5a2f8ffbdaea27faf6813dec031d3bbdf8db6a47020145ec540cf914559785fa5f370   #>   dae6e401fb2bd111cb930724e67cc607af22653baac5b796db207a44276378cf4daaba111e63   #>   c3f6cf18747fdf51423f483ec91e5068ea46145e28f85f784f5e46be9b593f47b7fd12fc5bf0   #>   0627b62a01ddfd47f04878bf6052412df995c441e1f582132fd709ffaf4bbf6a89708c3ee10d   #>   0416378bccd55077fc89540e83c2ab18e839b2280bef594c22ee903c805df6f70eb7750f600e   #>   35d254fa44f4adb252ddc5af5627c24b4f021cac89d9b2860eda7677740448fdb7f835d84cdd   #>   3840a46528bc50f0bff0161ead13fd6aa6bf15db343df8af67c55d550abafb8fe091f03ecde6   #>   822fe4d74240e1f5880dd3468c7ad3c9e4443a853710d8396bd48869c2cf8b1280c2ab18e839   #>   b2080b6f2e3baca072f2087636af0a6eff7cdc46cff452699fa57cd5836d5a755fe4e4884e84   #>   37933911669d88abe9980fcac70bdb7127a8b88bbdc93d2cd232145e281403e12dfca56f78f2   #>   bc469fc4369caa17fce7d7c2aa2a07ddfd47f04878ef607381eb79510540e185825ee195020a   #>   af62a0e7c8222cbcabd93c9c913ca2161bb1d56ded83a8038d737ba0180e8437973d0f831a67   #>   97b9968a996999cdbb19efb585816c0d233921615078a1501c84b7b0f0df9b3e5cbe2ffecfdc   #>   a143873e7b524853e5a1bbff081e09efb56c2e78417e2d04145e28a0f0020185571a455878a7   #>   d9685ff20866fe6dc358e5b6f6fc5b2cc7e9eaf6380407c2bbc1e6cc975907784ca442bea0ce   #>   fd7e4e156fd9d420d234145e28140fe18580eefe237824bcadd85c30417e2d04145e28a0f002   #>   0185571a455878df67f3705af208e69d35c3d8e8bafa5cf3e2bbf71d777d9c180e8477a78df0   #>   eefaf1d2f83f3227d121d753bba7d34f80290e97a62ba82cb4761a0a2f14507855a1bbff081e   #>   096f0f36dbcc975f0b0185170a28bc4040e1954611125e5ab86c167fc84a7e848b988034d733   #>   f10679fdece851eabf9fc251623819c3cb8e5e0eaafed1a1b151ba373113317cc204b4e354f1   #>   301df0ac50cb5078a180c2ab0addfd47f04878df62924729c1b9c55d81c20b05145e20a0f04a   #>   a38808efde51d754314a9d7d8fe5c902bbc0eec5c98fc2489cd138a556e52de9d7eefa0e0356   #>   88adbacbc189f056674ea46668f3e1d90fb46adef9599b79bad94925ca702663dc5bc5babfe0   #>   64f328bc5040e15585eefe237824bc874fa393478acb96270785170a28bc4040e195469110de   #>   825124e55e697a78792b6371af263fce1a26c0cb972f1ce244785973ef973cc0e6bd13ce8218   #>   fb4eb7ee5e576c751e145e28a0f0aa4277ff11bc5a786238953a4ab81f0826000a2f14507881   #>   80c22b8da220bcb91dcc4f26df23dbf7522b5e1ad578476a4305d43c2ad4809fe64f99f1b1d8   #>   aeee7122bc27e811b6d99c87cce7b1c2fb4ef208e699f0f3422d43e185020aaf2a74f71fc12b   #>   e1cd6d624d05833da8230e0a2f1450788180c22b8da220bc5d2dd9b6d44a5230d49a87d357fe   #>   3f7be71d2835b1f6e19c73e05044402cd850d4ab82ddab5cb177d1ab8ba820d8b080edda0b36   #>   ec8a60bb8a282216ec054545117b035414414490de3bebf5bb45acc8f9922db349667733d99d   #>   f29ed9dff3076c3299cce4cd9e37cfc949668aec24c5371b062ad488bc7bb16a5887d4885e4d   #>   3a0b4d515632718437f948c8461f8fd89e9f18ce79b66885454dc3db6f24f4e00684970a1522   #>   bc0b879eb577fb4dd60f10c75625603a7e0c55c29bfc3ef00b738f552ada604078a900e12502   #>   84571af540781f0e9997efb66c6048f4aabba3f735ba855f90ef14687dfa3eb9ed2f121aa8a0   #>   4462096ff2e240482227410b8dd2eb51fc9186a7f90a42d3304378a95011c23bed84f05f793c   #>   e2f96ad9988e1f4399f026e71ec5825b7b835adfad4ce15dfae23947ed7fec656f4b791d4416   #>   105e224078a5a15478bfe9dffda0434fba2fce6c863c4bb9e9226ec815f6c94da7d04868a884   #>   2fdab30aeb3f17bd79f29b40eb7f1735dee9f79d74e841ddfbc799d6229ef026efcdcdadd620   #>   3ce82e0fffd25ab3e2cfe45ece6b84f68927bebbbbc7c107f7b8fb3b693b1403c2ab99023952   #>   c05b9fe2fe0e01e155b4ef1187a6a6776cd57392a206181528bc2bee699df9eaeea872c0b7b8   #>   40788900e1958642e19dd43563a30dcf9a5ec66ef8e176dbfa4aa7ecdb30b56e9d1e622f5525   #>   5fdc2cb397756e13b0d745a191ccce136a63fa59e94e39d55dc52f0f31853739f7c846a9361a   #>   1f353f7a63fe75bd638b573885d7880b457a254f78bf3b3973f3aee614bdca0be1d54c811c19   #>   edad23f9e1f920bccaf6bee09da75f18a3f26f5c192a4f78171ce5fbf29e4de7262f84970810   #>   5e69a813de377cd33c6cfc5ee9fbc933ecf917810d5ebbe58207befd496c67abfaf8ae9107cf   #>   89dcfeda50cb5511631ba4f864f35c85759f17eb587ce17579a7fff9fd05a78a3b387420d51f   #>   17dffe343eea9788b4234d7847fb1eb76ef5ba9c7d8a01e1d54c811c19e9ad3f78e34e37bb62   #>   94f7ccd3844f5fef7fb4f7478f53be9a3021b6b29687e9f831d40aaf2e2a4e7897fe2d90677b   #>   abec592c20bc4480f04a4399f0bed6d0ff43bccea725ef28ac6a2edcb308bfd7090aef3981fd   #>   7488ba2b3c7fdd70d38747b731a699bf42c357c57a568af0c6604ce88fbfbd22b6efc347bdbf   #>   483bb284f79d46fea61b953c037409407835532047460aef8dee37a3edfcbaba8f9dcc4ddda5   #>   e7b9bfce9ef4472c5b9580e9f83120bc448897427a8512edc32abb1607082f1120bcd25025bc   #>   d342d3f8b65958ea9e76e6d58b9b38575478c3831b9c19b1fd135cd30d23ef0a2fdc2258a3d5   #>   54a1ae2916dee4b0c0db3dfb464d853c9c8f7ac464c4692409efecd6c1b65bcf96b1573120bc   #>   9a2990232385b78de3544facf3096f5ddd1bb58e73410c579582e9f83120bc44889542c685df   #>   bbdc6491d2ce8903e1250284571aaa84f78cb02e953c76639e39139e0a6f2328bc4b360beda8   #>   2662a4b13c8f5344bee9765db8464f91ae2917dee44bbe012aba464e9bb674bdf0616c21f472   #>   b624e1bd30dcbad003c47280f06aa6408e8c12def9eed7e258ef834f78eb9e773f7f22eeaa52   #>   301d3f06849708b152c8e9dc352662fe246d40788950c1c23b73ec94a89b73b15024bc736ac3   #>   3fc4ad9697b8ab9378e9e49e3f1514de07b93d9d5abcc2817cdb7747b4b162fd708d86627727   #>   4b10de9553c74e137fc561dae999c704761479aef8c6f06170b7d5f32247781773b346afa37a   #>   de8f1c105ecd14c89151c2fbb2fbb578cafbe009efdaecdac31ce77071579582e9f83120bc44   #>   88934256b60ee73ae728b5bd1306c24b844a15def74ef66caaf6e041a5ca238f22e10d3f3be0   #>   32b2c45d3dceed6963ee5ea3a0f01ec3ed6ac3e2beb80d7f181747b4f1265f45ec99acd8c2fb   #>   5cc2d3c2669d8586634bb160d8d5675dd8ff33a16d17b70f1e4447b1f7b3e508ef737c1045c6   #>   90930384573305726494f07aefaa4df13e78c2fb7376edf38e53fd83b8accac074fc18105e22   #>   c44921d3f85cd7466def8481f012a1328577ee716c8481eda4bdc4a348782fe67f8afb95b8ab   #>   05adc27be2ffbc2d28bc6df95e4d895be1ec8836faf3552e10e95b5ce19dd891ed7f1f254363   #>   4edac87f0c5b088e2c274778c38363b85c2b61b7624078355320474609ef1deeb76285f7e173   #>   f7c3bfb26b97b80b6f89cbaa0c4cc78f01e125429c14f2319feb6a154fed210a8497081529bc   #>   93b7f7fd48348a9a4b561445c2db9dff29bea8d47ddd1eda51cb59dc2682c2db84ef55f1f1d2   #>   f2dce18d3a0c7e8a07e70491bec514de77fd4f4e6cf0be70bd184cde25d74247d19194e5086f   #>   f8bd6527fafd42794078355320474609aff7abe5bfbd0fdfb91fa666d7fee12e0c1297551998   #>   8e1f03c24b843829641c9feb9aa9ed9d30105e2254a2f02e0c8e56502b34d16b348a8437cf30   #>   ae5796baafe50705f653c5bdb2262cbc2df95e151f2e2dcf8cbc7745b471355fe56491bec513   #>   de491b04f8038b3800002000494441545ad868b268c5308bbf78f7ab426fb02dbb33f392df56   #>   83849f149623bce7f341149bf24306105ecd14c89151c23bd8fd562cf63e2c723fbc995dfbb3   #>   bb70bbb8accac074fc18105e22c4492173f85cb79ddade0903e12542250aef05a11f8a368233   #>   8b45a04878f30ce37a6fc93b9bddc1b79b9a7cc3c10a0a6f7bbe57fcdd623ffc0bb4ce33116d   #>   dcc757b942a46ff184f7a050138788560cb0e2c103bcd1921b1d3eacc0dfd056bd3fe0f22bef   #>   8a3386b21ce1bd850fe22d12762b0684573305726494f07a4fcb7feb7d58dbcc71fa66d74e74   #>   d7de232eab32301d3f06849708b152c84e5cae3b4369e7c481f012a10285774aa3f04f45a9cf   #>   c4065124bcaff1c6f24574ad422cedd520bb97cd5fcab781a0f0f27f296f5fbc02ffee5d8399   #>   116d7cc91fb9d8d4137184f755ae8d52e622fb34f70b40878925d4cf871ce1e5674276943cb5   #>   911708af660ae4c828e19deb7e2b86a73e75749c76d9611aae74d73e2d2eab32301d3f068497   #>   08b15208378ea5334269e7c481f012a1028537fc20abe3ec2aa57f8a8477f946e1ee46a86504   #>   e3cedcc4dd47cd5efdf3fff95d50785fe7827875f10a739b862b1c14d908f70bfb0662e3c8c5   #>   11de1edc81083d36b1f0c96b7a5f3220fb9bc770ffd85fadca98fcd98f1ce15db565f8f8c446   #>   01960284573305726494f0aeddc071ae4f7dbad9fd820c49affccabb31302386ad4ac074fc18   #>   105e22c44a2173c36f65efadb46f3180f012a10285979f60b74af43da2a2a89a786240b8bb79   #>   9ebc8dc7ac31130b4e97203ad3dabea14eb58a9a37edf270d04747b6f174f8c885a6e48d27bc   #>   dcaf13cec6d195a69e11188737380372198f01079034f1043762f24332f62a06845733057264   #>   e44c6b5d1da743eac34cf70bd2e0dac5eef579903717f8f6f17cb56c4cc78f01e12542bc1432   #>   2498ead689980d491f105e2254a0f0fe85539c880106045125bccb3a043b7bb4823672880aef   #>   d8a0e4458f903b7ffb600591a7ab8e0e56e9203851480ce15d52e584a98a7ca47bb86fa6b52e   #>   8b93ab760bede108b1b6239024bc2b43537e1c2c3ebf46d9407835532047460aef30f76bbf24   #>   f529fd8eec7a1ba72769d5fc440384572e1527bcc92bfda9aeb6ec5b43d280f012a1028537f8   #>   567e8ae132faa74a7893df6fe5efebae0b54b4c11015ded05b68db47ff9dfc89805bae3343a0   #>   8d05bbfbabb49d26d6b338c23b95ff323851cd0c0bccd8beffb261dc1ea48cfb21497893b303   #>   2f18b6139bac4e0e105ecd14c89191c2fbef468e7363ead34aff23305de3e96af9988e1f03c2   #>   4b84b829e49fb93774367a535db7e202e12542050a6fe84ea3c78732faa74c7893337d37e98e   #>   5da8a40986a8f0bede2018c2eba32a4c0b3d3c20741b7451975c8503a35e7263c410dea5fc1d   #>   deea88fbc863424f23f73a9adb8594916e65096f725ea75ccf3acd95b34f3120bc9a29902323   #>   85b76ec4c30fbf92fe34af1dfbb29cfc4b1c599581e9f83120bc44889d42be3939fdb7c7d657   #>   cc57d6a9f84078895081c27b14e7273551cf9f0aa14e7893ab86ed9612b3ea8e2fab692087a0   #>   f0aedc2114c326c5275acb332e596854b2496f0c1bf51d5fed95bdabbd8dab762b34de571ee2   #>   3cc3db86fb366c195123fc0c78353f0947d42e849026bcc9e4737ba6be3e557bea9b55380584   #>   5733057264b4f0faf8fdbed4df556a0f1915a7961c4cc78f01e12542092964e9eb836e1dfc81   #>   c627b70480f012a10285f79f9c9fec2ba57f0a85d765f253fdef7c46cacb75c51114de67b820   #>   fea37885ef1b842bece12b5d7463fabed22e03c2b7579fdd327d0f769307c48f218ef0f6e60e   #>   e49ce215f28cf3c5d15046b69528bcc9e4774ff7efff749edf27d402e1d54c811c194b785d7e   #>   fceeb369ab63d69182e9f83120bc44b026854078495081c23bbb45d84fe4bcb7ae5678752128   #>   bcfc685e117735f95924aa72f784476eccd66ef591bfd652df43bc5b09ff353e8ef07e147ea6   #>   a1fae3e215f24c78cc23e3af695285d70cd65cad2a4c788d613a7e0c082f11ac4921105e1254   #>   a0f0266f0cd9c9ce72fefa5151c29b67a88bef8b563885af302c5b36b4a16f6d53df1b840b37   #>   f46fbfce54c1638835d35ad750afba476cbfbf80ef36116dbc18105e2a407875613a7e0c082f   #>   11ac4921105e1254a2f0ae383460272dc7cbe95f4509efbabce57d54b4c2617c85eca8baa36b   #>   03ab9b7fc62a85de2fdc70b9d831c412de91c15bbcd5a322b6df4e407877126dbc18105e2a40   #>   7875613a7e0c082f11ac4921105e1254a2f026e71de493930da48c2195ac30e16dc65b5ef1a1   #>   2e0ee52bdc912e59111e36a363b64ebf700dc199d1e308efca5d426dec16f172dcb602c27ba5   #>   60e34581f05201c2ab0bd3f163407889604d0a81f092a0228537b9bc0f1b5aea886f64f5afa2   #>   84771bdef28a0f5f7b325f21f348c3435c41f6a106ee367203b15bbc7184971f44f7c9e215f6   #>   e30f24fc1870edd7828d1705c24b850a13dedf164e5bbe26560d69988e1f03c24b046b520884   #>   97049529bcc9e4d41bfeb69ed3e82fbda3e7b71546aaf0ce7ffcac230fe97ef357d9e5efeeee   #>   71d811a70e121e8a3639ffb133dd1ddc32812f197f63f7838fea358c9fbf62c10dbb6eb25edb   #>   03868a3cd27c22677d6dfcc50b87f53aeae0ee37fa1e16b997d7c4cc0cbcfcc30e3dd205eff1   #>   6a79afd0b1c711de04d7c6b1c52b5cc25558a77368c579826d1707c24b854a12de5f1ed9d71b   #>   babff6f047ff10af240dd3f163407889604d0a81f092a05285d723720ad9784814de4557671f   #>   193862acb7fc6d8feaccbdc3b3c59477e155eb647670e467c19231d9670bd6edbb3850b0bc47   #>   7602b126b74437f024a77d3ecb5bdcb77966e5219f66d74de38625db3d5db0aa51b8c0d92c5d   #>   722a57e0ec2f74f47184b725d746abe215dee52a749e137c856fcf25826d1707c24b05ab85f7   #>   9711bd0fdff3e0f346fc9e5afa2af7c4ce8e934b30d632311d3f06849708d6a410082f092a59   #>   7825234f78a7ec9ab3a7da0793c951ebe79637795f6007dffa1e4cad0d0cbaf648e35cc98e93   #>   7c05d35afb946d8fc847075604e6ab75693c99957de71b4bac960d9fcbe96b66a2f3199c403a   #>   352b522507f225db0a1c7c2ce15dc8b7e12c2a5e25dcadea0f9393fcd1e82069b464082f156c   #>   16deb7db66beb67ff9cc5d1aeb7f367fbd09a5596b19988e1f03c24b046b5208849704105e69   #>   4813deef37f7fb54d5436f044631683636720753370dec6048ae646040d5b6c8dd2e5e107c5e   #>   76d7c8365e0d3db87a0d2b99b945a0e0fe6ca79a072b6467fbf8dae1490f63bb275fd0262942   #>   0ce19d96a7f5e2e3ab25c7846656f3e6119e7f567664b5c697cafac30184970a160bef0b35ec   #>   7bdc747cdd0f9b04bed95bfcaf54712d15d3f163407889604d0a81f09200c22b0d59c2bbaa63   #>   50a86a431365b48db803995cd52158a1d1986cc907c101c09c03589d1d43d21731dd5832f968   #>   a8422f567240a8fb1fa4578f6f1c5cbf73fa366ebe7bac4dd3257fe74b76118a600ce15d51c3   #>   b5d16045449dc7aafd9b774c0bee57d77468dd70e37d6e8c9a61591c082f15ec15dee9fe84d0   #>   eecf2bbcff5a1d7dd6999dd2bf9d5e51b2b99688e9f83120bc44b0268540784900e195862ce1   #>   7d8cf7bc207d2376f048b8c2a1d9126e8481cc6305c917c2053511d39a2d6913ae302e53f274   #>   7857fba4d71f135e3f305321bc27c7f96bbaa02f7fe851b342a489f30c2f3fac6efbc83a2ff9   #>   6e56778efaf5a36420bc54b057788f487d8737dde76fa947d9df58d771d67b3a3540c3ef83bd   #>   716c5afe5ca2b8968ae9f83120bc44b0268540784900e195862ce1fd2bef7941d68fb805b92b   #>   572323a31f72057fcb54e1b5efb4e26d0c2e58a12357927aea786278ec2e67bb4c85b3b90ad7   #>   a50b1672559c4ff99ee4218ef0f2832e5c165d69cac9993b63db478c61560e105e2a582bbc73   #>   bd9fb01dc6b89ffe787e3dc7711347e329d9b2b1dedf3e5e2c415acbc174fc18105e22589342   #>   20bc2480f04a4392f07ec76b5e98378aee6032bf83cc3de12bb982eaf40b562babb9928d8bf7   #>   921fcd6ba3f4686633f867042ef7d6dfce1f4666d0b22fc2e33734fe36d3c86ee11a9b898530   #>   8ef04e0c3de5e1d44e10a93677e8953dcfbd4dccbf4b04c24b056b857780fb7ddff487f4e72f   #>   5239a06faef01feee2c5f17cb56c4cc78f01e12582352904c24b0208af342409ef8bbc1986e9   #>   577407cff1153aa74b3af1252fa70a3ee50b1a14ef655bbe46fae9d557f982c3bdf53df8f58f   #>   66f6754668fd55d94626843dfc35b110c69a5af8fc501b178956540d84970ad60a6f57f7fbfe   #>   7076213535ccdc5ce1247771df38b62a01d3f163407889604d0a81f09200c22b0d49c23bd089   #>   e4e2a23bf8275f21f3e4c2ee7cc983a902eea95f97e2bd6cca57782f55f0305fb0b3b7fe607e   #>   fded997d2d0ef6ebe0dc131ba1b98523dfa4cb104b78af0af52aea09696d4078a960adf07a93   #>   7ab33aafb90b1bf90aff5cc771b68821ab32301d3f06849708d6a410082f0920bcd29024bcfc   #>   d3b11c5714ddc120bec27ee9920e7cc9d05401f7a299e35415ef253f5f43e6f9dac7f9823dbc   #>   f547f0ebefccee6ce6debeb59de6fb9ab9daff78c6c9a2218c23bc0bc20f5434e4a7a0330384   #>   970ad60aef068eb3395b98e77ef9ffe62f6def382d8455550ea6e3c780f012c19a1402e12501   #>   84571a928437cf3301618a4fb0fb325f21f34843780a5c9737530579c6c2ad2ddecb767c8df4   #>   a0be6ff105c778eb4fe7d73fc3f6b6f4baec30c0adfa0727361ebe6176eb758724458923bcfc   #>   a316c25ead18082f15ac15de5ac7f92b5bf8c9fdee1fe62fddcb71aa8555550ea6e3c780f012   #>   c19a1402e1250184571a928477013fd56e98cf8beee03bbec289e992fe5c41d3ccf4c27c9bdb   #>   156ec0e34cae426634af25eb70257778eb8770ab6bfcb324cfbaff985db6d8bdcbe0795c4b8f   #>   766c51dbb0f9ee778bc42ec5a45b8edcb16dc75386894d00b13ed7af0d046a2d7db2c79e6dda   #>   1d72d344e15ec507c24b056b85d7093ca5eb2e75f297eeebae10565539988e1f03c24b046b52   #>   08849704105e69c81a962ccf7c0b41da15af5ff80eefb7e13fdf670bf8017a9d1b8b37c2df87   #>   ee9329e9122e68f08db77a4e93f0fa038aecbe74669d999df3accd5091edf960453ccce1f158   #>   7632b906a7cf8cdeba4420bc5480f0eac274fc18105e2258934220bc2480f04a4396f07ec48f   #>   11166458f1fa859fe1e59e2ba8c9cec136293c94d9ba51bddc3b5461bdd99982b1e171c97aa6   #>   d75f1aeed4a892a213c1e75bf95ae8b53c72fbc979e21b3559da0affc8c15b46cff45c22105e   #>   2a407875613a7e0c082f11ac4921105e124078a5214b7893e706fd6bf3d044129d5615af5e78   #>   9486e4f4cd82eb73c33d9c16aaf14454273f0d8dd33088955c1c2cd82c3dd46f72de5f82eb23   #>   66b6288def360eb4d12bb2c2e77cb0229e1809cf94b1d164395de780f05201c2ab0bd3f16340   #>   7889604d0a81f09200c22b0d69c2bbfc70bf50b5fc74ea16fee51df9c75c833ccb2b5cf6c985   #>   e4472dfcab8ff44dd9b667a0c205d1bd7caaa1bfc285b9829547fb0b9a7f905d3f7e43fffafd   #>   c41eb18dc7aabd42071ef954c3723e58cecae2559e086dde21e217905281f05201c2ab0bd3f1   #>   63407889a03685cc7ef8f2d3cebdf51355bbcf01e1250284571ad28437b9bc77ee0983765f26   #>   9333f6cde9d5d1f3a36a179e69cde58b6dd9caaaf3027ff13f36b779f5eddc4ef330720356a1   #>   b6bfbf60c5f9b91efcc577bb74d2ceb9264e55e1bbc927c307de26b2197e40e1758a5758da36   #>   5ce1d1e2154a05c24b0508af2e4cc78f01e12582ca1432a97be6a596ed8629ba69c180f01201   #>   c22b0d79c29b4cbe7348fa47b16dff65dee2aaa13ba61db5c30b0295b919799d71b9c2a5fdd2   #>   f78b1b1cf67ea8da1b5b6674b783e01fe9e75e9a56de26ddbe0e957c7078faf6ef16b7078473   #>   f93fd38f35d4ecafe4f9dd64727feec8239e774e260fe4aa1c5cbc023f66714759dd0f02e1a5   #>   82d5c2fb07c35d3ae20f1f10defa0e84b7182fac9bcbe19d1729698201e1250284571a328537   #>   999cf5ec805b078fc92d4f7cf4f63b9e887a9d2acdd0b0911d162c1f33f89601cfcece537176   #>   df130feb35e447f14eae1cfde04dff1cbe38dfae9e1d70cbe04ff9f59f0fb9adff53aa463698   #>   d3307ce44e8fa83a9f87ef87578d2f5ee154ae8d1a35c703e1a582cdc21b4119f25a0aa6e3c7   #>   80f012415d0a191278397c6f257f726440788900e195865ce12d83551d8317ad26e3a2eb307e   #>   affb4959c754f33e7fc1de3db252780ab8bf476c9f67babab7e4743f0484970a105e5d988e1f   #>   03c24b046529e4a3d0d8f36728682307849708105e699011dee4f79bfb7f92ab84c6a3cd529f   #>   85f779fe82bd5964a595c1912bda44bcb2966ccb3712f9dc44494078a900e1d585e9f83120bc   #>   44509642f60d7dd3ab3f52d00803c24b0408af34e8086f728aef31de460fc5aa5a9f8577247f   #>   c1de3ebad6e21d7ddb6fb7206af31df94686cbe83c0784970a105e5d988e1f03c24b04552964   #>   34f755ef22bf911c105e224078a5114b78d53e31945c7c5df681fca3231e490d539f8577027f   #>   c18e78032dcdc5b599ad6b2f8fde38fc0884133d706f694078a960adf0de1449e9ee5a12a6e3   #>   c780f01241550ab988cbe2cd545e9321bc4480f04a43587867dcb4574ba7b6cda92fabeccdc2   #>   61bd8f3ab447bf8971ebd567e14d6ec965b19b85ea2dbf77af36ebb5d9ebdee899d992c97e5c   #>   1b9baa19d306c24b056b85971ca6e3c780f01241550ad987bf6fa1f29906082f1120bcd21014   #>   de95d737cbfe84edfd99fa5ec5a55e0b2f377d7183d8c21fc9e4da7023ff90de460a082f1520   #>   bcba301d3f06849708aa52c836bcf03e2fbf1506849708105e698809efa2237d3f62ebaa79fa   #>   b31ceab5f0ce6a11ca61672a68a477a88d756728682409e1a503845717a6e3c780f01241550a   #>   094d74ef2132c67da940788900e1958690f0aeea1cf8196bf2a18e9ec5a15e0b6ff291e0a8ba   #>   5bcd52d0c69cd0cd810715b4e101e1a502845717a6e3c780f01241550a090fd2e0f2b1fc5618   #>   105e224078a52124bcf7847ec8da2a7e7b2d36f55b78937dfdc6db3ace00c4e28cdfc47f06fb   #>   28692309e1a503845717a6e3c780f01241550ae19e7e739ae3a5b5a2407835433d478a08efa2   #>   d6e11fb37e5afa264e3d17dee490dc530d1dc526a68bcfd4dc1b0fcde30dfa1607082f1520bc   #>   ba301d3f06849708aa52c87b9cf07695df480e082f1120bcd21011de27b81fb3f65afa264e7d   #>   17dee4cc4bda78716db0df30358327788cce3e01567bf912658d4078a900e1d585e9f83120bc   #>   445096420e0e5d886bc628688401e1250284571a22c2db83135ee71b2d9d13a6de0bafcbcc8f   #>   5efb6299c2fddfdb2077fa769eacaa15082f1520bcba301d3f06849708ca52c8d8a6c1ebf079   #>   0adac801e1250284571a22c2bb172fbc23b4744e181b8477ad7b2656abdbfd0d81f3b7cd6c45   #>   cd4078a900e1d585e9f83120bc445097429eacf1a7f18344c6602f1d082f1120bcd21011de3c   #>   83a10cd5d23961c809ef849b8feef0d723af8df30727b5c23ba23a78020f57d40e84970a105e   #>   5d988e1f03c24b04852964b86f10cb9314bf3c0ee1250284571a22c2bb272fbcc486e22526bc   #>   df9c90d5cbc3c567e9502abc2b77d2740621bc5480f0eac274fc18105e22a84c21df9fd9389d   #>   c177557e1186f01201c22b0d11e13d8e17de2fe5f764c9a431d34bad4b4b78dfda2017a8a6c3   #>   c2a5aba67d3a39df6fe64a85f715ee0c1eaca621082f1520bcba301d3f068497086a53c8c2a7   #>   aeeb7de95d5fa9da7d0e082f1120bcd21011de07395b6a2bbb1b4befdac77b386983534a9bd3   #>   8294f0bedbd81faaeae70285a3bbafe7ae6c78e003dcd3574a85373cd19ae3d4ce53d2108497   #>   0a105e5d988e1f03c24b046b5208849704105e698808ef9ce6615bba4a722f5edd22bbe7aaee   #>   0b4aa84f4978e76d1c8c5533df8816b38e61abb77d27544fa9f076e46fd2bfada421082f1520   #>   bcba301d3f06849708d6a410082f0920bcd2109a69ad6fc895369c2fb7130f34f4ed7c8769f1   #>   774049782f0f9b65775634696bdfea46a1871d940aefd6e14e39ce934a1a82f05201c2ab0bd3   #>   f163407889604d0a81f09200c22b0d21e15db64f40956a243f2d3fbc4160f77bc69f168190f0   #>   2e6b1936cb9a9999a2f9ed03eb6b47072a2a15def6e14e39ce8b4a1a82f05201c2ab0bd3f163   #>   407889604d0a81f09200c22b0d21e14dcefcabcf941a0e94db85051b8654eccad8bb2024bcaf   #>   f26a392853147e9076cbc0bb6b4a85373c438f8b9a397a20bc5480f0eac274fc18105e225893   #>   4220bc2480f04a434c78934bce60035e6f3d527217ae0bab58d3197177414878efe0d5f2fc74   #>   c9a4da70c1007f45a5c27b3dd7a9f557286908c24b0508af2e4cc78f01e12582352904c24b02   #>   08af34048537991c7bd6a6dedddd03ff297dfa5b7e5e8b7be3ee8290f09ecb0befa1e9921bb9   #>   823dfc15950aeff8ea70db3dd53404e1a502845717a6e3c780f012c19a1402e1250184571ac2   #>   c2eb32f7b3290aa6329cc41be2d171f74148788fe50f67f774c97e5c41f52c5f45b533ad9d18   #>   6abad12435ed4078a900e1d585e9f83120bc44b0268540784900e195461ce155c3ebbc21ee1c   #>   771f848437515078b7e44b3ef255542bbcdf3509b67ca9a27620bc5480f0eac274fc18105e22   #>   58934220bc2480f04ac3bcf03ec57b609bb8fb2024bc67f087b37fba841bbec1715ef555542b   #>   bc8f845ade6da59a7620bc5480f0eac274fc18105e2258934220bc2480f04ac3bcf08e2a784b   #>   541c42c27b337f38bdd225dbf025fe9112940aefd236e1a607ab6908c24b0508af2e4cc78f01   #>   e12582352904c24b0208af34cc0befb42ace03bbc6dd0721e17d9ad7dafee992c3b88286fe59   #>   e5940aef935cdb1dd43404e1a502845717a6e3c780f012c19a1402e1250184571ae68537b93b   #>   276343e3ee8290f02e6ac21dcec474c95d5cc1c1fe8a4a85f764aeedead863bf0901e1a50284   #>   5717a6e3c780f012c19a1402e1250184571a0484f7deb08b6db820ba521042c29b3c297c3807   #>   640a66360f973ce6afa754783b70c2eb8c52d21084970a105e5d988e1f03c24b046b52088497   #>   04105e691010dee5db8554ec9ed8bba024bc9343b7786b3ecc96f40d1de71eabfcf5940a6f5b   #>   5e7887296908c24b0508af2e4cc78f01e12582352904c24b0208af3408086f726cb38089755e   #>   155d250425e14d3e1a7c28f96656b02238c16fab89816a4a8577275e785f56d21084970a105e   #>   5d988e1f03c24b046b5208849704105e699813ded939af1dd9ca2762472d8abf2f52c29bbcbb   #>   41ee68aa2ef715cc3dd0779caddf0dd6522abc9d78e1fd42ace6a225b11a82f05201c22b83b5   #>   df7ff0f2e809bf14ddc674fc18105e2258934220bc2480f04ac38cf08ef9c736b54e832d7bbd   #>   93599e704856c39adf5cca00b1b4843739b25df670da3c1d2858dea771b6e49829a14a4a85b7   #>   3fe7bb9b0bdc475f78e781cd1ca7e561f72f156e08c24b0508af28bf24022cce95ac7dedccd4   #>   aaae03ff5ba4bee9f83120bc44b0268540784900e1958609e19ddba33aab5d474fcbac1bd56b   #>   db26ce86fbde3eb3a43d1213dee7b6c81edf860f060ae6efcc84b3e56ba14a4a85774a6d5878   #>   2f8eae34b835f3f667441b82f05201c22b4a41e1fdf93ab6f2f4d985eb9b8e1f03c24b046b52   #>   08849704105e691810de49dbfbbc6b33dfdc0ba54ffe454b786facf61de039be3ba9e3fd0f2b   #>   57f50fd6523bd3da7921df6d11f99bc5aa7ff83bdb57b01d082f1520bca21412deb5b7b84bdd   #>   1f78f9f1f3dcff7b16ea26a1640ee12582352904c24b0208af34f40befbced03e6b5e95409fb   #>   2425bc03836a79352b58b06ea0a0ea854035b5c21b8a7ad5a39135ae0b1ec6bd62ed4078a900   #>   e115c5135edfefdd6bb2ebdf74d7f7fdc9fdb076b8fbe9c682f5cd452e04849708d6a410082f   #>   0920bcd2d02fbce139100e95b04f4ac2fb75e8e981aad1d992bd4347de78b9bf9e5ae14d7eed   #>   9f5cb8eafac8eddfad0e76b6f64ba16620bc5480f08ae209ef647ef5afa72512bd33afab0d76   #>   37995aa8bee9f83120bc44b0268540784900e1958676e11d5713d23e27fc306b095012de13c2   #>   c7b757a6606cb8c039dd5f4fb1f02667e406456bf578f4e6fb853bdb59a815082f1520bca214   #>   10de0fbc1bbf99cfabbb25127714aa6f3a7e0c082f11ac4921105e124078a5a15678c70fbef5   #>   b6472605565dc469df89e5b7a358783f7df0e67e8f4f8bdece631ef77a9893b9379ae00a5af8   #>   2baa16de64f2c5c31a79ad6e73e59ce86d27719d6d385ba40d082f1520bca21410de7e89c429   #>   7f6417062612dd7e2b50df74fc18105e2258934220bc2480f04a43a1f0ae7c30f3dce86e4ff9   #>   d6b6e74c6abdf29b5229bccb066c99ea6675c75745361fc61d9f737bba647dbec43f34997ae1   #>   4d26178c19fed664a12d07f09d8d7eec3709e1a503845794fcc2fb67b74462005b1ae36e33b1   #>   407dd3f163407889604d0a81f09200c22b0d75c23bad43ce950e9fc75637e64d6a56d96d2914   #>   deaf7d86de5d6012869bf9e3eb9d2e69c8973ce1aba84378c5399fefacd0400d105e2a407845   #>   490befeffffe23b07689bbf675b69474975e2d50df74fc18105e2258934220bc2480f04a4399   #>   f04ed9dc2f4bedb37f455fc88b9433beecc6d409ef67fe49e09c8ed1c67b317f7c5dd225557c   #>   c92dbe8ab484b73bdfd97345ea4178a900e115c513deeb7ab9ff9c74cba8dc9c6ae3dd155fb1   #>   a5b5c72712030bd4371d3f06849708d6a410082f0920bcd25025bc4b770ddad22199e1685735   #>   e24daab4c926fc2813de395b05bbda23b2c60dfcf19d952e69c097f85f1ea325bce7f29dbd56   #>   a41e84970a105e51fce3f09efc5176ed4877697e6ea3735c292e50df74fc18105e2258934220   #>   bc2480f04a4395f0de16d6a5ec13a0db7222d55c6092db0894092ff78addc8a81a8ff1a698b9   #>   8fbb1e5fe27f9f8f96f0f6e33b3b44a41e84970a105e5182134f0ccbac7dd1fdecebdae589c4   #>   65be3a1347303efa1f15bc14f2bbe94e94cd9f75bf98ee42d9785f915f4d77a26cdc5f9f4c77   #>   a15c567b67a2de1fc54f75753f99ee83200572ace96e31bc9b027fc8dfed8f1b847569fb4cc9   #>   859c489d507e736b146597c54dc29d3d20b20affe4c2e7e992bf7305ebfa2b7a57abdf941c45   #>   294ce63a5bb340a4dedafa7fb5fac996abd56ad35d10a4408ed427bc9daf1931f5df6b7e5e38   #>   ea7ccf7847a7d70e733ffe27b7d13589c4f9be3ab7ecc1384d573f814a16fdf3c81d36dffda4   #>   e77f32d2fa92817fdf71f3ddba3ffd5f23ad0300cae17dfe06e1b474c9379c108ed6dbb5ff3e   #>   d37db7cd77fcfbfd8ba337ad7b86d7be551155a6f347fe6ebae46bae80f2a5729f706713a67b   #>   30646dcb0000200049444154042a0b6dc2bb6629fbe459ee8969e918ea7e5c9ddbe88644a297   #>   af0e84d72efe73717638c94d86aed5defaffaec8becbbde183fa5b070094c78dbcf60dc9149d   #>   145a7fb0d68ead7d68a34cbb8d2e2f746b29c739fc61bc1e5165285fe5fa4cd1df42eb1bfd52   #>   744f66f934d4d99a82134d01a0026dc2eb6790abb92fa63ef17778cff36d07e1b58a393bf852   #>   dd29baf3f242ff0b2f5d574757000050a237af7d37648a7ed83ab07ac3053afbf573375fd3bb   #>   44367d0c7f180f4554b999af7266a6e85feb04d7bf58fef128e4ea6067ef31dd1f50611811de   #>   ff764b24ae4c7d2afe0c2f84d7265605df4d3e49ef5dd61fb70fb4dee54fadad0300caa527af   #>   7d5767cba6fbb3cb865fe8ecd6dae3035ddaf6c788ed8fe00fe3be882ad7f1554ec9964df20f   #>   425c7573f9c7a3923f7bf98fe14ad3dd01958611e1adbb3591e892f21d6f9406df6fc418a541   #>   17064669383494b1ef2c737ff1de7b0ddf56b925ba8a1e304a0311304a8334148dd2906734da   #>   3b58e1cca3d9ca032615d98938a2a33484c78e382662fb1efc613c1651a53f5fe54256386d1b   #>   b6b2e953a18ab44669f0b8b365b6b31b3c2c5a07a3345001a33494c413aee7a69e75fac2fd30   #>   21b7fe048cc3ab09fdc2fb4a3863af3f2fba523162a590b7c2adb7287f26263940788900e195   #>   8622e1cd3338d7285ff1e8533674d7acd77578a8dacab7aeebd5e3b247e7c6696aecade7f4b8   #>   fcd1d9229bce6e19eed49bc52bdcc11fc657116d8ce6ab0cf5153fb1438dbba66a930b57862b   #>   c617deaf079cdbe3bc3b27c6aa138b597d77ab769c9a0eb7cc17ae02e1a50284b7249e753d37   #>   7595f4665a7b83adf6665a1b51a08ae9f83120bca5c18f9f737f793b8c95424ee05aef5f5eeb   #>   d280f01201c22b0d45c23baf36fc43bcc18ae0160bbfe67e8b5e7edfa6e96d6bcf9826dad04b   #>   3ba5ab541d31367ae3015c6a39ae788549dc9012eda2da58b951b84a6dc8df678f9a90af625c   #>   e11ddd31b3ff7dde8e512b2ecba77cb7227aab1c105e2a40784b62a06bb66bbc0f6bba261277   #>   b1d563ddd5130b54311d3f0684b7249634e5ae0b4796b7c7382964057717c639a8bcd6a501e1   #>   250284571aaa269e383bfc437c43649559fbe7b65e6f84502bcb7d2fc735b82372f343b8d4d2   #>   7c59f11ac7862b0c8a6ce4a67095de428712537857dd50cd1aa8ba98bb5d6c0c082f1520bca5   #>   b0b677229179c9f4b644e2d435d9f50f24125d7f2b50c774fc1810de9218cf5d169cadcadb63   #>   9c14f22ddffa26e5b52e0d082f1120bcd25025bc33360cfe0cff6571548db98177551b869f76   #>   c8c7cae0dfa26e8cdabe0d9f5b229e219ed02cb8f99ed16ab9e42fc12a1bce103892e43be7ee   #>   d4a2c1a607df213acdf2598136ce16aca51e082f1520bca530269148dc9ffef8befb715c66f5   #>   ea6e8944bf42754cc78f01e12d8951fc65a159797b8c93423ee45b6f50fedca35280f01201c2   #>   2b0d55c29b1cddc8ff23dcfcf3c80aa111115a083c9bda2758a53a4a921b391cef445479b6c6   #>   bff5c6df45772af945e06f54b5a305aa4ceac40efb66a1bbb5f7850e23fac6b32620bc5480f0   #>   0ab2da3756cbbc1eaee54e497ffee5d444e2ec5fd39f87e456f3988e1f03c25b121ff397858d   #>   cbdb639c1492e7fe72cbf25a9706849708105e692813dee468df3ddecd3e8cdcfc85f04f7dc4   #>   e3b52edf840576dbe5c52baccfe79671518dbcd43cb7717bb117c4c6e7c662705abd265061b4   #>   7f22e6a317455798d72a74181b88bf56a616082f1520bc822c38fe81c9e947177e1ed1d5155b   #>   365ca03730d9f5de34006b5fe9ec7e2ab803d3f16340784b62263f1bfc9ee5ed314e0a5950cd   #>   b5be6379ad4b03c24b0408af34d4096f725acf06e99fdf4617cec953bc30b8d831fc535ff575   #>   5403e77199e2f1e21576e62a54478f3f33f1f84c3e6c768d808aa698736146c51bf41479fbee   #>   f316813e25a2ffa0752b7720b70b764d35105e2a40780559e07aed0997dd71df5d7d8e733f25   #>   cefb6fb6e0cf9bdcc5ee835e7ee27cf7ffd30acf296e3a7e0c086f69f0d785cbcbdb61ac1412   #>   9e80d371fe515eebd280f01201c22b0d85c29b4cce187846a7a37a0fe175f7f34bda37766aff   #>   72ee076ccd74fef7dcdba276cf3f927b42f10a177115847e939f72d769471c73ceb085d15b32   #>   e63cd2fba84e67dc2ff4f8ee8af6a14e450f7bbe1777207bc7e89c4a20bc5480f00ae2096f8e   #>   1b7c0f38acbe86adee39b3f00e4cc78f01e12d8d1bc3d9b47a4c793b8c9542f891dbdf2faf75   #>   6940788900e1958652e12dc0fcd3b20fc6561d9b5542ee8906c7e912b19be97c95b6c56b7cc8   #>   fdedaa9f8ce3299341e14e6db020a2c62a6ed037a71191f71c20bc5480f00ab2fa992bba64b4   #>   b6f3359f0566955d3be28cd4faaef7fda7c80e4cc78f01e12d8d85ad43d9b46b993b8c954296   #>   866fdc444d87a40d082f1120bcd23020bcdff8ef68b6c90c9f7b3f6faf1d23f6f3095fa54944   #>   954468fb364b641c509974e00e236a5eb399fc913ba2c33b2806c24b0508af38bfcf1e33f2a5   #>   11ef7eb39a2b593bedfd97477ff573d1daa6e3c780f096c80b8157939dcd8487812f40bc14f2   #>   6ac340eb1b7d5b66ebd280f01201c22b0dfdc23b3ff817fccdbf4fad7d8057b87d2276f4295f   #>   a569449529c15fe51b888df6ab9699fcc31c51efebcdca23bc4253cda907c24b0508af2e4cc7   #>   8f01e12d953bfd4978fd8fcadd5dcc14f240035feb2d55ce23140f082f1120bcd2d02fbca785   #>   4ced88d4da9778853b3e624733f82a5b4735fe9e7f78839a7fca389e7279873f8c5d22aaace2   #>   c7578bbab7ad0b082f1520bcba301d3f0684b7649ecf8d29b447c4d8ec02c44d21af6c9ccbfd   #>   5f96ddba3420bc4480f04a43bbf07e5e1376b591deea990dc2aba36714df9aabd223b2f909bb   #>   b08d5b8bcc6da19ee778e1dd34aace7e5c950374745500082f1520bcba301d3f0684b774165c   #>   bb9d97476bf61d2ae16d88d82964e1f5ed52ad777c88cea499105e324078a5a15d782fe15cad   #>   7b6afd01e1d53593a3767531b7aba7a3db5f3978ef94726fdf37cea80b0ac933cf4ffba83afc   #>   8bbdd1233be801c24b0508af2e4cc78f01e12d8bc9a39e7b2fdf009af12925854c79ebb97767   #>   49695d1a105e224078a5a15d78c36370394eabd4fad7c2ab4f8adcd5b4a6a12a3b89fd7a3cfb   #>   dde74691793120399917de23a2ea70af156f223a44b06a20bc5480f0eac274fc18105e225893   #>   4220bc2480f04a43bbf036e1fd2efdbed5f1c1951b0acce21b9a7fa1e128c57d57c3f65c4006   #>   44d6793438c05ad5300dfd1402c24b0508af2e4cc78f01e12582352904c24b0208af34740bef   #>   42de779df1a99245bbfbd7351692d71e01ebbb5b65c7d5d1371c8fc653a32b5d16a87185fa5e   #>   0a02e1a502845717a6e3c780f012c19a1402e1250184571aba8537cf9c09d9216417fc3db76a   #>   93f784f6b6f2d2dc9dce268f2aecb64ab8e7132e15a9d52ff7965f83c8d7fbf401e1a5028457   #>   17a6e3c780f012c19a1402e1250184571ada1f69f80be7bbeb665f8b5d35ac5d7a4df34be789   #>   eeee9dfdd3ca5bdbfd1b451d56cfcbc1112a765d2c546bdc51e9f12e6a8efe4c71ffe200e1a5   #>   02845717a6e3c780f012c19a1402e1250184571ada85f75c4e788ff5958ebbf3d2736e1ebe54   #>   7c774b4f6d91dac966b748efa93e06f9a7dad94ef87dba9943ae3efbea2144a658cb00e1a502   #>   845717a6e3c780f012c19a1402e1250184571ada85f783aab0f03e57c6de06e79e90587facb4   #>   3e6ae7b52db2475175bcf0cd6d924078a900e1d585e9f83120bc44b0268540784900e19586fe   #>   99d68e0df9eede65ec2bf0ea56cd0bd2faa89da5033a7a0f28acd7fd1dd33d2913082f1520bc   #>   ba301d3f06849708d6a410082f0920bcd2d02fbc33da047cb7d5c4d277f550509d1b4c90d649   #>   03fc3473d2d27a9fe921bc6480f0eac274fc18105e2258934220bc2480f04a43bff026c76eee   #>   f7ddb74adfd1e2f0880f5bc9eba47ed6ba6762b5e94e940d84970a105e5d988e1f03c24b046b   #>   5208849704105e691810dee4f79d72cf337c5dc67e4e0e3f0dec3c2bad8f424cb9edc06dd6db   #>   f6b0bb6670256f9cb3dbc6ad77eef9a2f0cce89f5fbd7fdb0d773cfe2122f31d970c84970a10   #>   5e5d988e1f03c24b046b5208849704105e699810de647264f756ae9e363bf6f9b2f6d29213de   #>   bd24f54f88451734ca34dbecda6581928f3b663bb4d31b42bbfabe7b75a642ebfb5574551f10   #>   5e2a407875613a7e0c082f11ac4921105e124078a56146785d667fc9df178dc74cce779da652   #>   ba26c677bbfa1ade7f96afe4b1c6bee78a452685f8c4ff90478f1883b2d103c24b0508af2e4c   #>   c78f01e12582352904c24b0208af348c096ff98ce085b75a5febf3db075ade3ba7a92fd5044a   #>   0646ee6ad206810a27abecb66a20bc5480f0eac274fc18105e2258934220bc2480f04aa31e0b   #>   6f688c8614fa5aef116af9a26cc1f416c182daa889d056fd35b4ab418abbae12082f1520bcba   #>   301d3f06849708d6a410082f0920bcd2a8c7c23bcae41dde4faa434d379a9429e91deed49111   #>   bb7a345c6153b1b9854902e1a502845717a6e3c780f012c19a1402e1250184571aa48577e1e8   #>   a79e796749a1d205bcf0b610daedb7af3f3efcf332bb7606d7769f74c1d266e182aa88b982f7   #>   e676f558999d330884970a105e5d988e1f03c24b046b5208849704105e691016ded147a55efe   #>   6adaf9a3021b6ccc9962d4cd54976577ef92dab4cda5b3cbe9dca65cdbbba40b5ee035fc9ea2   #>   7b9add80abd0ad9c9e9905c24b0508af2e4cc78f01e12582352904c24b0208af34c80aefe2ee   #>   5559ffab3e6b59de4daee54cf1e3c8dd8edd966dbcde93a5f76e21afb54dd225b7f125e714dd   #>   d57b7c85dd4aef986920bc5480f0eac274fc18105e2258934220bc2480f04a83aaf0cedfc36f   #>   80fbe77fae213c10efde91bb7d735ddfe6557794dcbdaf794b75e6a74a2ee10b8e2bbaabe7f8   #>   0a9b96dc2fe34078a900e1d585e9f83120bc44b0268540784900e1950651e15dd929a88027e6   #>   ddeac3e000602d22a7299bd82a50a1fab952fb97670ce0062b52257df9929e4577f5065fa15d   #>   a9dd320f84970a105e5d988e1f03c24b046b5208849704105e699013de25f3bc7f1f093be08b   #>   79377ecafffc6bf309913b0f69b4b3f1a2127bb9aa0967a96dd22579064beb5b745713f90a87   #>   96d82b024078a900e1d585e9f83120bc44b0268540784900e1950629e15df1e831eb394ea3dd   #>   fb7ebf55d80177cd5fe3f3366c8bbd22efef26dfe5d4f2e652bb7a14b7ab53d30553c3e39539   #>   ce7bc577b53557e1b6527b651e082f1520bcba301d3f06849708d6a410082f0920bcd2a024bc   #>   6fb1c9cb9af2773dbf2a50e9893d1a5739d5cd8ff850a081f3b9bdee5e6a5fb9c1739dd73225   #>   fb870bb65e557c5757862bd44e2eb557e681f05201c2ab0bd3f163407889604d0a81f09200c2   #>   2b0d42c2fb602dafb9398a8eedf57bdd4f222decc4edb56a6e899d5d19ded741d992b7ab4225   #>   4f44ec6a6eab5085e2a33ad006c24b0508af2e4cc78f01e12582352904c24b0208af34e808ef   #>   4b354e312e2b56575078c366e932b6d4ee7e14bc0bddea6b567241b0852e11377893c927834f   #>   416c37afd43e1100c24b0508af2e4cc78f01e12582352904c24b0208af34c808ef9c3c36eae7   #>   dc62950585b731bfdb774aeef0b3febd357f2357b0e2387f03fb09bc1777bbdf78db147a78a3   #>   5e00e1a502845717a6e3c780f012c19a1402e1250184571a6484f7d2e2beebdc50acb2a0f0b6   #>   e177fb4de93d7e3ff7b6d94e81998a575dc71ecea83937ff9c19219ede80edea9019a5f78800   #>   105e2a407875613a7e0c082f11ac4921105e124078a541457857b68e10dee78bd51614dec3b9   #>   bdb65c5e469f97ddddc1bb355bb3ef432b4325937aa5a63d6ed5639ce0aee65f9b7a61af49a7   #>   e165f48702105e2a407875613a7e0c082f11ac4921105e124078a54145783f88f0dd75f2cfb5   #>   96415078efe5769b7f420b71667ef4caa773f215acfa7ad41be357c4d9d5b2f11f4e2db33704   #>   80f05201c2ab0bd3f163407889604d0a81f09200c22b0d2ac2fb7884f0167d84575478e7ad1f   #>   da6b55e98ff04a67ad7b26569bee44d94078a900e1d585e9f83120bc44b0268540784900e195   #>   0615e1bdbbb8efae3fb3686d41e14dde15daed0932ba2e09082f11acb95a4178f5603a7e0c08   #>   2f11ac4921105e124078a54145781f2beabb0d4716af2d2abc1f84863eeb27a1e7b280f012c1   #>   9aab1584570fa6e3c780f012c19a1402e1250184571a5484f7bd62bedbfc8588da82c2bbaa43   #>   78c7a11bc7b3c6bc33b99cd7d8cae1c7a9e3e7d7fbfc02e12503845717a6e3c780f012c19a14   #>   52ef2f48105ecd50cf91548477e5869ce6ee92fd70d49751b505857738d7867f3a8bf97d53b3   #>   a7b5ecf66ec94751328b6fdbdd9ba06ddd63df88de9634105e2a407875613a7e0c082f11ac49   #>   21105e124078a5414578c3f39339ce664b3fbcfce076ed0fb96a4c746541e1edc909ef76b9c2   #>   27d81b6d555d17947a1425f2d226ac4747cfd6dcb65c20bc5480f0eac274fc18105e22589342   #>   20bc2480f04a838cf0ce6c1172d141312a0b0aeff6fcd312ec99861baa7c6b77f83e76ffcbe1   #>   1effa3c55b4fd2dab66420bc5480f0eac274fc18105e2258934220bc2480f04a838cf0269fa9   #>   0e9868975531ea0a0a6fd8a95d3ec9143d5c1558fdb7a5f10fa0649e0fbe4ab7a3eefbcb3281   #>   f05201c2ab0bd3f163407889604d0a81f09200c22b0d3ac29bbcb781cffa0e5914a7aaa0f036   #>   e585f7fd74c9f466a1f57de3f7bf54e66f106afb027d6d4b07c24b0508af2e4cc78f01e12582   #>   352904c24b0208af3408096ff2b5adb3cad7b84fac49ca4485772b5e78bf4b979c175edf3cef   #>   fc694ab836dc76a3efb4b52d1d082f1520bcba301d3f06849708d6a410082f0920bcd2a024bc   #>   c9650f1cdad871aada5ff66dcc8a82c27b2ce7bb1ba71f9c58b9115732386ee74b665baeedfe   #>   dada960e84970a105e5d988e1f03c24b046b5208849704105e6990125e8f99df2e8b5f495078   #>   1fe1d4f28c74c1c7fcaddf13e3f7a234bee1db3e5c57dbf281f05201c2ab0bd3f16340788960   #>   4d0a81f09200c22b0d72c25b1282c2bb74cb9059361c9f2e789a97cebd55f6d7cf9b7cdbed75   #>   b52d1f082f1520bcba301d3f06849708d6a410082f0920bcd2a828e14d3e151c8b81bd1ef620   #>   2f9d3b28eb6c88e7f8b637d5d5b67c20bc5480f0eac274fc18105e2258934220bc2480f04aa3   #>   b284377979402cf7cf4e23fc222f9d072aeb6c8877f8b677d1d5b67c20bc5480f0eac274fc18   #>   105e225893422c11de3923870c7db31e8ff609e195865ae19d3df2e147df5ca86cf70c61e14d   #>   f6f38df6db99f5ec6b5e3a7bf92acd1831f889d14be4769931b3866bfb04454d6900c24b0508   #>   af2e4cc78f01e125823529c40ae1fde89086de55b551a7774cf7a65420bcd25029bc230e4a7f   #>   d18e7c5751030c71e14dbebd57c62ab718e29bdaa21d279dc359d9531d534abace71e3a4f699   #>   d1916b7ba89a867400e1a502845717a6e3c780f012c19a146281f0feef44765dad3a45e77c52   #>   1281f04a439df0ce3f26f745eba9f88b16437893c971379d7478b7cbde0c8cf47b47d839b7ca   #>   8e1531637fb6aee6d29512fbcc181c6ebbb5867be2aa80f05201c2ab0bd3f163407889604d0a   #>   a9ffc2fb7fbbf92fad7b2d36dda19280f04a4399f0cedec1ff45db47d503016962096f3e9686   #>   e7a4189629f8760bffda63e2cd8721c6ca5d426ddfa7a0115d4078a900e1d585e9f83120bc44   #>   b02685d47be1fda153f0dadac574874a02c22b0d55c2bbe2c0e017ad9b823672942dbcc94fd7   #>   0974b77766f5e2908c5e5066337999d02ad0c609aba2ab9005c24b0508af2e4cc78f01e12582   #>   3529a4de0bef43e13f9f3e6bba47a500e195862ae1bd3ffc457b4941238cf28537f9badf3a4f   #>   cd3ed0705de828aa3f2cb79d7cbcb7b1ff7750b537c31503e1a502845717a6e3c780f012c19a   #>   1452df8577e516a10bb8b3a3e92e950284571a8a8477e566e12fda6ef21bc9214178935f1f9e   #>   ed6aeb41d9750b9a870fe388b2dbc9c794ced901825b0da8cff77721bc7480f0eac274fc1810   #>   5e22589342eabbf0e619f3f30bd37d2a0108af341409ef5bfc17ed6bf9ad3064086f32f9f6f9   #>   3baddfa8ed510fe4de191bc61d45ed5c090de5e1e38bf768dda8ed91f72adabd3620bc5480f0   #>   eac274fc18105e22589342eabbf0f6e53de46ed37d2a0108af341409ef35fc17ed7ef9ad30e4   #>   082fcf59fc613cafa42197b5ee9958ad6ae7da80f05201c2ab0bd3f163407889604d0aa9efc2   #>   db8bbf805f66ba4f2500e1958622e13d9dffa25d25bf15862ae13d8a3f8c7b94349484f092c1   #>   9aab1584570fa6e3c780f012c19a1452df85f724fe027eaee93e950084571a8a84f744fe8b76   #>   a1fc5618aa84f720fe306e55d25012c24b066bae56105e3d988e1f03c24b046b52487d17de4b   #>   f80bf88da6fb5402105e692812de0bf82fda6df25b61a812de6efc613ca2a4a12484970cd65c   #>   ad20bc7a301d3f06849708d6a490fa2ebc43f80bf88ba6fb5402105e692812de07f92fda2bf2   #>   5b61a812de1bf9c318a3a4a12484970cd65cad20bc7a301d3f06849708d6a490fa2ebc731a86   #>   afdfcdeae3ecc2105e692812de990dc25fb416cba26b958c2ae1fd82f3ddb64adaf180f012c1   #>   9aab1584570fa6e3c780f012c19a1452df8537796af802aef2c94a654078a5a16ae2891ee12f   #>   daa50a1a61a812dee4c1e1c3b8434d3b49082f19acb95a4178f5603a7e0c082f11ac4921f55e   #>   78a7b50c5ebf379a6dba47a500e195862ae19dbc6ef08bb6c93c058d309409efa7b5c1c3d84e   #>   dd1f4420bc44b0e66a05e1d583e9f83120bc44b02685d47be1fdf1ed1afff5bb76b4e90e9504   #>   84571aaa8437f97ce08bd6e81d156d3094096ff281e073190aa76981f012c19aab1584570fa6   #>   e3c780f012c19a1452ff85b7eead16b9ebf77a2a5f24520884571aca8437f9bcef1eef7a2394   #>   34c15027bcc9fb7cf77837794f552b49082f19acb95a4178f5603a7e0c082f11ac492116086f   #>   dd8cce99cb77d571934c77a74420bcd25027bcc9cf0fcf7ed14ef8464d0b0c85c29b7c7fefcc   #>   6134387d86b24692105e325873b582f0eac174fc18105e225893426c10debabaf1d775da75f7   #>   a36e1c6fba332503e1958642e14d26c75cd369d7bf1e75d357aaf6cf5029bcc9e47b971dbe63   #>   8763fa4f56d84412c24b066bae56105e3d988e1f03c24b046b52881dc2fb1fd3bd281708af34   #>   940aaf36d40aaf1e20bc44b0e66a05e1d583e9f83120bc44b0268540784900e1950684970a10   #>   5e225873b582f0eac174fc18105e2258934220bc2480f04a03c24b05082f11acb95a4178f560   #>   3a7e0c082f11ac4921105e124078a501e1a502849708d65cad20bc7a301d3f06849708d6a410   #>   082f0920bcd280f05201c24b046bae56105e3d988e1f03c24b046b5208849704105e8e151f3d   #>   fbc86b53e3d783f05201c24b046bae56105e3d988e1f03c24b046b520884970410de10537aad   #>   9f1af076f70757c6ac09e1a502849708d65cad20bc7a301d3f06849708d6a410082f0920bc41   #>   ee6ac22603db35e66422105e2a40788960cdd50ac2ab07d3f163407889604d0a81f09200c21b   #>   e042c7c7fa9fc6aa0be1a502849708d65cad20bc7a301d3f06849708d6a410082f0920bc7eee   #>   7502b48935012e84970a105e225873b582f0eac174fc18105e2258934220bc2480f0fa98b64e   #>   50789dd3e2d486f05201c24b046bae56105e3d988e1f03c24b046b5208849704105e1fe7857c   #>   d7a9f93a466d082f1520bc44b0e66a05e1d583e9f83120bc44b0268540784900e1cdb16a93b0   #>   f03a37c5a80ee1a502849708d65cad20bc7a301d3f06849708d6a410082f0920bc39bee07cd7   #>   39244675082f1520bc44b0e66a05e1d583e9f83120bc44b0268540784900e1cd318217de7631   #>   aa4378a900e1258235572b08af1e4cc78f01e12582352904c24b02086f8e6778e16d13a33a84   #>   970a105e225873b582f0eac174fc18105e2258934220bc2480f0e6789717de0e31aa4378a900   #>   e1258235572b08af1e4cc78f01e12582352904c24b02086f8e390d39e18d332e59050aefd257   #>   faf7b97dd81c75bd290d0dc2bbe2cdbbfadcfae874954d4078a900e1d585e9f83120bc44b026   #>   8540784900e1f5712027bccfc5a85d71c23bbdf7baa920353c6a8cca1ec547b9f0cebbac55ea   #>   c8ab0f785b5d23105e2a407875613a7e0c082f11ac4921105e1240787d700ff1fe65598cda95   #>   26bc2f346771aae9bb4a69a762a25a78df6ecd8ebcea9c15aa5a81f05201c2ab0bd3f1634078   #>   89604d0a81f09200c2eb67ffa0ef563d1ba7728509ef901a7fa8ce52dbab782816de571af98f   #>   fce8958a9a81f05201c2ab0bd3f163407889604d0a81f09200c2ebe7fbcd03c27b49acca9525   #>   bcef05accf71ee52dcaf38a815de092d83477ea9a27620bc5480f0eac274fc18105e22589342   #>   20bc2480f006f8ba9deffeeea5f1eedd5594f0aeda23f4f4c7ba3354f74c1cb5c27b74e8c81b   #>   7ca1a61d082f1520bcba301d3f06849708d6a410082f0920bc41e65d98bd73b9fd8b31ab5694   #>   f00e77c2a8bad159024a85774c55f8c8bbab6908c24b0508af2e4cc78f01e12582352904c24b   #>   02086f9869f71cb3c776fbf57e39f6cb481525bca771c2bbadea9e89a35478afe28ebc659c57   #>   1bc581f05201c2ab0bd3f163407889604d0a81f09200c22b8d8a12deed39ed7366aaee9a304a   #>   85f720fec83f56d21084970a105e5d988e1f03c24b046b5208849704105e695494f0b6e0b5ef   #>   13d55d1346a9f0b6e38ffc79250d4178a900e1d585e9f83120bc44b0268540784900e1954645   #>   096f535efbde57dd3561940aef36fc913fa5a421082f1520bcba301d3f06849708d6a410082f   #>   0920bcd2a828e1dd8ad7beef54774d18a5c2bb0f7fe4ef2a6908c24b0508af2e4cc78f01e125   #>   82352904c24b0208af342a4a78bb70d6b7099dc9d6940aeff9dc91375ea8a421082f1520bcba   #>   301d3f06849708d6a410082f0920bcd2a828e11dca69df99aa7b268e52e17d933bf2bdd53404   #>   e1a502845717a6e3c780f012c19a1402e1250184571a1525bc4bdb86acafe197aa7b268e52e1   #>   7d8713defdd43404e1a502845717a6e3c780f012c19a1402e1250184571a1525bcc96742f32f   #>   5ca4b85f71502abc9772c2bbce12250d4178a900e1d585e9f83120bc44b0268540784900e195   #>   4665096fb24f40fa0e5caeb65bb1502abcfb73c2eb7ca0a421082f1520bcba301d3f06849708   #>   d6a410082f0920bcd2a830e14df6abc9295f97454a3b1513a5c2bb2d2fbccf286908c24b0508   #>   af2e4cc78f01e12582352904c24b0208af342a4d7893efee9b11bead1ea33342838752e1dd8e   #>   17de67953404e1a502845717a6e3c780f012c19a1402e1250184571a1527bcc9e4f84fc4540e   #>   00002000494441545b7afebd479fd12bd575a724f0480311acb95a4178f5603a7e0c082f11ac   #>   4921105e124078a55181c24b14cd2fad355baaa421082f1520bcba301d3f06849708d6a41008   #>   2f0920bcd280f05241a9f0becf09efb16a1a82f05201c2ab0bd3f163407889604d0a81f09200   #>   c22b0d082f15940a6ff2e090ef567faca61d082f1520bcba301d3f06849708d6a410082f0920   #>   bcd280f05241adf08e6d1a14dede8ada81f05201c2ab0bd3f163407889604d0a81f09200c22b   #>   0d61e15d35faa223feba77b70766aaee51294078231956e3f7ddfd96296a06c24b0508af2e4c   #>   c78f01e12582352904c24b0208af344485f7f5dd32aad4e4d205ca3b151b086f342fb5c8f96e   #>   3735d3ac2521bc7480f0eac274fc18105e2258934220bc2480f04a435078fb55e76ca9fd44f5   #>   dd8a0984578069a7374a9fc01d9f57d70884970a105e5d988e1f03c24b046b5208849704105e   #>   698809ef7581e73f37ff5e43c76201e11562c1b0abcfbab0ff672a9b80f05201c2ab0bd3f163   #>   407889604d0a81f09200c22b0d21e17da53a20bcce7e3a7a1607082f1520bc5480f0eac274fc   #>   18105e2258934220bc2480f04a43447857ee181ec4f5292d7d1307c24b05082f1520bcba301d   #>   3f06849708d6a410082f0920bcd21011de57b9590bf6d1d2377120bc5480f05201c2ab8b5fa8   #>   e0a5903f4c77a26cd6d6fd6eba0b65e37d2d6c388adf4c77a15c7ef5ce840d47f1abe93e0842   #>   3d477a3705d6446c730127bc0d966ae99c307f5a91e771b5a201ae567a299023eb8df0020000   #>   b084f02c5d2e634cf709006035f546784dffc2c0c0efcc54f0be16361c457df99db920b8c3ab   #>   19ea3952e40e6f3b5e789fd5d239617087970ab85a51a1fee4f90239b2de08afe94742187886   #>   9708d63c1585677849806778a521f20cef2ebcf03ea7a573c2e0195e2ae0195e2ae0195e5d98   #>   8e1f03c24b046b5208849704105e6988086f275e783fd6d2396120bc5480f05201c2ab0bd3f1   #>   63407889604d0a81f09200c22b0d11e1bd9df3dd562bb4744e18082f1520bc5480f0eac274fc   #>   18105e2258934220bc2480f04a4344782735080befe95afa260e84970a105e2a407875613a7e   #>   0c082f11ac4921105e124078a52134d3dae921df6df48d8eaec500c24b05082f1520bcba301d   #>   3f06849708d6a410082f0920bcd21012de996d82c27b9b8e9ec501c24b05082f1520bcba301d   #>   3f06849708d6a410082f0920bcd21012dee4a7ad283fd000e1a50384970a105e5d988e1f03c2   #>   4b046b5208849704105e6988096f72e24e4c776b6f56dfabb84078a900e1a502845717a6e3c7   #>   80f012c19a1402e1250184571a82c29b5c3130adbccd7b7cadbc4ff181f05201c24b0508af2e   #>   4cc78f01e12582352904c24b0208af344485d7e59be7070e1dbd546d774a04c24b05082f1520   #>   bcba301d3f06849708d6a410082f0920bcd28821bc8481f05201c24b0508af2e4cc78f01e125   #>   82352904c24b0208af3420bc5480f012c19aab1584570fa6e3c780f012c19a1402e125018457   #>   1a105e2a40788960cdd50ac2ab07d3f163407889604d0a81f09200c22b0d082f1520bc44b0e6   #>   6a05e1d583e9f83120bc44b0268540784900e1950684970a105e225873b582f0eac174fc1810   #>   5e2258934220bc2480f04a03c24b05082f11acb95a4178f5603a7e0c082f11ac4921105e1240   #>   78a501e1a502849708d65cad20bc7a301d3f06849708d6a410082f0920bcd280f05201c24b04   #>   6bae56105e3d988e1f03c24b046b5208849704105e694078a900e1258235572b08af1e4cc78f   #>   01e12582352904c24b0208af3420bc5480f012c19aab1584570fa6e3c780f012c19a1402e125   #>   0184571a105e2a40788960cdd50ac2ab07d3f163407889604d0a81f09200c22b0d082f1520bc   #>   44b0e66a05e1d583e9f83120bc44b0268540784900e1950684970a105e225873b582f0eac174   #>   fc18105e2258934220bc2480f04a03c24b05082f11acb95a4178f5603a7e0c082f11ac492110   #>   5e124078a501e1a502849708d65cad20bc7a301d3f06849708d6a410082f0920bcd280f05201   #>   c24b046bae56105e3d988e1f03c24b046b5208849704105e694078a900e1258235572b08af1e   #>   4cc78f01e12582352904c24b0208af3420bc5480f012c19aab1584570fa6e3c780f012c19a14   #>   02e1250184571a105e2a40788960cdd50ac2ab07d3f163407889604d0a81f09200c22b0d082f   #>   1520bc44b0e66a05e1d583e9f83120bc44b0268540784900e1950684970a105e225873b582f0   #>   eac174fc18105e2258934220bc2480f04a03c24b05082f11acb95a4178f5603a7e0c082f11ac   #>   4921105e124078a501e1a502849708d65cad20bc7a301d3f06849708d6a410082f0920bcd280   #>   f05201c24b046bae56105e3d988e1f03c24b046b5208849704105e694078a900e1258235572b   #>   08af1e4cc78f01e12582352904c24b0208af3420bc5480f012c19aab1584570fa6e3c780f012   #>   c19a1402e1250184571a105e2a40788960cdd50ac2ab07d3f163407889604d0a81f09200c22b   #>   0d082f1520bc44b0e66a05e1d583e9f83120bc44b0268540784900e1950684970a105e225873   #>   b582f0eac174fc18105e2258934220bc2480f04a03c24b05082f11acb95a4178f5603a7e0c08   #>   2f11ac4921105e124078a501e1a502849708d65cad20bc7a301d3f06849708d6a410082f0920   #>   bcd280f05201c24b046bae56105e3d988e1f03c24b046b5208849704105e694078a900e12582   #>   35572b08af1e4cc78f01e12582352904c24b0208af3420bc5480f012c19aab1584570fa6e3c7   #>   80f012c19a1402e1250184571a105e2a40788960cdd50ac2ab07d3f163407889604d0a81f092   #>   00c22b0d082f1520bc44b0e66a05e1d583e9f83120bc44b0268540784900e1950684970a105e   #>   225873b582f0eac174fc18105e2258934220bc2480f04a03c24b05082f11acb95a4178f5603a   #>   7e0c082f11ac4921105e124078a501e1a502849708d65cad20bc7a301d3f06849708d6a41008   #>   2f0920bcd280f05201c24b046bae56105e3d988e1f03c24b046b5208849704105e694078a900   #>   e1258235572b08af1e4cc78f01e12582352904c24b0208af3420bc5480f012c19aab1584570f   #>   a6e3c780f012c19a1402e1250184571a105e2a40788960cdd50ac2ab07d3f163407889604d0a   #>   81f09200c22b0d082f1520bc44b0e66a05e1d583e9f83120bc44b0268540784900e195068497   #>   0a105e225873b582f0eac174fc18105e2258934220bc2480f04a03c24b05082f11acb95a4178   #>   f5603a7e0c082f11ac4921105e124078a501e1a502849708d65cad20bc7a301d3f06849708d6   #>   a410082f0920bcd280f05201c24b046bae56105e3d988e1f03c24b046b5208849704105e6940   #>   78a900e1258235572b08af1e4cc78f01e12582352904c24b0208af3420bc5480f012c19aab15   #>   84570fa6e3c780f012c19a1402e1250184571a105e2a40788960cdd50ac2ab07d3f163407889   #>   604d0a81f09200c22b0d082f1520bc44b0e66a05e1d583e9f83120bc44b0268540784900e195   #>   0684970a105e225873b582f0eac174fc18105e2258934220bc2480f04a03c24b05082f11acb9   #>   5a4178f5603a7e0c082f11ac4921105e124078a501e1a502849708d65cad20bc7a301d3f0684   #>   9708d6a410082f0920bcd280f05201c24b046bae56105e3d988e1f03c24b046b520884970410   #>   5e694078a900e1258235572b08af1e4cc78f01e12582352904c24b0208af34c809efacef96c7   #>   af04e1a50284970a105e5d988e1f03c24b046b5208849704105e699012de650f1cdad871aadb   #>   5ff66dcc8a105e2a4078a900e1d585e9f83120bc44b0268540784900e1950625e11db19593a1   #>   f1952b62d584f05201c24b0508af2e4cc78f01e12582352904c24b0208af340809efbd0d9c1c   #>   872e8a5315c24b05082f1520bcba301d3f06849708d6a410082f0920bcd2a023bc4f573b7e8e   #>   5d15a32e84970a105e2a407875613a7e0c082f11ac4921105e124078a541467867b670820c8a   #>   5119c24b05082f1520bcba301d3f06849708d6a410082f0920bcd22023bc17847cd7d96ca978   #>   65082f1520bc5480f0eac274fc18105e2258934220bc2480f04a838af0aedc302cbcce8be2b5   #>   21bc5480f05201c2ab0bd3f163407889604d0a81f09200c22b0d2ac2fb1ee7bb4e6ff1da105e   #>   2a4078a900e1d585e9f83120bc44b0268540784900e1950615e17d8c17dec3c56b4378a900e1   #>   a502845717a6e3c780f012c19a1402e1250184571a5484f76e5e78f710af0de1a50284970a10   #>   5e5d988e1f03c24b046b5208849704105e695011dec779e13d42bc3684970a105e2a40787561   #>   3a7e0c082f11ac4921105e124078a54145783fe085f71cf1da105e2a4078a900e1d585e9f831   #>   20bc44b0268540784900e1950615e15dd99a13dee1e2b521bc5480f05201c2ab0bd3f1634078   #>   89604d0a81f09200c22b0d2ac29bbc24ecbb6d300e6f3d04c24b0508af2e4cc78f01e1258235   #>   2904c24b0208af34c808ef9c5621e17d244665082f1520bc5480f0eac274fc18105e22589342   #>   20bc2480f04a838cf02687d7047cb77b9cba105e2a4078a900e1d585e9f83120bc44b0268540   #>   784900e195061de14d3e54ebf3dda397c4a90ae1a50284970a105e5d988e1f03c24b046b5208   #>   849704105e691012dee4e8f659dd6d76e3aa583521bc5480f05201c2ab0bd3f163407889604d   #>   0a81f09200c22b0d4ac29b5cf1e831eb394ea3ddfb4e8f5911c24b05082f1520bcba301d3f06   #>   849708d6a410082f0920bcd22025bc1e8b67975009c24b05082f1520bcba301d3f06849708d6   #>   a410082f0920bcd22027bc2501e1a50284970a105e5d988e1f03c24b046b5208849704105e69   #>   4078a900e1258235572b08af1e4cc78f01e12582352904c24b0208af3420bc5480f012c19aab   #>   1584570fa6e3c780f012c19a1402e1250184571a105e2a40788960cdd50ac2ab07d3f1634078   #>   89604d0a81f09200c22b0d082f1520bc44b0e66a05e1d583e9f83120bc44b0268540784900e1   #>   950684970a105e225873b582f0eac174fc18105e2258934220bc2480f04a03c24b05082f11ac   #>   b95a4178f5603a7e0c082f11ac4921105e124078a501e1a502849708d65cad20bc7a301d3f06   #>   849708d6a410082f0920bcd280f05201c24b046bae56105e3d988e1f03c24b046b5208849704   #>   105e694078a900e1258235572b08af1e4cc78f01e12582352904c24b0208af3420bc5480f012   #>   c19aab1584570fa6e3c780f012c19a1402e1250184571a105e2a40788960cdd50ac2ab07d3f1   #>   63407889604d0a81f09200c22b0d082f1520bc44b0e66a05e1d583e9f83120bc44b026854078   #>   4900e1950684970a105e225873b582f0eac174fc18105e2258934220bc2480f04a03c24b0508   #>   2f11acb95a4178f5603a7e0c082f11ac4921105e124078a501e1a502849708d65cad20bc7a30   #>   1d3f06849708d6a410082f0920bcd280f05201c24b046bae56105e3d988e1f03c24b046b5208   #>   849704105e694078a900e1258235572b08af1e4cc78f01e12582352904c24b0208af3420bc54   #>   80f012c19aab1584570fa6e3c780f012c19a1402e1250184571a105e2a40788960cdd50ac2ab   #>   07d3f163407889604d0a81f09200c22b0d082f1520bc44b0e66a05e1d583e9f83120bc44b026   #>   8540784900e1950684970a105e225873b582f0eac174fc18105e2258934220bc2480f04a03c2   #>   4b05082f11acb95a4178f5603a7e0c082f11ac4921105e124078a501e1a502849708d65cad20   #>   bc7a301d3f06849708d6a410082f0920bcd280f05201c24b046bae56105e3d988e1f03c24b04   #>   6b5208849704105e694078a900e1258235572b08af1e4cc78f01e12582352904c24b0208af34   #>   20bc5480f012c19aab1584570fa6e3c780f012c19a1402e1250184571a105e2a40788960cdd5   #>   0ac2ab07d3f163407889604d0a81f09200c22b0d082f1520bc44b0e66a05e1d583e9f83120bc   #>   44b0268540784900e1950684970a105e225873b582f0eac174fc18105e2258934220bc2480f0   #>   4a03c24b05082f11acb95a4178f5603a7e0c082f11ac4921105e124078a501e1a502849708d6   #>   5cad20bc7a301d3f06849708d6a410082f0920bcd280f05201c24b046bae56105e3d988e1f03   #>   c24b046b5208849704105e694078a900e1258235572b08af1e4cc78f01e12582352904c24b02   #>   08af3420bc5480f012c19aab1584570fa6e3c780f012c19a1402e1250184571a105e2a407889   #>   60cdd50ac2ab07d3f163407889604d0a81f09200c22b0d082f1520bc44b0e66a05e1d583e9f8   #>   3120bc44b0268540784900e1950684970a105e225873b582f05618179d7aeaa9cf99ee04a8ab   #>   fbdd3d11a77e60ba17a0ae6ea97726be35dd0b40861bdcefc343a63b015cce73cfc470d39d00   #>   ee6f1d5e8efcc4742f0084372e47eeb1c71ef79bee04a8abfbcd3d117b209913609e77263e33   #>   dd0b4086d3dcef435fd39d002e87b86702bf7a10e07f5e8e7cdd742f0084372e105e224078a9   #>   00e1050120bc5480f01201c24b03086f5c20bc4480f05201c20b024078a900e1250284970610   #>   deb840788900e1a50284170480f05201c24b04082f0d20bc7181f01201c24b05082f0800e1a5   #>   02849708105e1a4078e302e1250284970a105e1000c24b05082f1120bc3480f0c605c24b0408   #>   2f1520bc200084970a105e2240786900e18d0b849708105e2a40784100082f1520bc4480f0d2   #>   00c21b17082f1120bc5480f08200105e2a40788900e1a50184372e105e224078a900e1050120   #>   bc5480f01201c24b03086f5c06f6ebd70f13da12e00ff744f49b68ba17a0ae2ee99d8939a67b   #>   01c8f0b8fb7dc0c59d02f7ba670213da12e0572f474e36dd0b00e10500000000005603e10500   #>   000000005603e10500000000005603e10500000000005603e10500000000005603e105000000   #>   00005603e10500000000005603e10500000000005603e195c3daef3f7879f4845f4c77a3b2f8   #>   65e2fb2fbffac9bcb581953813daf9e1f3512fbdf6e1fc3f43ab7126801f7c1f0c801c4903e4   #>   481a4078f3f2c7ecd10f5cdc259148fc96aff42db720f1aa6fc5dad7cef45625ba0efcafa60e   #>   560c85cfc4dc3b4e48053dd1fd9e956c25ce84320a9d89cfaf489f8644cf67fd891b67c27290   #>   23a9801c4905e448ea4078f3d1e7b8ccf7336f32ffa17b2899ff7c5d76f3c4e9b3b575b22228   #>   7826fe1c762c0b7a824d308c33a18c026762cd5db9d390e8bd84adc799b01ce4482a20475201   #>   39923c10de7c1c9fc8fbc5cd707b2298ccd7dee22e767fe0e5c7cf73ffef99d4d7cd0aa0d099   #>   58fb4f6f5df7ebee1ad0e7c45c32c79950478133719fb7a6cfb0579fbfc3dbe0f4ec9d0a9c09   #>   db418ea4027224159023c903e1cd87fbbd3cf9c6a76eca9fcc3f4b242e0a24f337dda5be3fb9   #>   1fd60e773fdda8af9b1540a13331cc5d73f6e76bbc8f7f4e7d706a662dce843af29f8969eef2   #>   c953521fff75b5fb7948663dce84ed2047520139920ac891e481f0e6e3d9712bdc7f1fcf9bcc   #>   7fea99e8f6ad3f99ff7a5a22d13bf364ce60b7602a5705944c813331fbd844e28ad5e18d7126   #>   1492ff4c3ce82e4fc87c5e7d6a22714afaad0c9c09eb418ea4027224159023c903e12d4cfe64   #>   ee7e7d5f5be64fe61fb80b63329f57774b24eed0d5bfca813b1357241227fd9bdb0c674239e1   #>   3371692271265b18ea16a6ff32873351212047520139920ac8918481f016266f329fda3971f1   #>   9a4032efe7fecef64776616022d12def5bcba00cc26762aebbfc3abf19ce8472c267a2572271   #>   1d5b18e516ce4f7dc299a8109023a9801c4905e448c240780b932f99ff7e5ea2f3cc3a7f32ff   #>   d3fde56c002b1f93f0bd0f0b24113e13431289e3ffc76d8533a19ef099b82491b8822d8c700b   #>   7ff43ee04c540ac89154408ea40272246120bc85c997cc9f492406d70592f992c06fd2c94470   #>   f4492083f099383f91b881df0a67423de133313891388e5d566f4a24ce497dc099a8149023a9   #>   801c4905e448c240780b9327992fe892e8b93a98ccc7bb9fbf621bac3d3e9118a8af8b1542e8   #>   4cacee9c483c57f7cbdbd7f43caee7352ffe905d8d33a19ef0cfc43cf754dc9ff9fc855b363a   #>   f50967a252408ea40272241590230903e12d0c9fccd75e997ecedc9fcc47b28772529ce37f60   #>   07c8217426bc715ec64cef9d4873c28b9979337126d4c3fd4cbce0aeb879ea9ababaa5c3ba24   #>   1203d2a70267a252408ea40272241590230903e12d0c9fccdf4c246ef2fef727f317d96b9729   #>   2e4f242ed3d4bfca2174263ef7fe1ad4d5fde7d8f448dff7a557e34ca887ff9978a39bbbaacb   #>   c9de14a6dd5ecc4c158f3351292047520139920ac8918481f01686fbe2264f4c9cb0dcfbe04f   #>   e6def0deffc96d734d2271beb61e560aa133e10de87242a2f3a0796beb56bee065913752ab71   #>   26d493e74fd8ffbe33731be93c369224ce44a5801c4905e4482a20471206c25b18ee8b7b6b22   #>   313cf5c19fccbd81f57cc37bdf9048f4d2d5c18a21742646a57247fa51a8bae96e36ef9e3a01   #>   3813eae193f967e72618b7fd985e873351292047520139920ac8918481f01626fcc51d9348fc   #>   23355163c4dd8bf3b4f5b052089d8977bdc4c1c6e97e397bfb0267423d5c327fd25d71f5b87f   #>   adf969ea83c7261267ae4cadc499a8149023a9801c4905e448c240780b13fae2feefb444e7cc   #>   1f24f07c9a5e4267c21bb430f15d7669f5f1eeafcdde079c09f58493b9f797d3c7332fc47ce3   #>   9e883ea9cf381395027224159023a9801c4918086f61425fdc81b98143c26f202fc86d85b72d   #>   15103a1313dcc5e3d92435755726126779ffe34ca8277426fee899485cb136bbe4dd474a4d1a   #>   8f3351292047520139920ac8918481f01626f8c55d9248745ff29f34b3dc9217dcffbd3fde7d   #>   91fd06a73901e3e9c92794421625020f3cdd994874f5fec799504fe84c4c7217df674bffeb9c   #>   480cf23ee04c540ac89154408ea40272246120bc85097e7167277826d7a5674c79836de5cd98   #>   32c2405fed269442d674093cf0745f2271acf73fce847a4267e23577715e6ef1ec44e22aef7f   #>   9c894a0139920ac89154408e240c84b73062c97c4dd744e22eb6d5d804e6c4964f9ed9c94fcd   #>   2ddd9a489ce2fd8f33a19ed099f086545f9a5bbc3091b8d4fb1f67a252408ea4027224159023   #>   0903e12d8c5832afbbcdcd2c6bb25b3d9048740dcf2d0fca259ccc9f7197ffc596ce4c242e4f   #>   7dc099504ee84cbce92e4ecd2d9e92485c9ffa803351212047520139920ac8918481f01626cf   #>   00d219fc2f64d4bdef2e8ccb7c5edd2d91e8a7a36f9545f84ccc7597476617a6bb0bc3529f70   #>   269493e7d598a7d892e73b0fa73ee14c5408c89154408ea40272246120bc85114ce6bf9c9a48   #>   9cfd6bfaf310b7608a96ce5514dc99b8d6fdedf8dfe98f7f5e9548749e9ffa8833a19cd099f8   #>   e5f844a2fbcaccc29f7dddc22fd3eb71262a03e4482a2047520139923010de7cfc92f478c8fd   #>   162ef73efc2b5c1e48e6a90146aef7264d59fb4ae7ecdf2b801c0a9c89996ea02f4ecd60fa53   #>   7fb76c406635ce843af29f092f539f3d2bf5f13f77b89fcfcbcc148f33613bc89154408ea402   #>   72247920bcf97835f8185ab770793099ff7993bbd87dd0cb4f9ceffe7fda2aad3db59d4267e2   #>   2577e1f83b5e7cf9fe93dd0fbdfe9b598b33a18efc67e23f677b0b573ff9eaf3fdbbba1f8ecb   #>   3eac8633613bc89154408ea40272247920bcf98897cceb565fc336ed3953673feda7e09918d6   #>   99adbc70255b8b33a18c026762f985be953dbe649be34c580e7224159023a9801c491e086f3e   #>   6226f3bab523ce486dd8f5beff8437056551f84c7cdb27bdea94e1bffab6c7995045a133f1fb   #>   ab676756751fe29b2a1367c2729023a9801c4905e448f24078e5b076dafb2f8ffeea67d3dda8   #>   28568c7dfd95f766ae0dadc599d0ceb2316fbcf4da07b3d78456e34c003ff83ee807399208c8   #>   913480f0020000000000ab81f0020000000000ab81f0020000000000ab81f0020000000000ab   #>   81f0020000000000ab81f0020000000000ab81f0020000000000ab81f0020000000000ab81f0   #>   020000000000ab81f0020000000000ab81f0020000000000ab81f0020000000000ab81f00200   #>   00000000ab81f0020000000000ab81f0020000000000ab81f0020000000000ab81f002000000   #>   0000ab81f0020040e91ceb38ce7d79176820dea5eddd2ddf2cb3b5131c67d39fcbdc4780a54d   #>   1ca78fcc1d02002a14082f00c02a6e7272d46ed8aedb9df39436a75e785307f44768e525eeba   #>   4622b5b50aeffbee2e8696b78b30573b4ec31972770900a84420bc0000abf00b6f8aaa4e2a85   #>   a9428477d84d37dd34316a0f7fb4779cedd6083526ccffb5709c23e5ee120050894078010056   #>   c109afe3d4bea0aeb90a11de03ddc247a3f6f098bbd113426dc5e01a77a79fc8de2900a0e280   #>   f00200ac22e587fba6d96dd3b4f1d6bca3ac39082fe3b72d1d67b3df84da8ac1f2468eb39fec   #>   9d02002a0e082f00c02a827eb8eac18dbde5ad7e51d55c402827bdfdf6db0b64b7509ef08a77   #>   a96ce17dc4dde60ea1a6627186bbdb0fe4ef16005059407801005611f6c355edbd15235435a7   #>   7e6086f284579c728577ad1be806cbe5f6c9e333b7e9a3e5ef160050594078010056c1f9e118   #>   6f456f55cd4178b38c7637e922b74b6976709caa592a760c00a82020bc0000abe0fd701377c5   #>   e1aa9a83f06639cedd44c9db81b7b83bbe5ac58e010015048417006015bc1feee3aed8d3bf62   #>   edbc510f0fe83f64c4c23cd5931f3c72f76df73cf2d6f43fb9a2656f3cd6ff9fcf7e192c1010   #>   de15afdddbefe1b7fe9baf28ef2e43080bafc8ce5cfe1cf7e4803b9f9ecaad67c29bafbfd1c2   #>   fb63addba33c07f9e3db4fded36fd06bb3d6f2450b87df7dfbe0cf72e398fddfdb03fb0d7e9b   #>   7bdc7aaadbf6e651470500004581f00200ac82f7c3bfb92b0e664bff1ed66d83ec78655bdcfa   #>   63a0ee9f4feec3c6326bde69c87f7c45abefdc3553d0aab75f940b8fd29011c8af8faa4e556b   #>   78e2dc504f0bed32f280eaf208af50ff5c7ebaa6757ab3ed1e5f5bf78dfbfffad1fdddd709b0   #>   65de6e3eea96740aaffc656087ea4cadd6a7670717cb34f46166b79b0f4dbbf08ceeb5a9e575   #>   fafc14dacb36eeda8ff3360a0000824078010056c1f9e11f2ddd15e7659746340ac85bcbb77c   #>   5b2efd5bd0ec7c7fe07f6953dffa4677e70aa284f7ce1a56ade9bb818e16dc65d40179848557   #>   ac7f7575e3b7c86dd6e9bf7984375f7f8584d76b6840685da0578ef3bcafa1b557e4d69fecdd   #>   e47dbc315bdef987e06e7ab9ebae2c181f00001000c20b00b00ace0f5ff056b0511a1e0eca9b   #>   53fd2cdbf0ffb60995e584f7b650c9f9ac2442786ff4d7aafdd6d7adc2bb8c3a208f90f00af6   #>   af6e7c73ff56077ee98485376f7f4584f7f775dd92f181556baf0bf5ea193606b03900000c5a   #>   494441545f4317f90b5c9b1dec5fde27f8fcc3b3eeaa1d0b850700004480f00200ac22ec875f   #>   adef2e6ff37b76f161a7eaaf573f3f79d1ff2dfff6a9cede9fdbd7999e2dfa875773af47a6fc   #>   7bcd4fcbc63cd4a5594e78fb7b258dce183eeb87a5e3ae6fe52d3c902d2a2ebc673a4e559727   #>   bf9af5c5bd5b7ab53ae4ba5564971107942228bca2fdfbd7465ed96e8fcefbe55f5f5ed5d471   #>   8e090b6ffefe4e193b763777e9eab16926e4ebe578778306bf06565d9f92d7bfdef5e5a21fe7   #>   7d74e781d57ee13dd5711a9e3162f2f477cef1ee28d74c19dbc0718e7ce2ab59e36e6ae1551a   #>   1ad8d14c6fd5aa02e10100001120bc0000abf0fbe1cf0b5e3fcd13aa269fb1e257ae5f9cdbf6   #>   ebb66e61d7ccc22fcddc85eb72853f0dce9add38d7c69c831665967eece4ddfccc8e93555c78   #>   1da7cd5799ae1ce12d8dad13d865910362048457b87fa779bbea93794b6c7ebb540703c25bb0   #>   bf912fad0d7237d821b0e6ad2a7755b3e7d8cddaa5578df437b4dd8cf4d207de33263db6775a   #>   641ea098b719b7a73f5d377746176b1d00002280f00200ace22687a3ddf8421bcf7725b72663   #>   8a5f787782f38c255057b7b35b72586ecedcdff67297cfc92c4408ef06590dadfb97f7aa1c7b   #>   94b8d82ea30f280d135ed1fecdf614f44cb6dd92f579e12dd4df48e13dcbf7ab438a35de0322   #>   ebe4bb1b9c6a689315d9c5f4830f0dd8397add5b9c1ca8b187bbe6b662ad03004004105e0080   #>   55707eb8ebc822435a5d91fbfbf96b6165cbe2cda8d07c856fc5b7ae3836ce8cc01521bcbe81   #>   69af71177717d965d401858557b87f7d3ca3f58d4bf1082fbc05fa1b2dbc07b81b5cee5ff1bc   #>   e3841f4df037f42a5b5cec69b873155b5ebbb9bbf848a0461777cd19c55a0700800820bc0000   #>   abe0fdb0f9953f14dc7a945b7e56fae35beec77df26de3e9d6158135fbb96bde497f2c2ebc6d   #>   7daefda9bbdc708dc02e230f2824bcc2fddb2624a5bfb60c0b6fa1fe460baf37fac3bdfe1587   #>   bb2bb6cd7bc3dc6b686b5fc9b6ee72f592dcf2a9eef23f02352e70d71c54ac7500008800c20b   #>   00b08a941f1ed129c5a11dd243ee6e3a2eb4d1da2553bff8e463176fd086bdd3ebe684ee70b2   #>   6dd773d77f1e58d5d75d7343fa6371e13dcf57e9076fff3f0aec32df016d13a2454e7885fb97   #>   ea4060c3d3c2c25ba0bf02c2eb8da1fba46ff977efb9dbfc63ad6d1f12daa3dde55d7ccbde90   #>   13dd0235bc10b42bd63a00004400e105005845e81dafd9d7782f4535fbcab7c59c5bf759d77f   #>   a7b47d66bdf728acd365f46f7541a6b86bab8273213c9cfb137b71e11de2abf4a7f7a7fbf902   #>   bb2c7e40697c2fad09f7ef3df763cdcffeedee0b0b6f81fe460bef1aaf932ff95678a3363879   #>   c7734835e47f64e11477f934dfb2f7fe5b700a8b01ee9a36455a0700802820bc0000abe0fcf0   #>   1bef0ff7dbb1096b936756851e0dd82453f26e7a52b0669d6efbd0af85afe7799ac0a573bab4   #>   b8f0beecef9967ded305761975401e3ee115ee9f379ced9681bdbc1516de02fd8d16deff7a4d   #>   8ef4ad78c5d3f0dff36eeb35f48a6fd99b57e252dfb23767db81811a03fdfd0400801280f002   #>   00ac82f7c3a71cdf2dc5055b716ac8546a189b85adf6c00793d9b58fe717cacc33a591530be7   #>   c80964f15d461e505d407885fbe7dd39dd39b0977161e12dd0df68e1fdc56b72846f85f7425c   #>   8bfcdb861bf284f76adf322fbcf7b86b362ed23a00004401e105005805ef876bbca918f64d7f   #>   fe7d07af78db6b464e49aef65ed09a10b87738f3e4dcc4c34dafcedc14be37bf501e982e2d49   #>   788bef32f280ea02c22bdc3f4f1bf708ec2570f465096f9d7777fc59dfb2d7d866f9378d2fbc   #>   de53bddb146b1d00002280f00200ac228f1ffe7f7b771b1b4511c7717c4a8b5784f210489080   #>   458c05e42144a3e21346944715028a4842022a9890e00b44c01a840b14ad5a22960735a03182   #>   2920a0f260205a20629088a18447638a09a8145002848742edc33ab377d7dbedededee1d1b48   #>   e6be9f379ddd99fbcf6c78f3bbe36e46fd2a2a14f96aaefad66af6d2f816013f0afb7f969ffb   #>   7272f75864ec17f9c5963af4b6e3ce04fb232f482bf0ba97f47e205be0f5bd3e1524bbdbaa6c   #>   0f2ef0aa5fce7d6cb95e1ee427bcb312a23a00a486c00b402b0ef9501d8a204e98cd7b65abd0   #>   d2f5ad48fc76e8e90d53f3cdc43bc2bcfc4ab69a27ddca37adc0eb5ed2fb816c81d7f7fad6c9   #>   663b5be79ae0026f3f61df65c2e33bbca9055eb551d968b7d901c003811780561cf2e14bead6   #>   11d53aa75a96b3858d6287c02b356cbe538dac506df545577134d97469055ef792de0f640bbc   #>   bed7b75f0dfcd3daf966708157cdf3b2e5fa173559f25d1a520bbc0385fd676d00902a022f00   #>   ad38e4c3a1ead629d53ad4f443ce679c03af619c50fbc816abd6b51622d98eb2469a81d7bda4   #>   f703d902afeff5d5a9475a69ed7cd877e07ddc2bf0aaad7f0758ae6b5bca1b0b1d87a61e78d5   #>   d96b9fb9cd0e001e08bc00b492980fff6b2defdc629e19b65bd87fee5fd53c59e0359362e41c   #>   067566588f3ac74169065ef7929e0f64d802affff50d92ed4196be4ae13bf00e93ed656eabfc   #>   5a0e686bbd3144ad2ae9496b29055ef373f9036eb3038007022f00ad24e643f5ab2e31d86c1e   #>   91adec0bf1aea92269e09dd0187857ab411f25992ebdc0eb5ad2f3810c7be0f5bdbe3235f087   #>   78dfb3fe03ef58d99ee7b6ca93aad609cb8db522d9c7b22907de9df2469ecfb70700e088c00b   #>   402b09f9f027f53ff962b9d9bea24ec05ddad8f55d9625f255d93e8e6ce8297bde319bf577ab   #>   74b9cb3e4d65f46f7a81d7b5a4d70329d6c0eb7b7d359de44597e3b1216a5f5ebf81f70dd91e   #>   e5bcbea8de72c42acb75fd5df246ab0a87912907def99e93038007022f00add8f3617dc5d41c   #>   75a377f4ce13b2dd3a76cef0da9035f2cdeef1c9f9789942d57328d2dea14a8496c63f63bcba   #>   fed1fba2cdf402af6b49d7078ab2065effebdba04a75d964b62f4ecb126d7d075eb51544c8f9   #>   37685133e48849d61bdbd4bb89bcf8d96d67666f769ec833f0aa7f34eb59c4009032022f00ad   #>   98f9f09188077bb53423ad681bdbe2768bba0acddc575d7b728dfa96e9784be015a2f9b0f7cb   #>   ffba625cfdedd3fe6a5ce351bfa566916ee11dc72f9e3db6f383e75bc5b7854d33f0ba95747a   #>   20d7c0eb7b7dc6c4c8c0496f4d1fd942885b56f80ebc97f3e445ce90d7e71515152d715ce61e   #>   3920df76678e39d9038b2a4e5dfa7b77e9d09cd807c0a906decbb942649f769c14007c22f002   #>   d04a5824cadfdbd8fd82ad63dc5e5be08dc88afe2d8887acd29ca625af37f0ba94747a20f7c0   #>   eb777d46dd58cb909c32b55159277feb7d3bfebaaeceeb2c104df6216b286cb2a63403affa74   #>   7998f39c00e0138117805612036f9be997e2ddd5a32c3d536a2d87ebce6df2b2e1ff58aaeeea   #>   65efcc7d2dda9176e04d5ed2e9813c02afcff5c9c4bb282f36e48eedc62ef9a7a7bff5d6cf88   #>   bd0f481678d5f9bf85f65bab3ada16b5c67922afc03b4e5e9739cf09003e11780168c51a78b3   #>   5adffed0abababed033e2f88760e2c370c4be0addf3367408bd82b43a3b7da5fd5b07ef0adb1   #>   cef66356347edb37fdc09bb4a4d30379055e7feb53ce2c7eb26b28b7db73ab6a0c6393ececef   #>   77bd95e1a1f979cd9207ded3727ce7267b295c2eee1b5b54e7577e4e329147e03d9f2bc46d35   #>   ce7302804f045e0099e6e817250b4ab7fcebd0537b78e3b277177cb8f2d7ab0e9d35bbcb962c   #>   58b87ceb71c7dd65d31268c9d48ba973e682dbfee045596d4bc2ddaa8d2b8a8b976e3a967659   #>   b599c4fceb59170010780120638d9459b228b06a479a09f17460d5621afa0891e7f4e6040052   #>   40e00580cc744a9d33b72db87ae385c83a1c5cb908b5afc69ca08b02c838045e00c84c936596   #>   ec702db87a9539424c0cae5cc46342b4bbe03d0c005c11780120531c386bb958a67e4b3633c8   #>   f2d384c8f93dc88286512ed7b838d892003211811700324549de8c83d1e61f1354deed10e881   #>   0e173a0a3126c8828671bf107debbc8701803b022f00648a12b5ffeed859c573a7dcd3ccdc9a   #>   ed9b60eb9787c3f3aabd87f957150e87f7055910408622f00240a628b11f4f115a7db3170400   #>   370681170032c5ba36d6bc3bbce266af07006e10022f00648c9aefc323fab40f65b72f78eabd   #>   83dec3014013045e000000688dc00b000000ad1178010000a035022f000000b446e005000080   #>   d608bc000000d01a81170000005a23f0020000406b045e000000688dc00b000000ad11780100   #>   00a035022f000000b446e005000080d608bc000000d01a81170000005a23f0020000406b045e   #>   000000688dc00b000000ad1178010000a035022f000000b446e005000080d608bc000000d01a   #>   81170000005afb1f9745d69156f4cb680000000049454e44ae426082}\\line                 #> ──────────────────────────────────────────────────────────────────────────────── #>                                               [graph01.rtf][] 22APR2024, 17:01   #>  #> Column names: 1 #>  #> $colspan #> NULL"},{"path":"/articles/tidytlg.html","id":"metadata-method","dir":"Articles","previous_headings":"","what":"Metadata method","title":"Get Started","text":"Besides building table section--section shown , can use table metadata approach efficient alternative generating outputs. Table metadata data frame describing data, functions arguments needed produce table results. table metadata shown can used create table output . row table metadata describes tbl chunk created function defined func column. rest columns defines arguments (.e. df, colvar, rowvar, statlist, rowtext, row_header) passed function. table metadata defined, users just need call generate_results function column metadata define column_metadata_file tbltype arguments create tbl dataframe. processing data step, users don’t need call tlgsetp, since tlgsetup embedded within generate_results function. ’s need specify column metadata generate_results call.","code":"library(dplyr) library(haven) library(tidytlg)  # read adsl from PhUSE test data factory testdata <- \"https://github.com/phuse-org/TestDataFactory/raw/main/Updated/TDF_ADaM/\" adsl <- read_xpt(url(paste0(testdata,\"adsl.xpt\")))  # Process data adsl <- adsl %>%   filter(ITTFL == \"Y\") %>%   mutate(SEX = factor(SEX, levels = c(\"M\", \"F\", \"U\"), labels = c(\"Male\", \"Female\", \"Unknown\")))  # define table metadata table_metadata <- tibble::tribble(   ~func,     ~df,   ~rowvar, ~decimal, ~rowtext,     ~row_header, ~statlist,         ~subset,   \"freq\",  \"adsl\",  \"ITTFL\",     NA, \"Analysis set: ITT\",     NA, statlist(\"n\"),  \"ITTFL == 'Y'\",   \"univar\", \"adsl\",   \"AGE\",      0,         NA, \"Age (Years)\",           NA,              NA,   \"freq\",  \"adsl\",    \"SEX\",     NA,         NA, \"Gender\", statlist(c(\"N\", \"n (x.x%)\")),   NA ) %>%   mutate(colvar  = \"TRT01PN\")  # Generate results tbl <- generate_results(table_metadata,                         column_metadata_file = system.file(\"extdata/column_metadata.xlsx\", package = \"tidytlg\"),                         tbltype = \"type3\")  # Output results tblid <- \"Table01\"  gentlg(huxme       = tbl,        format      = \"HTML\",        print.hux = FALSE,        file        = tblid,        orientation = \"landscape\",        title_file = system.file(\"extdata/titles.xls\", package = \"tidytlg\")) #> [[1]] #>    <div style='border-top :1pt solid; border-bottom :1pt solid; '>              #>    <div style = \"text-indent: -36px; padding-left: 36px;\"> Table01:             #>    &emsp; Demographic and Baseline Characteristics; Intent-to-treat             #>    Analysis Set<\/div>                                                           #>                                                                <div             #>                                                         style='border-bott      #>                                                           om:1pt solid'>        #>                                                             Xanomeline          #>                                               <div        <div        <div      #>                                             style='bo   style='bo   style='bo   #>                                             rder-bott   rder-bott   rder-bott   #>                                              om:1pt      om:1pt      om:1pt     #>                                              solid'>     solid'>     solid'>    #>                                              Placebo    Low Dose    High Dose   #>    <div style='text-indent: -17.76px;          86          84          84       #>    padding-left: 17.76px'> Analysis set:                                        #>    ITT                                                                          #>                                                                                 #>    <div style='text-indent: -17.76px;                                           #>    padding-left: 17.76px'> Age (Years)                                          #>    <div style='text-indent: -17.76px;          86          84          84       #>    padding-left: 35.52px'> N                                                    #>    <div style='text-indent: -17.76px;         75.2        75.7        74.4      #>    padding-left: 53.28px'> Mean (SD)         (8.59)      (8.29)      (7.89)     #>    <div style='text-indent: -17.76px;         76.0        77.5        76.0      #>    padding-left: 53.28px'> Median                                               #>    <div style='text-indent: -17.76px;       (52; 89)    (51; 88)    (56; 88)    #>    padding-left: 53.28px'> Range                                                #>    <div style='text-indent: -17.76px;        (69.0;      (71.0;      (70.5;     #>    padding-left: 53.28px'> IQ range           82.0)       82.0)       80.0)     #>                                                                                 #>    <div style='text-indent: -17.76px;                                           #>    padding-left: 17.76px'> Gender                                               #>    <div style='text-indent: -17.76px;          86          84          84       #>    padding-left: 35.52px'> N                                                    #>    <div style='text-indent: -17.76px;          33          34          44       #>    padding-left: 53.28px'> Male              (38.4%)     (40.5%)     (52.4%)    #>    <div style='text-indent: -17.76px;          53          50          40       #>    padding-left: 53.28px'> Female            (61.6%)     (59.5%)     (47.6%)    #>    <div style='text-indent: -17.76px;           0           0           0       #>    padding-left: 53.28px'> Unknown                                              #>    <div style='border-top:1pt solid;'> <br />Key: IQ = interquartile            #>    Note: N reflects non-missing values                                          #>    <div style='border-bottom:1pt solid'> [table01.html][] 22APR2024,            #>                                                                17:01            #>  #> Column names: label, col1, col2, col3, col4, col5 #>  #> 4/6 columns shown."},{"path":"/articles/tidytlg.html","id":"by-processing","dir":"Articles","previous_headings":"","what":"By processing","title":"Get Started","text":"two types -processing tidytlg functions can provide: rowbyvar: split summary statistics rowvar variable(s) specified rowbyvar. Please see processing section frequency analysis vignette(\"freq\") details. rowbyvar argument can also used univar function. typical use case summarize lab values parameter analysis visit, can call univar function rowvar = AVAL rowbyvar = c(\"PARAM\",\"AVISIT\"). advised use case turn .ord argument (.e. .ord = TRUE) univar function call. numeric sorting columns associated variables (PARAM_ord AVISIT_ord) can created used sorting interleaved summary results AVAL CHG. tablebyvar: argument tablebyvar designed facilitate sub-group analysis, repeats table summary sub-group variable. typical use case summary demographics table country. creating sub-group analysis version table, just need add argument tablebyvar sub-group variable function call. code provides example summarizing age race gender using tablebyvar. summary, rowbyvar used create -variable summary one rowvar single function call. perform sub-group analysis, users need specify tablebyvar every function calls except analysis population row.","code":"library(dplyr) library(haven) library(tidytlg)  # read adsl from PhUSE test data factory testdata <- \"https://github.com/phuse-org/TestDataFactory/raw/main/Updated/TDF_ADaM/\" adsl <- read_xpt(url(paste0(testdata,\"adsl.xpt\")))  # Process data adsl <- adsl %>%   filter(ITTFL == \"Y\") %>%   mutate(SEX = factor(SEX, levels = c(\"M\", \"F\"), labels = c(\"Male\", \"Female\")))  # define table metadata table_metadata <- tibble::tribble(   ~func,     ~df,   ~rowvar, ~decimal, ~rowtext,     ~row_header, ~statlist,         ~subset, ~tablebyvar,   \"univar\", \"adsl\",   \"AGE\",      0,         NA, \"Age (Years)\",           NA,              NA, \"SEX\",   \"freq\",  \"adsl\",    \"RACE\",     NA,         NA, \"Race\", statlist(c(\"N\", \"n (x.x%)\")),   NA, \"SEX\" ) %>%   mutate(colvar  = \"TRT01PN\")  # Generate results tbl <- generate_results(table_metadata,                         column_metadata_file = system.file(\"extdata/column_metadata.xlsx\", package = \"tidytlg\"),                         tbltype = \"type3\")  # Output results tblid <- \"Table01\"  gentlg(huxme       = tbl,        format      = \"HTML\",        print.hux = FALSE,        file        = tblid,        orientation = \"landscape\",        title_file = system.file(\"extdata/titles.xls\", package = \"tidytlg\")) #> [[1]] #>    <div style='border-top :1pt solid; border-bottom :1pt solid; '>              #>    <div style = \"text-indent: -36px; padding-left: 36px;\"> Table01:             #>    &emsp; Demographic and Baseline Characteristics; Intent-to-treat             #>    Analysis Set<\/div>                                                           #>                                                                <div             #>                                                         style='border-bott      #>                                                           om:1pt solid'>        #>                                                             Xanomeline          #>                                               <div        <div        <div      #>                                             style='bo   style='bo   style='bo   #>                                             rder-bott   rder-bott   rder-bott   #>                                              om:1pt      om:1pt      om:1pt     #>                                              solid'>     solid'>     solid'>    #>                                              Placebo    Low Dose    High Dose   #>                                                                                 #>    <div style='text-indent: -17.76px;                                           #>    padding-left: 17.76px'> Male                                                 #>                                                                                 #>    <div style='text-indent: -17.76px;                                           #>    padding-left: 35.52px'> Age (Years)                                          #>    <div style='text-indent: -17.76px;          33          34          44       #>    padding-left: 53.28px'> N                                                    #>    <div style='text-indent: -17.76px;         73.4        75.6        74.1      #>    padding-left: 71.04px'> Mean (SD)         (8.15)      (8.69)      (8.16)     #>    <div style='text-indent: -17.76px;         74.0        77.5        77.0      #>    padding-left: 71.04px'> Median                                               #>    <div style='text-indent: -17.76px;       (52; 85)    (51; 88)    (56; 86)    #>    padding-left: 71.04px'> Range                                                #>    <div style='text-indent: -17.76px;        (69.0;      (68.0;      (69.0;     #>    padding-left: 71.04px'> IQ range           80.0)       82.0)       80.5)     #>                                                                                 #>    <div style='text-indent: -17.76px;                                           #>    padding-left: 35.52px'> Race                                                 #>    <div style='text-indent: -17.76px;          33          34          44       #>    padding-left: 53.28px'> N                                                    #>    <div style='text-indent: -17.76px;           0           0       1 (2.3%)    #>    padding-left: 71.04px'> AMERICAN                                             #>    INDIAN OR ALASKA NATIVE                                                      #>    <div style='text-indent: -17.76px;       3 (9.1%)        0       3 (6.8%)    #>    padding-left: 71.04px'> BLACK OR                                             #>    AFRICAN AMERICAN                                                             #>    <div style='text-indent: -17.76px;          30          34          40       #>    padding-left: 71.04px'> WHITE             (90.9%)    (100.0%)     (90.9%)    #>    <div style='text-indent: -17.76px;                                           #>    padding-left: 17.76px'> Female                                               #>                                                                                 #>    <div style='text-indent: -17.76px;                                           #>    padding-left: 35.52px'> Age (Years)                                          #>    <div style='text-indent: -17.76px;          53          50          40       #>    padding-left: 53.28px'> N                                                    #>    <div style='text-indent: -17.76px;         76.4        75.7        74.7      #>    padding-left: 71.04px'> Mean (SD)         (8.73)      (8.09)      (7.67)     #>    <div style='text-indent: -17.76px;         78.0        77.5        76.0      #>    padding-left: 71.04px'> Median                                               #>    <div style='text-indent: -17.76px;       (59; 89)    (54; 87)    (56; 88)    #>    padding-left: 71.04px'> Range                                                #>    <div style='text-indent: -17.76px;        (70.0;      (72.0;      (72.0;     #>    padding-left: 71.04px'> IQ range           84.0)       81.0)       79.0)     #>                                                                                 #>    <div style='text-indent: -17.76px;                                           #>    padding-left: 35.52px'> Race                                                 #>    <div style='text-indent: -17.76px;          53          50          40       #>    padding-left: 53.28px'> N                                                    #>    <div style='text-indent: -17.76px;           0           0           0       #>    padding-left: 71.04px'> AMERICAN                                             #>    INDIAN OR ALASKA NATIVE                                                      #>    <div style='text-indent: -17.76px;       5 (9.4%)    6 (12.0%)   6 (15.0%)   #>    padding-left: 71.04px'> BLACK OR                                             #>    AFRICAN AMERICAN                                                             #>    <div style='text-indent: -17.76px;          48          44          34       #>    padding-left: 71.04px'> WHITE             (90.6%)     (88.0%)     (85.0%)    #>    <div style='border-top:1pt solid;'> <br />Key: IQ = interquartile            #>    Note: N reflects non-missing values                                          #>    <div style='border-bottom:1pt solid'> [table01.html][] 22APR2024,            #>                                                                17:01            #>  #> Column names: label, col1, col2, col3, col4, col5 #>  #> 4/6 columns shown."},{"path":"/articles/univar.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Univariate Statistics Analysis","text":"univar function called produce univariate-type summary statistics numeric variables. typical example using univar function create tbl chunk shown summarizing N, MEAN (SD), MEDIAN, RANGE, IQ Range Age variable adsl.","code":"tbl <- cdisc_adsl %>%   univar(colvar = \"TRT01PN\",          rowvar = \"AGE\",          statlist = statlist(c(\"N\", \"MEANSD\", \"MEDIAN\", \"RANGE\", \"IQRANGE\")),          decimal = 0,          row_header = \"Age (Years)\")  knitr::kable(tbl)"},{"path":"/articles/univar.html","id":"customizing-univariate-statistics","dir":"Articles","previous_headings":"","what":"Customizing Univariate Statistics","title":"Univariate Statistics Analysis","text":"Besides 5 standard univariate statistics shown often required demographic tables, can pick univariate statistics table arrange character vector passing statlist argument. customized example shown displaying N, Mean (95% C..), Geometric Mean (95% C..) Age variable adsl.","code":"tbl <- cdisc_adsl %>%   univar(colvar = \"TRT01PN\",          rowvar = \"AGE\",          statlist = statlist(c(\"N\", \"MEAN_CI\", \"GeoMEAN_CI\")),          decimal = 0,          row_header = \"Age (Years)\")  knitr::kable(tbl)"},{"path":"/articles/univar.html","id":"decimal-precision","dir":"Articles","previous_headings":"","what":"Decimal Precision","title":"Univariate Statistics Analysis","text":"decimal precision used display univariate statistics comprised two pieces. base decimal precision controls base number decimals used, can set using decimal argument. precision extra controls difference precision used different statistics, controlled using option tidytlg.precision.extra. precision extra amount precision need adjusted base precision different statistic. default precision extra set following table listing conventions: Range precision extra 0, Mean Median precision extra 1, SD precision extra 2. see full list precision extra defaults, please type options(\"tidytlg.precision.extra\") console. example function call univar shown presenting data using base decimal value 2.","code":"tbl <- cdisc_adsl %>%   univar(colvar = \"TRT01PN\",          rowvar = \"BMIBL\",          decimal = 2,          row_header = \"Age (Years)\")  knitr::kable(tbl)"},{"path":"/articles/univar.html","id":"data-driven-precision","dir":"Articles","previous_headings":"","what":"Data Driven Precision","title":"Univariate Statistics Analysis","text":"static precision useful cases, data driven precision also available. controlled using precisionby, precisionon, decimal arguments. precisionby tells function variable(s) user like compute precision using. variables PARAMCD precision varied parameter. precisionon variable used calculating many base decimal places present data. last piece data drive precision decimal argument gives us cap base precision values. can used help avoid unnecessarily long decimals final output. customized example shown presenting univariate summary vital signs data using PARAMCD variable. addition, like precision data driven varied parameter, can achieved setting precisionby = \"PARAMCD\". data driven precision usually done variable doesn’t always . precisionon argument can used calculate data driven precision single variable. might useful table template going used multiple times multiple parts table using similar call need different data driven precision. following example uses variable CHG calculate precision, similar example still use decimal = 4 cap decimal spaces 4. Another use case precisionon argument need calculate summary one variable use another precision table output formatting. following example uses precisionby precisionon show can used together make special tables. table, creating element table summarizes AVAL uses CHG calculate precision. allows us consistent formatting throughout table even though two variables may different precision. also calculate precision PARAMCD since output table presented using variable.","code":"tbl <- cdisc_advs %>%   univar(colvar = \"TRTAN\",          rowvar = \"AVAL\",          rowbyvar = \"PARAMCD\",          precisionby = \"PARAMCD\",          decimal = 4)  knitr::kable(tbl) tbl <- cdisc_advs %>%   filter(PARAMCD == \"SYSBP\") %>%   univar(colvar = \"TRTAN\",          rowvar = \"CHG\",          precisionon = \"CHG\",          decimal = 4)  knitr::kable(tbl) tbl <- cdisc_advs %>%   filter(PARAMCD == \"SYSBP\") %>%   univar(colvar = \"TRTAN\",          rowvar = \"AVAL\",          rowbyvar = \"PARAMCD\",          precisionby = \"PARAMCD\",          precisionon = \"CHG\",          decimal = 4)  knitr::kable(tbl)"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nicholas Masel. Author. Steven Haesendonckx. Author. Pelagia Alexandra Papadopoulou. Author. Sheng-Wei Wang. Author. Eli Miller. Author, maintainer. Nathan Kosiba. Author. Aidan Ceney. Author. Janssen R&D. Copyright holder, funder. David Hugh-Jones. Copyright holder.            Author included huxtable library","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Masel N, Haesendonckx S, Alexandra Papadopoulou P, Wang S, Miller E, Kosiba N, Ceney (2024). tidytlg: Create TLGs using 'tidyverse'. R package version 0.1.4, https://github.com/pharmaverse/tidytlg, https://pharmaverse.github.io/tidytlg/main/.","code":"@Manual{,   title = {tidytlg: Create TLGs using the 'tidyverse'},   author = {Nicholas Masel and Steven Haesendonckx and Pelagia {Alexandra Papadopoulou} and Sheng-Wei Wang and Eli Miller and Nathan Kosiba and Aidan Ceney},   year = {2024},   note = {R package version 0.1.4, https://github.com/pharmaverse/tidytlg},   url = {https://pharmaverse.github.io/tidytlg/main/}, }"},{"path":"/index.html","id":"tidytlg-","dir":"","previous_headings":"","what":"Create TLGs using the tidyverse","title":"Create TLGs using the tidyverse","text":"goal tidytlg generate table, listings, graphs (TLG) using Tidyverse. can achieved multiple ways package. Functional method: build custom script TLG Metadata method: build generic script utilizes column table metadata produce TLG result","code":""},{"path":[]},{"path":"/index.html","id":"development-version","dir":"","previous_headings":"Installation","what":"Development version","title":"Create TLGs using the tidyverse","text":"","code":"# install.packages(\"devtools\") devtools::install_github(\"pharmaverse/tidytlg\")"},{"path":"/index.html","id":"functional-method-example","dir":"","previous_headings":"","what":"Functional method example","title":"Create TLGs using the tidyverse","text":"","code":"library(dplyr) library(tidytlg)  # Note cdisc_adsl is built into the package for use ittpop <- cdisc_adsl %>%   filter(ITTFL == \"Y\")  # frequency of Intend-to-Treat patients by planned treatment tbl1 <- freq(ittpop,              rowvar = \"ITTFL\",              statlist = statlist(\"n\"),              colvar = \"TRT01P\",              rowtext = \"Analysis Set:  Intend-to-Treat Population\",              subset = ITTFL == \"Y\")  # N, MEAN (SD), MEDIAN, RANGE, IQ Range of age by planned treatment tbl2 <- univar(ittpop,                rowvar = \"AGE\",                colvar = \"TRT01P\",                row_header = \"Age (Years)\")  # frequency of Race by planned treatment tbl3 <- freq(ittpop,              rowvar =  \"RACE\",              statlist = statlist(c(\"N\", \"n (x.x%)\")),              colvar = \"TRT01P\",              row_header = \"Race, n(%)\")  # combine results together tbl <- bind_table(tbl1, tbl2, tbl3)  # conver to hux object ----------------------------------------------------------------- gentlg(huxme       = tbl ,        orientation = \"landscape\",        file        = \"DEMO\",        title       = \"Custom Method\",        footers     = \"Produced with tidytlg\",        colspan     = list(c(\"\", \"\", \"Xanomeline\", \"Xanomeline\")),        colheader   = c(\"\", \"Placebo\", \"High\", \"Low\"),        wcol        = .30)"},{"path":"/index.html","id":"metadata-method-example","dir":"","previous_headings":"","what":"Metadata method example","title":"Create TLGs using the tidyverse","text":"","code":"library(dplyr) library(tidytlg)  adsl <- cdisc_adsl  table_metadata <- tibble::tribble(   ~anbr,~func,    ~df,     ~rowvar,            ~rowtext,   ~row_header,                    ~statlist,         ~subset,   1,   \"freq\", \"adsl\",     \"ITTFL\", \"Analysis set: itt\",            NA,                statlist(\"n\"),  \"ITTFL == 'Y'\",   2, \"univar\", \"adsl\",       \"AGE\",                  NA, \"Age (Years)\",                           NA,              NA,   3,   \"freq\", \"adsl\",      \"RACE\",                  NA,  \"Race, n(%)\", statlist(c(\"N\", \"n (x.x%)\")),              NA ) %>%   mutate(colvar  = \"TRT01PN\")  tbl <- generate_results(table_metadata,                          column_metadata_file = system.file(\"extdata/column_metadata.xlsx\", package = \"tidytlg\"),                         tbltype = \"type1\")   # conver to hux object ----------------------------------------------------------------- tblid <- \"Table01\"  gentlg(huxme       = tbl,        orientation = \"landscape\",        file        = tblid,        title_file = system.file(\"extdata/titles.xls\", package = \"tidytlg\"),        wcol        = .30)"},{"path":"/reference/add_format.html","id":null,"dir":"Reference","previous_headings":"","what":"Add the formatting variables of indentme, newrows, newpage, and roworder to the results dataframe — add_format","title":"Add the formatting variables of indentme, newrows, newpage, and roworder to the results dataframe — add_format","text":"Add formatting variables indentme, newrows, newpage, roworder results dataframe","code":""},{"path":"/reference/add_format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add the formatting variables of indentme, newrows, newpage, and roworder to the results dataframe — add_format","text":"","code":"add_format(df, tableby = NULL, groupby = NULL, .keep = FALSE)"},{"path":"/reference/add_format.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add the formatting variables of indentme, newrows, newpage, and roworder to the results dataframe — add_format","text":"df (required) dataframe results must contain anbr variable tableby (optional) character vector containing table variables groupby (optional) character vector containing group variables .keep (optional) tableby groupby variables kept final dataframe.  (default = FALSE)","code":""},{"path":"/reference/add_format.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add the formatting variables of indentme, newrows, newpage, and roworder to the results dataframe — add_format","text":"dataframe formatting variables indentme, newrows, newpage, roworder added","code":""},{"path":"/reference/add_format.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add the formatting variables of indentme, newrows, newpage, and roworder to the results dataframe — add_format","text":"","code":"df <- tibble::tibble(row_type =       c(\"TABLE_BY_HEADER\", \"HEADER\", \"BY_HEADER1\", \"N\", \"VALUE\",                                    \"COUNTS\", \"UNIVAR\", \"NESTED\", \"NESTED\"),         nested_level =  c(NA, NA, NA, NA, NA, NA, NA, 1, 2),         group_level =  c(0, 0, 0, 0, 0, 0, 0, 0, 0),         label        =  c(NA, NA, NA, NA, NA, \"N\",NA, NA, NA),         by           =  c(NA, NA, NA, NA, NA, NA, NA, NA, NA),         tableby      =  c(NA, NA, NA, NA, NA, NA, NA, NA, NA),         anbr      =  c(1:9)) add_format(df) #> # A tibble: 9 × 9 #>   row_type        label by    tableby  anbr indentme roworder newrows newpage #>   <chr>           <chr> <lgl> <lgl>   <int>    <dbl>    <int>   <dbl>   <dbl> #> 1 TABLE_BY_HEADER NA    NA    NA          1        0        1       1       0 #> 2 HEADER          NA    NA    NA          2        1        1       1       0 #> 3 BY_HEADER1      NA    NA    NA          3        1        1       1       0 #> 4 N               NA    NA    NA          4        2        1       1       0 #> 5 VALUE           NA    NA    NA          5        2        1       1       0 #> 6 COUNTS          N     NA    NA          6        0        1       1       0 #> 7 UNIVAR          NA    NA    NA          7        0        1       1       0 #> 8 NESTED          NA    NA    NA          8        2        1       1       0 #> 9 NESTED          NA    NA    NA          9        3        1       1       0"},{"path":"/reference/add_indent.html","id":null,"dir":"Reference","previous_headings":"","what":"Add indentation variable to the results dataframe — add_indent","title":"Add indentation variable to the results dataframe — add_indent","text":"Add indentme variable results data. drives number indents row label text (e.g. 0, 1, 2, etc.).","code":""},{"path":"/reference/add_indent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add indentation variable to the results dataframe — add_indent","text":"","code":"add_indent(df)"},{"path":"/reference/add_indent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add indentation variable to the results dataframe — add_indent","text":"df dataframe results contains row_type label optional nested_level group_level variables.","code":""},{"path":"/reference/add_indent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add indentation variable to the results dataframe — add_indent","text":"dataframe indentme variable added.","code":""},{"path":"/reference/add_indent.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add indentation variable to the results dataframe — add_indent","text":"group_level variable, added results dataframe freq() univar() calls, needed define indentation variables used summary. nested_level variable, added results dataframe nested_freq(), needed define indentation level nesting. added default indentation driven row_type.","code":""},{"path":"/reference/add_indent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add indentation variable to the results dataframe — add_indent","text":"","code":"df <- tibble::tibble(row_type     =  c(\"TABLE_BY_HEADER\", \"HEADER\",        \"BY_HEADER1\", \"N\", \"VALUE\", \"COUNTS\", \"UNIVAR\", \"NESTED\", \"NESTED\"),                      nested_level =  c(NA, NA, NA, NA, NA, NA, NA, 1, 2),                      group_level =  c(0, 0, 0, 0, 0, 0, 0, 0, 0),                      label        =  c(NA, NA, NA, NA, NA, \"N\",NA, NA, NA),                      by           =  c(NA, NA, NA, NA, NA, NA, NA, NA, NA),                      tableby      =  c(NA, NA, NA, NA, NA, NA, NA, NA, NA)) add_indent(df) #> # A tibble: 9 × 5 #>   row_type        label by    tableby indentme #>   <chr>           <chr> <lgl> <lgl>      <dbl> #> 1 TABLE_BY_HEADER NA    NA    NA             0 #> 2 HEADER          NA    NA    NA             1 #> 3 BY_HEADER1      NA    NA    NA             1 #> 4 N               NA    NA    NA             2 #> 5 VALUE           NA    NA    NA             3 #> 6 COUNTS          N     NA    NA             0 #> 7 UNIVAR          NA    NA    NA             0 #> 8 NESTED          NA    NA    NA             2 #> 9 NESTED          NA    NA    NA             3"},{"path":"/reference/add_newrows.html","id":null,"dir":"Reference","previous_headings":"","what":"Add the newrows variable to the results dataframe. — add_newrows","title":"Add the newrows variable to the results dataframe. — add_newrows","text":"newrows variable used gentlg() define add blank row output. Data grouped anbr variables passed tableby groupby parameters.newrows set 1 first record group, except first row data. first row always set 0.","code":""},{"path":"/reference/add_newrows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add the newrows variable to the results dataframe. — add_newrows","text":"","code":"add_newrows(df, tableby = NULL, groupby = NULL)"},{"path":"/reference/add_newrows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add the newrows variable to the results dataframe. — add_newrows","text":"df dataframe results.  must contain anbr variable added add_format() tableby character vector containing table variables used generate results groupby character vector containing group variables used generate results","code":""},{"path":"/reference/add_newrows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add the newrows variable to the results dataframe. — add_newrows","text":"dataframe variable newrows roworder added. newrows used gentlg insert line breaks.","code":""},{"path":"/reference/add_newrows.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add the newrows variable to the results dataframe. — add_newrows","text":"","code":"# Example showing how newrows is set to one for each new anbr except # the first tbl <-   structure(     list(rowvar = c(\"RANDFL\", \"AGE\", \"AGE\", \"AGE\", \"AGE\", \"AGE\"),      anbr   = c(1L, 2L, 2L, 2L, 2L, 2L),      label  = c(\"Analysis set: Subjects Randomized\", \"Age (Years)\", \"N\",      \"Mean (SD)\", \"Range\", \"IQ Range\"),      row_type = c(\"COUNT\", \"UNIVAR\", \"UNIVAR\", \"UNIVAR\", \"UNIVAR\", \"UNIVAR\")       ),     row.names = c(NA,-6L),     class = c(\"tbl_df\", \"tbl\", \"data.frame\")   )  add_newrows(tbl) #> # A tibble: 6 × 6 #>   rowvar  anbr label                             row_type roworder newrows #>   <chr>  <int> <chr>                             <chr>       <int>   <dbl> #> 1 RANDFL     1 Analysis set: Subjects Randomized COUNT           1       0 #> 2 AGE        2 Age (Years)                       UNIVAR          1       1 #> 3 AGE        2 N                                 UNIVAR          2       0 #> 4 AGE        2 Mean (SD)                         UNIVAR          3       0 #> 5 AGE        2 Range                             UNIVAR          4       0 #> 6 AGE        2 IQ Range                          UNIVAR          5       0  # Example of use when you have results summarized by one or more variables tbl2 <- tibble::tribble(   ~anbr, ~SEX,    ~label,         ~row_type,   \"01\",  \"F\", \"Sex : F\", \"TABLE_BY_HEADER\",   \"01\",  \"F\",     \"<65\",           \"VALUE\",   \"01\",  \"F\",   \"65-80\",           \"VALUE\",   \"01\",  \"F\",     \">80\",           \"VALUE\",   \"01\",  \"M\", \"Sex : M\", \"TABLE_BY_HEADER\",   \"01\",  \"M\",     \"<65\",           \"VALUE\",   \"01\",  \"M\",   \"65-80\",           \"VALUE\",   \"01\",  \"M\",     \">80\",           \"VALUE\" )  add_newrows(tbl2, tableby = \"SEX\") #> # A tibble: 8 × 6 #>   anbr  SEX   label   row_type        roworder newrows #>   <chr> <chr> <chr>   <chr>              <int>   <dbl> #> 1 01    F     Sex : F TABLE_BY_HEADER        1       0 #> 2 01    F     <65     VALUE                  2       0 #> 3 01    F     65-80   VALUE                  3       0 #> 4 01    F     >80     VALUE                  4       0 #> 5 01    M     Sex : M TABLE_BY_HEADER        1       1 #> 6 01    M     <65     VALUE                  2       0 #> 7 01    M     65-80   VALUE                  3       0 #> 8 01    M     >80     VALUE                  4       0  tbl3 <- tibble::tribble( ~anbr, ~SEX,           ~ETHNIC,                  ~label,         ~row_type,  \"01\",  \"F\",                NA,                \"Sexexadd_newrows(tbl3, tableby = \"SEX\", groupby = \"ETHNIC\") #> # A tibble: 18 × 7 #>    anbr  SEX   ETHNIC                 label            row_type roworder newrows #>    <chr> <chr> <chr>                  <chr>            <chr>       <int>   <dbl> #>  1 01    F     NA                     Sex : F          TABLE_B…        1       0 #>  2 01    F     HISPANIC OR LATINO     HISPANIC OR LAT… BY_HEAD…        1       1 #>  3 01    F     HISPANIC OR LATINO     <65              VALUE           2       0 #>  4 01    F     HISPANIC OR LATINO     >80              VALUE           3       0 #>  5 01    F     HISPANIC OR LATINO     65-80            VALUE           4       0 #>  6 01    F     NOT HISPANIC OR LATINO NOT HISPANIC OR… BY_HEAD…        1       1 #>  7 01    F     NOT HISPANIC OR LATINO <65              VALUE           2       0 #>  8 01    F     NOT HISPANIC OR LATINO 65-80            VALUE           3       0 #>  9 01    F     NOT HISPANIC OR LATINO >80              VALUE           4       0 #> 10 01    M     NA                     Sex : M          TABLE_B…        1       1 #> 11 01    M     HISPANIC OR LATINO     HISPANIC OR LAT… BY_HEAD…        1       1 #> 12 01    M     HISPANIC OR LATINO     <65              VALUE           2       0 #> 13 01    M     HISPANIC OR LATINO     65-80            VALUE           3       0 #> 14 01    M     HISPANIC OR LATINO     >80              VALUE           4       0 #> 15 01    M     NOT HISPANIC OR LATINO NOT HISPANIC OR… BY_HEAD…        1       1 #> 16 01    M     NOT HISPANIC OR LATINO <65              VALUE           2       0 #> 17 01    M     NOT HISPANIC OR LATINO 65-80            VALUE           3       0 #> 18 01    M     NOT HISPANIC OR LATINO >80              VALUE           4       0"},{"path":"/reference/bind_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Bind a set of tidytlg tables together with formatting variables — bind_table","title":"Bind a set of tidytlg tables together with formatting variables — bind_table","text":"bind_table combines analysis results formatting variables (indentme, newrows, newpage) based variables (tablebyvar, rowbyvar), appropriate formatting (indentation, line break, page break) can applied creating output. can also attach column metadata attribute, automatically used gentlg creating output.","code":""},{"path":"/reference/bind_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bind a set of tidytlg tables together with formatting variables — bind_table","text":"","code":"bind_table(   ...,   colvar = NULL,   tablebyvar = NULL,   rowbyvar = NULL,   prefix = NULL,   add_count = FALSE,   add_format = TRUE,   column_metadata_file = NULL,   column_metadata = NULL,   tbltype = NULL )"},{"path":"/reference/bind_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bind a set of tidytlg tables together with formatting variables — bind_table","text":"... (required) set tidytlg tables bind together colvar (required) treatment variable within df use summarize. Required add_count TRUE. tablebyvar (optional) repeat entire table variable within df rowbyvar (optional) rowbyvar values used create table prefix (optional) text prefix values tablebyvar add_count (optional) count included tablebyvar? (default = TRUE) add_format (optional) format added output table? done using add_format function. (default = TRUE) column_metadata_file (optional) excel file column_metadata. change behavior function binds column metadata gentlg. column_metadata dataframe passed , ignored. column_metadata (optional) dataframe containing column metadata. used place column_metadata_file. tbltype (optional) value used subset column_metadata_file.","code":""},{"path":"/reference/bind_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bind a set of tidytlg tables together with formatting variables — bind_table","text":"tidytlg tables bound together reflecting tablebyvars used","code":""},{"path":"/reference/bind_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bind a set of tidytlg tables together with formatting variables — bind_table","text":"","code":"library(magrittr)  # bind tables together t1 <- cdisc_adsl %>%   freq(colvar = \"TRT01PN\",        rowvar = \"ITTFL\",        statlist = statlist(\"n\"),        subset = ITTFL == \"Y\",        rowtext = \"Analysis set: ITT\")  t2 <- cdisc_adsl %>%   univar(colvar = \"TRT01PN\",          rowvar = \"AGE\",          decimal = 0,          row_header = \"Age, years\")  bind_table(t1, t2) #> # A tibble: 7 × 10 #>   label       `0`   `54`  `81`  row_type  anbr indentme roworder newrows newpage #>   <chr>       <chr> <chr> <chr> <chr>    <dbl>    <dbl>    <int>   <dbl>   <dbl> #> 1 Analysis s… \"5\"   \"5\"   \"5\"   HEADER       1        0        1       0       0 #> 2 Age, years  \"\"    \"\"    \"\"    HEADER       2        0        1       1       0 #> 3 N           \"5\"   \"5\"   \"5\"   N            2        1        2       0       0 #> 4 Mean (SD)   \"69.… \"75.… \"72.… VALUE        2        2        3       0       0 #> 5 Median      \"64.… \"74.… \"75.… VALUE        2        2        4       0       0 #> 6 Range       \"(52… \"(68… \"(57… VALUE        2        2        5       0       0 #> 7 IQ range    \"(63… \"(71… \"(71… VALUE        2        2        6       0       0  # bind tables together w/by groups t1 <- cdisc_adsl %>%   freq(colvar = \"TRT01PN\",        rowvar = \"ITTFL\",        rowbyvar = \"SEX\",        statlist = statlist(\"n\"),        subset = ITTFL == \"Y\",        rowtext = \"Analysis set: ITT\")  t2 <- cdisc_adsl %>%   univar(colvar = \"TRT01PN\",          rowvar = \"AGE\",          rowbyvar = \"SEX\",          decimal = 0,          row_header = \"Age, years\")  bind_table(t1, t2, rowbyvar = \"SEX\") #> # A tibble: 18 × 10 #>    label      `0`   `54`  `81`  row_type  anbr indentme roworder newrows newpage #>    <chr>      <chr> <chr> <chr> <chr>    <dbl>    <dbl>    <int>   <dbl>   <dbl> #>  1 F          \"\"    \"\"    \"\"    BY_HEAD…     1        0        1       0       0 #>  2 Analysis … \"2\"   \"1\"   \"3\"   VALUE        1        1        2       0       0 #>  3 M          \"\"    \"\"    \"\"    BY_HEAD…     1        0        1       1       0 #>  4 Analysis … \"3\"   \"4\"   \"2\"   VALUE        1        1        2       0       0 #>  5 F          \"\"    \"\"    \"\"    BY_HEAD…     2        0        1       1       0 #>  6 Age, years \"\"    \"\"    \"\"    HEADER       2        0        2       0       0 #>  7 N          \"2\"   \"1\"   \"3\"   N            2        1        3       0       0 #>  8 Mean (SD)  \"74.… \"81.… \"77.… VALUE        2        2        4       0       0 #>  9 Median     \"74.… \"81.… \"77.… VALUE        2        2        5       0       0 #> 10 Range      \"(63… \"(81… \"(75… VALUE        2        2        6       0       0 #> 11 IQ range   \"(63… \"(81… \"(75… VALUE        2        2        7       0       0 #> 12 M          \"\"    \"\"    \"\"    BY_HEAD…     2        0        1       1       0 #> 13 Age, years \"\"    \"\"    \"\"    HEADER       2        0        2       0       0 #> 14 N          \"3\"   \"4\"   \"2\"   N            2        1        3       0       0 #> 15 Mean (SD)  \"66.… \"74.… \"64.… VALUE        2        2        4       0       0 #> 16 Median     \"64.… \"72.… \"64.… VALUE        2        2        5       0       0 #> 17 Range      \"(52… \"(68… \"(57… VALUE        2        2        6       0       0 #> 18 IQ range   \"(52… \"(69… \"(57… VALUE        2        2        7       0       0  # bind tables together w/table by groups t1 <- cdisc_adsl %>%   freq(colvar = \"TRT01PN\",        rowvar = \"ITTFL\",        tablebyvar = \"SEX\",        statlist = statlist(\"n\"),        subset = ITTFL == \"Y\",        rowtext = \"Analysis set: ITT\")  t2 <- cdisc_adsl %>%   univar(colvar = \"TRT01PN\",          rowvar = \"AGE\",          tablebyvar = \"SEX\",          decimal = 0,          row_header = \"Age, years\")  bind_table(t1, t2, tablebyvar = \"SEX\") #> # A tibble: 16 × 10 #>    label      `0`   `54`  `81`  row_type  anbr indentme roworder newrows newpage #>    <chr>      <chr> <chr> <chr> <chr>    <dbl>    <dbl>    <int>   <dbl>   <dbl> #>  1 F           NA    NA    NA   TABLE_B…     0        0        1       1       0 #>  2 Analysis … \"2\"   \"1\"   \"3\"   VALUE        1        2        1       1       0 #>  3 Age, years \"\"    \"\"    \"\"    HEADER       2        1        1       1       0 #>  4 N          \"2\"   \"1\"   \"3\"   N            2        2        2       0       0 #>  5 Mean (SD)  \"74.… \"81.… \"77.… VALUE        2        3        3       0       0 #>  6 Median     \"74.… \"81.… \"77.… VALUE        2        3        4       0       0 #>  7 Range      \"(63… \"(81… \"(75… VALUE        2        3        5       0       0 #>  8 IQ range   \"(63… \"(81… \"(75… VALUE        2        3        6       0       0 #>  9 M           NA    NA    NA   TABLE_B…     0        0        1       0       1 #> 10 Analysis … \"3\"   \"4\"   \"2\"   VALUE        1        2        1       1       0 #> 11 Age, years \"\"    \"\"    \"\"    HEADER       2        1        1       1       0 #> 12 N          \"3\"   \"4\"   \"2\"   N            2        2        2       0       0 #> 13 Mean (SD)  \"66.… \"74.… \"64.… VALUE        2        3        3       0       0 #> 14 Median     \"64.… \"72.… \"64.… VALUE        2        3        4       0       0 #> 15 Range      \"(52… \"(68… \"(57… VALUE        2        3        5       0       0 #> 16 IQ range   \"(52… \"(69… \"(57… VALUE        2        3        6       0       0  # w/prefix bind_table(t1, t2, tablebyvar = \"SEX\", prefix = \"Gender: \") #> # A tibble: 16 × 10 #>    label      `0`   `54`  `81`  row_type  anbr indentme roworder newrows newpage #>    <chr>      <chr> <chr> <chr> <chr>    <dbl>    <dbl>    <int>   <dbl>   <dbl> #>  1 Gender: F   NA    NA    NA   TABLE_B…     0        0        1       1       0 #>  2 Analysis … \"2\"   \"1\"   \"3\"   VALUE        1        2        1       1       0 #>  3 Age, years \"\"    \"\"    \"\"    HEADER       2        1        1       1       0 #>  4 N          \"2\"   \"1\"   \"3\"   N            2        2        2       0       0 #>  5 Mean (SD)  \"74.… \"81.… \"77.… VALUE        2        3        3       0       0 #>  6 Median     \"74.… \"81.… \"77.… VALUE        2        3        4       0       0 #>  7 Range      \"(63… \"(81… \"(75… VALUE        2        3        5       0       0 #>  8 IQ range   \"(63… \"(81… \"(75… VALUE        2        3        6       0       0 #>  9 Gender: M   NA    NA    NA   TABLE_B…     0        0        1       0       1 #> 10 Analysis … \"3\"   \"4\"   \"2\"   VALUE        1        2        1       1       0 #> 11 Age, years \"\"    \"\"    \"\"    HEADER       2        1        1       1       0 #> 12 N          \"3\"   \"4\"   \"2\"   N            2        2        2       0       0 #> 13 Mean (SD)  \"66.… \"74.… \"64.… VALUE        2        3        3       0       0 #> 14 Median     \"64.… \"72.… \"64.… VALUE        2        3        4       0       0 #> 15 Range      \"(52… \"(68… \"(57… VALUE        2        3        5       0       0 #> 16 IQ range   \"(52… \"(69… \"(57… VALUE        2        3        6       0       0  # w/counts bind_table(t1, t2, tablebyvar = \"SEX\", add_count = TRUE, colvar = \"TRT01PN\") #> # A tibble: 16 × 10 #>    label      `0`   `54`  `81`  row_type  anbr indentme roworder newrows newpage #>    <chr>      <chr> <chr> <chr> <chr>    <dbl>    <dbl>    <int>   <dbl>   <dbl> #>  1 F          \"2\"   \"1\"   \"3\"   TABLE_B…    NA        0        1       1       0 #>  2 Analysis … \"2\"   \"1\"   \"3\"   VALUE        1        2        1       1       0 #>  3 Age, years \"\"    \"\"    \"\"    HEADER       2        1        1       1       0 #>  4 N          \"2\"   \"1\"   \"3\"   N            2        2        2       0       0 #>  5 Mean (SD)  \"74.… \"81.… \"77.… VALUE        2        3        3       0       0 #>  6 Median     \"74.… \"81.… \"77.… VALUE        2        3        4       0       0 #>  7 Range      \"(63… \"(81… \"(75… VALUE        2        3        5       0       0 #>  8 IQ range   \"(63… \"(81… \"(75… VALUE        2        3        6       0       0 #>  9 M          \"3\"   \"4\"   \"2\"   TABLE_B…    NA        0        1       0       1 #> 10 Analysis … \"3\"   \"4\"   \"2\"   VALUE        1        2        1       1       0 #> 11 Age, years \"\"    \"\"    \"\"    HEADER       2        1        1       1       0 #> 12 N          \"3\"   \"4\"   \"2\"   N            2        2        2       0       0 #> 13 Mean (SD)  \"66.… \"74.… \"64.… VALUE        2        3        3       0       0 #> 14 Median     \"64.… \"72.… \"64.… VALUE        2        3        4       0       0 #> 15 Range      \"(52… \"(68… \"(57… VALUE        2        3        5       0       0 #> 16 IQ range   \"(52… \"(69… \"(57… VALUE        2        3        6       0       0"},{"path":"/reference/cdisc-adae.html","id":null,"dir":"Reference","previous_headings":"","what":"ADAE data created from subsetting the CDISC ADAE dataset — cdisc adae","title":"ADAE data created from subsetting the CDISC ADAE dataset — cdisc adae","text":"ADAE data created subsetting CDISC ADAE dataset","code":""},{"path":"/reference/cdisc-adae.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ADAE data created from subsetting the CDISC ADAE dataset — cdisc adae","text":"","code":"cdisc_adae"},{"path":"/reference/cdisc-adae.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ADAE data created from subsetting the CDISC ADAE dataset — cdisc adae","text":"data frame 84 rows 55 variables: STUDYID Study Identifier SITEID Study Site Identifier USUBJID Unique Subject Identifier SUBJID Subject Identifier Study TRTA Actual Treatment TRTAN Actual Treatment (N) AGE Age AGEGR1 Pooled Age Group 1 AGEGR1N Pooled Age Group 1 (N) RACE Race RACEN Race (N) SEX Sex SAFFL Safety Population Flag TRTSDT Date First Exposure Treatment TRTEDT Date Last Exposure Treatment ASTDT Analysis Start Date ASTDTF Analysis Start Date Imputation Flag ASTDY Analysis Start Relative Day AENDT Analysis End Date AENDY Analysis End Relative Day ADURN AE Duration (N) ADURU AE Duration Units AETERM Reported Term Adverse Event AELLT Lowest Level Term AELLTCD Lowest Level Term Code AEDECOD Dictionary-Derived Term AEPTCD Preferred Term Code AEHLT High Level Term AEHLTCD High Level Term Code AEHLGT High Level Group Term AEHLGTCD High Level Group Term Code AEBODSYS Body System Organ Class AESOC Primary System Organ Class AESOCCD Primary System Organ Class Code AESEV Severity/Intensity AESER Serious Event AESCAN Involves Cancer AESCONG Congenital Anomaly Birth Defect AESDISAB Persist Signif Disability/Incapacity AESDTH Results Death AESHOSP Requires Prolongs Hospitalization AESLIFE Life Threatening AESOD Occurred Overdose AEREL Causality AEACN Action Taken Study Treatment AEOUT Outcome Adverse Event AESEQ Sequence Number TRTEMFL Treatment Emergent Analysis Flag AOCCFL 1st Occurrence AE Flag AOCCSFL 1st Occurrence SOC Flag AOCCPFL 1st Occurrence Preferred Term Flag AOCC02FL 1st Occurrence 02 Flag Serious AOCC03FL 1st Occurrence 03 Flag Serious SOC AOCC04FL 1st Occurrence 04 Flag Serious PT CQ01NAM Customized Query 01 Name AOCC01FL 1st Occurrence 01 Flag CQ01","code":""},{"path":"/reference/cdisc-adae.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"ADAE data created from subsetting the CDISC ADAE dataset — cdisc adae","text":"CDISC SDTM/ADAM Pilot Project.","code":""},{"path":"/reference/cdisc-adlb.html","id":null,"dir":"Reference","previous_headings":"","what":"ADLB data created from subsetting the CDISC ADLB dataset — cdisc adlb","title":"ADLB data created from subsetting the CDISC ADLB dataset — cdisc adlb","text":"ADLB data created subsetting CDISC ADLB dataset","code":""},{"path":"/reference/cdisc-adlb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ADLB data created from subsetting the CDISC ADLB dataset — cdisc adlb","text":"","code":"cdisc_adlb"},{"path":"/reference/cdisc-adlb.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ADLB data created from subsetting the CDISC ADLB dataset — cdisc adlb","text":"data frame 2154 rows 46 variables: STUDYID Study Identifier SUBJID Subject Identifier Study USUBJID Unique Subject Identifier TRTA Actual Treatment TRTAN Actual Treatment (N) TRTSDT Date First Exposure Treatment TRTEDT Date Last Exposure Treatment AGE Age AGEGR1 Pooled Age Group 1 AGEGR1N Pooled Age Group 1 (N) RACE Race RACEN Race (N) SEX Sex COMP24FL Completers Week 24 Population Flag DSRAEFL Discontinued due AE? SAFFL Safety Population Flag AVISIT Analysis Visit AVISITN Analysis Visit (N) ADY Analysis Relative Day ADT Analysis Date VISIT Visit Name VISITNUM Visit Number PARAM Parameter PARAMCD Parameter Code PARAMN Parameter (N) PARCAT1 Parameter Category 1 AVAL Analysis Value BASE Baseline Value CHG Change Baseline A1LO Analysis Range 1 Lower Limit A1HI Analysis Range 1 Upper Limit R2A1LO Ratio Analysis Range 1 Lower Limit R2A1HI Ratio Analysis Range 1 Upper Limit BR2A1LO Base Ratio Analysis Range 1 Lower Lim BR2A1HI Base Ratio Analysis Range 1 Upper Lim ANL01FL Analysis 01 - Special Interest Flag ALBTRVAL Amount Threshold Range ANRIND Analysis Reference Range Indicator BNRIND Baseline Reference Range Indicator ABLFL Baseline Record Flag AENTMTFL Last value treatment visit LBSEQ Sequence Number LBNRIND Reference Range Indicator LBSTRESN Numeric Result/Finding Standard Units","code":""},{"path":"/reference/cdisc-adlb.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"ADLB data created from subsetting the CDISC ADLB dataset — cdisc adlb","text":"CDISC SDTM/ADAM Pilot Project.","code":""},{"path":"/reference/cdisc-adsl.html","id":null,"dir":"Reference","previous_headings":"","what":"ADSL data created from subsetting the CDISC ADSL with 15 subjects (5 subjects in each arm) — cdisc adsl","title":"ADSL data created from subsetting the CDISC ADSL with 15 subjects (5 subjects in each arm) — cdisc adsl","text":"ADSL data created subsetting CDISC ADSL 15 subjects (5 subjects arm)","code":""},{"path":"/reference/cdisc-adsl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ADSL data created from subsetting the CDISC ADSL with 15 subjects (5 subjects in each arm) — cdisc adsl","text":"","code":"cdisc_adsl"},{"path":"/reference/cdisc-adsl.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ADSL data created from subsetting the CDISC ADSL with 15 subjects (5 subjects in each arm) — cdisc adsl","text":"data frame 15 rows 49 variables: STUDYID Study Identifier USUBJID Unique Subject Identifier SUBJID Subject Identifier Study SITEID Study Site Identifier SITEGR1 Pooled Site Group 1 ARM Description Planned Arm TRT01P Planned Treatment Period 01 TRT01PN Planned Treatment Period 01 (N) TRT01A Actual Treatment Period 01 TRT01AN Actual Treatment Period 01 (N) TRTSDT Date First Exposure Treatment TRTEDT Date Last Exposure Treatment TRTDUR Duration Treatment (days) AVGDD Avg Daily Dose (planned) CUMDOSE Cumulative Dose (planned) AGE Age AGEGR1 Pooled Age Group 1 AGEGR1N Pooled Age Group 1 (N) AGEU Age Units RACE Race RACEN Race (N) SEX Sex ETHNIC Ethnicity SAFFL Safety Population Flag ITTFL Intent--Treat Population Flag EFFFL Efficacy Population Flag COMP8FL Completers Week 8 Population Flag COMP16FL Completers Week 16 Population Flag COMP24FL Completers Week 24 Population Flag DISCONFL Subject Discontinue Study? DSRAEFL Discontinued due AE? DTHFL Subject Died? BMIBL Baseline BMI (kg/m^2) BMIBLGR1 Pooled Baseline BMI Group 1 HEIGHTBL Baseline Height (cm) WEIGHTBL Baseline Weight (kg) EDUCLVL Years Education DISONSDT Date Onset Disease DURDIS Duration Disease (Months) DURDSGR1 Pooled Disease Duration Group 1 VISIT1DT Date Visit 1 RFSTDTC Subject Reference Start Date/Time RFENDTC Subject Reference End Date/Time VISNUMEN End Trt Visit (Vis 12 Early Term.) RFENDT Date Discontinuation/Completion DCDECOD Standardized Disposition Term EOSSTT End Study Status DCREASCD Reason Discontinuation MMSETOT MMSE Total","code":""},{"path":"/reference/cdisc-adsl.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"ADSL data created from subsetting the CDISC ADSL with 15 subjects (5 subjects in each arm) — cdisc adsl","text":"CDISC SDTM/ADAM Pilot Project.","code":""},{"path":"/reference/cdisc-advs.html","id":null,"dir":"Reference","previous_headings":"","what":"ADVS data created from subsetting the CDISC ADVS dataset — cdisc advs","title":"ADVS data created from subsetting the CDISC ADVS dataset — cdisc advs","text":"ADVS data created subsetting CDISC ADVS dataset","code":""},{"path":"/reference/cdisc-advs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ADVS data created from subsetting the CDISC ADVS dataset — cdisc advs","text":"","code":"cdisc_advs"},{"path":"/reference/cdisc-advs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ADVS data created from subsetting the CDISC ADVS dataset — cdisc advs","text":"data frame 1938 rows 35 variables: STUDYID Study Identifier SITEID Study Site Identifier USUBJID Unique Subject Identifier AGE Age AGEGR1 Pooled Age Group 1 AGEGR1N Pooled Age Group 1 (N) RACE Race RACEN Race (N) SEX Sex SAFFL Safety Population Flag TRTSDT Date First Exposure Treatment TRTEDT Date Last Exposure Treatment TRTP Planned  Treatment TRTPN Planned  Treatment (N) TRTA Actual Treatment TRTAN Actual Treatment (N) PARAMCD Parameter Code PARAM Parameter PARAMN Parameter (N) ADT Analysis Date ADY Analysis Relative Day ATPTN Analysis Timepoint (N) ATPT Analysis Timepoint AVISIT Analysis Visit AVISITN Analysis Visit (N) AVAL Analysis Value BASE Baseline Value BASETYPE Baseline Value CHG Change Baseline PCHG Percent Change Baseline VISITNUM Visit Number VISIT Visit Name VSSEQ Sequence Number ANL01FL Analysis 01 - Special Interest Flag ABLFL Baseline Record Flag","code":""},{"path":"/reference/cdisc-advs.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"ADVS data created from subsetting the CDISC ADVS dataset — cdisc advs","text":"CDISC SDTM/ADAM Pilot Project.","code":""},{"path":"/reference/char2factor.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert character variable to a factor based off it's numeric variable counterpart. — char2factor","title":"Convert character variable to a factor based off it's numeric variable counterpart. — char2factor","text":"Convert character variable factor based numeric variable counterpart.","code":""},{"path":"/reference/char2factor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert character variable to a factor based off it's numeric variable counterpart. — char2factor","text":"","code":"char2factor(df, c_var, n_var)"},{"path":"/reference/char2factor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert character variable to a factor based off it's numeric variable counterpart. — char2factor","text":"df data frame. c_var character variable within data frame. n_var numeric variable counter part within data frame control levels.","code":""},{"path":"/reference/char2factor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert character variable to a factor based off it's numeric variable counterpart. — char2factor","text":"factor.","code":""},{"path":"/reference/char2factor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert character variable to a factor based off it's numeric variable counterpart. — char2factor","text":"","code":"df <- tibble::tribble(   ~TRT01P, ~TRT01PN,   \"Placebo\",   1,   \"Low Dose\",  2,   \"High Dose\", 3   )  # alphabetical order dplyr::arrange(df, TRT01P) #> # A tibble: 3 × 2 #>   TRT01P    TRT01PN #>   <chr>       <dbl> #> 1 High Dose       3 #> 2 Low Dose        2 #> 3 Placebo         1  # change to factor with char2factor df$TRT01P <- char2factor(df, \"TRT01P\", \"TRT01PN\")  # factor order dplyr::arrange(df, TRT01P) #> # A tibble: 3 × 2 #>   TRT01P    TRT01PN #>   <fct>       <dbl> #> 1 Placebo         1 #> 2 Low Dose        2 #> 3 High Dose       3"},{"path":"/reference/column_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Metadata describing table column layouts — column_metadata","title":"Metadata describing table column layouts — column_metadata","text":"used tlgsetup prepare input data support desired column layout.","code":""},{"path":"/reference/column_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metadata describing table column layouts — column_metadata","text":"","code":"column_metadata"},{"path":"/reference/column_metadata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Metadata describing table column layouts — column_metadata","text":"data frame one row per column table type 6 variables: tbltype identifier used group table column layout coldef distinct variable values used, typically numeric typically treatment/main effect variable, think TRT01PN decode decode coldef display column header table span1 spanning header display across multiple columns span2 spanning header display across multiple columns, second level span3 spanning header display across multiple columns, third level","code":""},{"path":"/reference/files.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper functions for returning files used in gentlg — tidytlg_titles","title":"Helper functions for returning files used in gentlg — tidytlg_titles","text":"Helper functions returning files used gentlg","code":""},{"path":"/reference/files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper functions for returning files used in gentlg — tidytlg_titles","text":"","code":"tidytlg_titles(path)  tidytlg_metadata(path)"},{"path":"/reference/files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper functions for returning files used in gentlg — tidytlg_titles","text":"path Working directory project","code":""},{"path":"/reference/files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper functions for returning files used in gentlg — tidytlg_titles","text":"character vector requested file.","code":""},{"path":"/reference/freq.html","id":null,"dir":"Reference","previous_headings":"","what":"Frequency counts and percentages — freq","title":"Frequency counts and percentages — freq","text":"Frequency counts percentages variable treatment /group.","code":""},{"path":"/reference/freq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Frequency counts and percentages — freq","text":"","code":"freq(   df,   denom_df = df,   colvar = NULL,   tablebyvar = NULL,   rowvar = NULL,   rowbyvar = NULL,   statlist = getOption(\"tidytlg.freq.statlist.default\"),   decimal = 1,   nested = FALSE,   cutoff = NULL,   cutoff_stat = \"pct\",   subset = TRUE,   descending_by = NULL,   display_missing = FALSE,   rowtext = NULL,   row_header = NULL,   .keep = TRUE,   .ord = FALSE,   pad = TRUE,   ... )"},{"path":"/reference/freq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Frequency counts and percentages — freq","text":"df (required) dataframe containing records summarize treatment denom_df (optional) dataframe used population based denominators (default = df) colvar (required) treatment variable within df use summarize tablebyvar (optional) repeat entire table variable within df rowvar (required) character vector variables summarize within dataframe rowbyvar (optional) repeat rowvar variable within df statlist (optional) statlist object stats keep length 1 2 specifying list statistics format desired (e.g statlist(c(\"N\", \"n (x.x\\ (x.x)\"))) decimal (optional) decimal precision root level default (default = 1) nested (optional) INTERNAL USE . default changed. Switch function called nested_freq() include variables part group denominators (default = FALSE) cutoff (optional) percentage cutoff threshold. can passed numeric cutoff, case rows greater equal cutoff preserved, others dropped. specify single column define cutoff logic, pass character value form \" >= \" column used. cutoff_stat (optional) value cutoff , n pct. (default = 'pct'). Can done multiple columns adding & | ex. col1 >= val1 & col2 >= val2 subset (optional) R expression passed dplyr::filter() function subset data.frame. performed numerator derivations. Denominators must preprocessed passed using denom_df. descending_by (optional) column columns sort descending counts. Can also provide named list ascending order ex. c(\"VarName1\" = \"asc\", \"VarName2\" = \"desc\") sort VarName1 ascending order VarName2 descending order. case tie count descending_by provided, columns sorted alphabetically. display_missing (optional) \"missing\" values displayed? missing values displayed, denominators include missing values. (default = FALSE) rowtext (optional) character vector used rename label column. named, names give new level values replaced value. unnamed, table one row, rowtext rename label row. rowtext unnamed, table rows, subset, table populated zeros label row. row_header (optional) character vector added table. .keep (optional) rowbyvar tablebyvar output table.  FALSE, rowbyvar still output label column. (default = TRUE) .ord ordering columns output table? useful table needs merged reordered way build. pad (optional) boolean controls levels zero records included final table. (default = TRUE) ... (optional) Named arguments included columns table.","code":""},{"path":"/reference/freq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Frequency counts and percentages — freq","text":"dataframe results","code":""},{"path":"/reference/freq.html","id":"sorting-a-freq-table","dir":"Reference","previous_headings":"","what":"Sorting a 'freq' table","title":"Frequency counts and percentages — freq","text":"default, frequency table sorted based factor level rowvar variable. rowvar variable factor, sorted alphabetically. behavior can modified two ways, first char2factor() function offers interface releveling variable based numeric variable, like VISITN. second based descending_by argument sort based counts variable.","code":""},{"path":"/reference/freq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Frequency counts and percentages — freq","text":"","code":"adsl <- data.frame(       USUBJID = c(\"DEMO-101\", \"DEMO-102\", \"DEMO-103\"),       RACE = c(\"WHITE\", \"BLACK\", \"ASIAN\"),       SEX = c(\"F\", \"M\", \"F\"),       colnbr = factor(c(\"Placebo\", \"Low\", \"High\"))   )  # Unique subject count of a single variable freq(adsl      ,colvar = \"colnbr\"      ,rowvar = \"RACE\"      ,statlist = statlist(\"n\")) #> Column Variables:  colnbr  #> Row Variable:  RACE  #> Statistic Formatting:  n  #> Value Cutoffs:  pct  by variable  pct  #> Descending By:  Factored Sorting  #> Denominators By Variables:  colnbr  #> # A tibble: 3 × 6 #>   label High  Low   Placebo row_type group_level #> * <chr> <chr> <chr> <chr>   <chr>          <dbl> #> 1 ASIAN 1     0     0       VALUE              0 #> 2 BLACK 0     1     0       VALUE              0 #> 3 WHITE 0     0     1       VALUE              0  # Unique subject count and percent of a single variable freq(adsl      ,colvar = \"colnbr\"      ,rowvar = \"RACE\"      ,statlist = statlist(c(\"N\", \"n (x.x%)\"))) #> Column Variables:  colnbr  #> Row Variable:  RACE  #> Statistic Formatting:  c(\"N\", \"n (x.x%)\")  #> Value Cutoffs:  pct  by variable  pct  #> Descending By:  Factored Sorting  #> Denominators By Variables:  colnbr  #> # A tibble: 4 × 6 #>   label High       Low        Placebo    row_type group_level #> * <chr> <chr>      <chr>      <chr>      <chr>          <dbl> #> 1 N     1          1          1          N                  0 #> 2 ASIAN 1 (100.0%) 0          0          VALUE              0 #> 3 BLACK 0          1 (100.0%) 0          VALUE              0 #> 4 WHITE 0          0          1 (100.0%) VALUE              0  # Unique subject count of a variable by another variable freq(adsl      ,colvar = \"colnbr\"      ,rowvar = \"RACE\"      ,rowbyvar = \"SEX\"      ,statlist = statlist(\"n\")) #> Column Variables:  colnbr  #> Row By Variables Variables:  SEX  #> Row Variable:  RACE  #> Statistic Formatting:  n  #> Value Cutoffs:  pct  by variable  pct  #> Descending By:  Factored Sorting  #> Denominators By Variables:  SEX colnbr  #> # A tibble: 8 × 7 #>   label High  Low   Placebo row_type   group_level SEX   #> * <chr> <chr> <chr> <chr>   <chr>            <dbl> <fctnique subject count of a variable by another variable using colvar and # group to define the denominator freq(adsl      ,colvar = \"colnbr\"      ,rowvar = \"RACE\"      ,rowbyvar = \"SEX\"      ,statlist = statlist(\"n (x.x%)\", denoms_by = c(\"colnbr\", \"SEX\"))) #> Column Variables:  colnbr  #> Row By Variables Variables:  SEX  #> Row Variable:  RACE  #> Statistic Formatting:  n (x.x%) c(\"colnbr\", \"SEX\")  #> Value Cutoffs:  pct  by variable  pct  #> Descending By:  Factored Sorting  #> Denominators By Variables:  colnbr SEX  #> # A tibble: 8 × 7 #>   label High         Low          Placebo      row_type   group_level SEX   #> * <chr> <chr>        <chr>        <chr>        <chr>            <dbl> <fctut records where count meets threshold for any column freq(cdisc_adsl      ,rowvar = \"ETHNIC\"      ,colvar = \"TRT01P\"      ,statlist = statlist(\"n (x.x%)\")      ,cutoff = \"5\"      ,cutoff_stat = \"n\") #> Column Variables:  TRT01P  #> Row Variable:  ETHNIC  #> Statistic Formatting:  n (x.x%)  #> Value Cutoffs:  5  by variable  n  #> Descending By:  Factored Sorting  #> Denominators By Variables:  TRT01P  #> # A tibble: 1 × 6 #>   label            Placebo `Xanomeline High Dose` `Xanomeline Low Dose` row_type #> * <chr>            <chr>   <chr>                  <chr>                 <chr>    #> 1 NOT HISPANIC OR… 3 (60.… 5 (100.0%)             5 (100.0%)            VALUE    #> # ℹ 1 more variable: group_level <dbl>  # Cut records where count meets threshold for a specific column freq(cdisc_adsl      ,rowvar = \"ETHNIC\"      ,colvar = \"TRT01P\"      ,statlist = statlist(\"n (x.x%)\")      ,cutoff = \"Placebo >= 3\"      ,cutoff_stat = \"n\") #> Column Variables:  TRT01P  #> Row Variable:  ETHNIC  #> Statistic Formatting:  n (x.x%)  #> Value Cutoffs:  Placebo >= 3  by variable  n  #> Descending By:  Factored Sorting  #> Denominators By Variables:  TRT01P  #> # A tibble: 1 × 6 #>   label            Placebo `Xanomeline High Dose` `Xanomeline Low Dose` row_type #> * <chr>            <chr>   <chr>                  <chr>                 <chr>    #> 1 NOT HISPANIC OR… 3 (60.… 5 (100.0%)             5 (100.0%)            VALUE    #> # ℹ 1 more variable: group_level <dbl>  # Below illustrates how to make the same calls to freq() as above, using # table and column metadata.  # Unique subject count of a single variable table_metadata <- tibble::tribble(   ~anbr,  ~func,          ~df,   ~rowvar,      ~statlist,  ~colvar,   1,     \"freq\", \"cdisc_adsl\",  \"ETHNIC\",  statlist(\"n\"), \"TRT01PN\" )  generate_results(table_metadata,                  column_metadata = column_metadata,                  tbltype = \"type1\") #> # A tibble: 2 × 11 #>   label col1  col2  col3  row_type func   anbr indentme roworder newrows newpage #> * <chr> <chr> <chr> <chr> <chr>    <chr> <dbl>    <dbl>    <int>   <dbl>   <dbl> #> 1 HISP… 2     0     0     VALUE    freq      1        1        1       0       0 #> 2 NOT … 3     5     5     VALUE    freq      1        1        2       0       0  # Unique subject count and percent of a single variable table_metadata <- tibble::tribble(   ~anbr,  ~func,    ~df,     ~rowvar,     ~statlist,            ~colvar,   \"1\", \"freq\", \"cdisc_adsl\", \"ETHNIC\", statlist(c(\"N\", \"n (x.x%)\")),\"TRT01PN\" )  generate_results(table_metadata,                  column_metadata = column_metadata,                  tbltype = \"type1\") #> # A tibble: 3 × 11 #>   label col1  col2  col3  row_type func   anbr indentme roworder newrows newpage #> * <chr> <chr> <chr> <chr> <chr>    <chr> <dbl>    <dbl>    <int>   <dbl>   <dbl> #> 1 N     5     5     5     N        freq      1        1        1       0       0 #> 2 HISP… 2 (4… 0     0     VALUE    freq      1        2        2       0       0 #> 3 NOT … 3 (6… 5 (1… 5 (1… VALUE    freq      1        2        3       0       0  # Cut records where count meets threshold for any column table_metadata <- tibble::tibble(   anbr= \"1\", func = \"freq\", df = \"cdisc_adsl\", rowvar = \"ETHNIC\",   statlist = statlist(\"n (x.x%)\"), colvar = \"TRT01PN\", cutoff = 5,   cutoff_stat = \"n\")  generate_results(table_metadata,                  column_metadata = column_metadata,                  tbltype = \"type1\") #> # A tibble: 1 × 11 #>   label col1  col2  col3  row_type func   anbr indentme roworder newrows newpage #> * <chr> <chr> <chr> <chr> <chr>    <chr> <dbl>    <dbl>    <int>   <dbl>   <dbl> #> 1 NOT … 3 (6… 5 (1… 5 (1… VALUE    freq      1        1        1       0       0  # Cut records where count meets threshold for a specific column table_metadata <- tibble::tibble(   anbr= 1, func = \"freq\", df = \"cdisc_adsl\", rowvar = \"ETHNIC\",   statlist = statlist(\"n (x.x%)\"), colvar = \"TRT01PN\",   cutoff = 'col1 >= 3', cutoff_stat = \"n\")  generate_results(table_metadata,                  column_metadata = column_metadata,                  tbltype = \"type1\") #> # A tibble: 1 × 11 #>   label col1  col2  col3  row_type func   anbr indentme roworder newrows newpage #> * <chr> <chr> <chr> <chr> <chr>    <chr> <dbl>    <dbl>    <int>   <dbl>   <dbl> #> 1 NOT … 3 (6… 5 (1… 5 (1… VALUE    freq      1        1        1       0       0"},{"path":"/reference/generate_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Results using Table and Column Metadata — generate_results","title":"Generate Results using Table and Column Metadata — generate_results","text":"Generate Results using Table Column Metadata","code":""},{"path":"/reference/generate_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Results using Table and Column Metadata — generate_results","text":"","code":"generate_results(   table_metadata,   column_metadata_file = NULL,   column_metadata = NULL,   env = parent.frame(),   tbltype = NULL,   add_count = FALSE )"},{"path":"/reference/generate_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Results using Table and Column Metadata — generate_results","text":"table_metadata dataframe containing table metadata (see ?table_metadata details) column_metadata_file excel file data column_metadata. file read readxl::read_excel(). used column_metadata argument. Results dataframe containing column metadata passed tlgsetup (see tlgsetup() details). column_metadata dataframe passed , ignored. column_metadata dataframe containing column metadata. used place column_metadata_file. env environment find dataframe specified table metadata (defaults parent environment) tbltype used, used subset column_metadata based tbltype column. add_count Passed bind_table() counts added tablebyvars?","code":""},{"path":"/reference/generate_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Results using Table and Column Metadata — generate_results","text":"dataframe results","code":""},{"path":"/reference/gentlg.html","id":null,"dir":"Reference","previous_headings":"","what":"Output a tidytlg table — gentlg","title":"Output a tidytlg table — gentlg","text":"Generate output huxtable desired properties function call, huxtable can written RTF displayed HTML.","code":""},{"path":"/reference/gentlg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Output a tidytlg table — gentlg","text":"","code":"gentlg(   huxme = NULL,   tlf = \"Table\",   format = \"rtf\",   colspan = NULL,   idvars = NULL,   plotnames = NULL,   plotwidth = NULL,   plotheight = NULL,   wcol = 0.45,   orientation = \"portrait\",   opath = \".\",   title_file = NULL,   file = NULL,   title = NULL,   footers = NULL,   print.hux = TRUE,   watermark = NULL,   colheader = NULL,   pagenum = FALSE,   firstcolumnborder = FALSE,   header_pad = NULL,   colspan_line = NULL )"},{"path":"/reference/gentlg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Output a tidytlg table — gentlg","text":"huxme (optional) tables listings, list input dataframes containing columns interest. graphs, either NULL  list ggplot objects. tlf (optional) String, representing output choice. Choices \"Table\" \"Listing\" \"Figure\". Abbreviations allowed eg \"T\" Table. Strings can either upper- lowercase. (Default = \"Table\") format (optional) String, representing output format. Choices \"rtf\" \"html\". Strings can either upper- lowercase.(Default = \"rtf\") colspan (optional) list character vectors representing spanning headers used table listing. first vector represents top spanning header, etc. vector length equal number columns output data frame. spanning header identified use column name adjacent elements. idvars (optional) Character vector defining columns listing repeated values removed recursively. NULL column names used algorithm. NA, listing remains . plotnames (optional) Character vector containing names png files, extension incorporated figure outputs. png files need located path defined parameter opath. plotwidth (optional) Numerical value indicates plot width cm figure outputs. (Default = 6) plotheight (optional) Numerical value indicates plot height cm figure outputs. (Default = 5) wcol (optional) Can single numerical value represents width first column vector, specifying lengths columns final table listing. single numerical value used, taken column width first column. columns equally spaced across remainder available space. Alternatively, vector can used represent widths columns final output. order arguments needs correspond order columns huxme dataset, part formatting algorithms (eg anbr, roworder, newpage, newrow, indentme, boldme, by_value, by_order). sum widths vector needs less equal one. 'format=\"HTML\"' wcol can take one value, width first column. (Default = 0.45) orientation (optional) String: \"portrait\" \"landscape\". (Default = \"portrait\") opath (optional) File path pointing output files (including .png files graphs). (Default = \".\") title_file Excel file read readxl::read_excel() used title footers arugment. use title footers override values passed argument. file either xls xlsx file columns 'TABLE ID', 'IDENTIFIER', TEXT'. file read , subset tblid matches tlf argument, identifiers 'title' 'footnote' used populate table. file (required) String. Output identifier. File name adjusted lowercase - _ removed, affect table title. title (required) String. Title output. footers (optional) Character vector, containing strings footnotes included. print.hux (optional) Logical, indicating whether output printed RTF ('format' = \"rtf\") / displayed HTML ('format' = \"HTML\"). (Default = TRUE) Note RTF written using quick_rtf_jnj() function HTML displayed via huxtable::print_html function. watermark (optional) String containing desired watermark RTF outputs. colheader (optional) Character vector contains column labels table listing. Default uses column labels huxme. pagenum (optional) Logical. true page numbers added right side footer section format page x/y. (Default = FALSE) firstcolumnborder (optional) Logical. true page adds bottom border first column header rows (Default = FALSE) header_pad (optional) List. Adds header pad header rows list based index (including title), NULL pad added header rows  (Default = NULL) colspan_line (optional) List. Adds bottom border header rows list based index (including title), NULL border added header rows  (Default = NULL)","code":""},{"path":"/reference/gentlg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Output a tidytlg table — gentlg","text":"list formatted huxtables desired properties output RTF/HTML","code":""},{"path":"/reference/gentlg.html","id":"huxme-details","dir":"Reference","previous_headings":"","what":"Huxme Details","title":"Output a tidytlg table — gentlg","text":"tables listings, formatting output can dictated formatting columns (newrows, indentme, boldme, newpage), present input dataframe. final huxtable display columns input dataframe, except recognized formatting/sorting columns. tables, algorithm uses column label first column. remaining columns treated summary columns. graphs, can pass ggplot object directly huxme gentlg save png ggplot2::ggsave() output rtf.","code":""},{"path":"/reference/gentlg.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Output a tidytlg table — gentlg","text":"https://github.com/hughjonesd/huxtable","code":""},{"path":"/reference/gentlg.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Output a tidytlg table — gentlg","text":"Steven Haesendonckx shaesen2@.jnj.com Pelagia Alexandra Papadopoulou ppapadop@.jnj.com","code":""},{"path":"/reference/gentlg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Output a tidytlg table — gentlg","text":"","code":"final <- data.frame(   label = c(     \"Overall\", \"Safety Analysis Set\",     \"Any Adverse event{\\\\super a}\", \"- Serious Adverse Event\"   ),   Drug_A = c(\"\", \"40\", \"10 (25%)\", \"0\"),   Drug_B = c(\"\", \"40\", \"10 (25%)\", \"0\"),   anbr = c(1, 2, 3, 4),   roworder = c(1, 1, 1, 1),   boldme = c(1, 0, 0, 0),   newrows = c(0, 0, 1, 0),   indentme = c(0, 0, 0, 1),   newpage = c(0, 0, 0, 0) )  # Produce output in rtf format gentlg(   huxme = final,   wcol = c(0.70, 0.15, 0.15),   file = \"TSFAEX\",   title = \"This is Amazing Demonstration 1\",   footers = c(     \"Note: For demonstrative purposes only\",     \"{\\\\super a} Subjects are counted once for any given event.\"   ) ) #> Warning: Column header not used; 9 column header provided, but data contain 3 columns #> Warning: path[1]=\"-\": No such file or directory  # Pass in column headers instead of using variable name gentlg(   huxme = final,   wcol = c(0.70, 0.15, 0.15),   file = \"TSFAEX\",   colheader = c(\"\", \"Drug A\", \"Drug B\"),   title = \"This is Amazing Demonstration 1\",   footers = c(     \"Note: For demonstrative purposes only\",     \"{\\\\super a} Subjects are counted once for any given event.\"   ) ) #> Warning: path[1]=\"-\": No such file or directory # Use a watermark gentlg(   huxme = final,   wcol = c(0.70, 0.15, 0.15),   file = \"TSFAEX\",   colheader = c(\"\", \"Drug A\", \"Drug B\"),   title = \"This is Amazing Demonstration 1\",   footers = c(     \"Note: For demonstrative purposes only\",     \"{\\\\super a} Subjects are counted once for any given event.\"   ),   watermark = \"Confidential\" ) #> Warning: path[1]=\"-\": No such file or directory  # Produce output in HTML format hux <- gentlg(   huxme = final,   file = \"TSFAEX\",   colheader = c(\"\", \"Drug A\", \"Drug B\"),   title = \"This is Amazing Demonstration 1\",   footers = c(     \"Note: For demonstrative purposes only\",     \"{\\\\super a} Subjects are counted once for any given event.\"   ),   watermark = \"Confidential\",   format = \"HTML\",   print.hux = FALSE ) #> Warning: path[1]=\"-\": No such file or directory  # Export to HTML page huxtable::quick_html(hux, file = \"TSFAEX.html\", open = FALSE)  # clean up. file.remove(\"TSFAEX.html\", \"tsfaex.rtf\") #> [1] TRUE TRUE"},{"path":"/reference/nested_freq.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate nested count/percent for two or three levels — nested_freq","title":"Generate nested count/percent for two or three levels — nested_freq","text":"call freq() multiple times combine levels together. useful adverse event concomitant mediations.","code":""},{"path":"/reference/nested_freq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate nested count/percent for two or three levels — nested_freq","text":"","code":"nested_freq(   df,   denom_df = df,   colvar = NULL,   tablebyvar = NULL,   rowvar = NULL,   rowbyvar = NULL,   statlist = getOption(\"tidytlg.nested_freq.statlist.default\"),   decimal = 1,   cutoff = NULL,   cutoff_stat = \"pct\",   subset = TRUE,   descending_by = NULL,   display_missing = FALSE,   rowtext = NULL,   row_header = NULL,   .keep = TRUE,   .ord = FALSE,   ... )"},{"path":"/reference/nested_freq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate nested count/percent for two or three levels — nested_freq","text":"df (required) dataframe containing two levels summarize denom_df (optional) dataframe containing records use denominator (default = df) colvar (required) treatment variable within df use summarize tablebyvar (optional) repeat entire table variable within df. rowvar (required) nested levels separated star, example AEBODSYS*AEDECOD,  can handle three levels. rowbyvar (optional) repeat rowvar variable within df statlist (optional) count/percent type return (default = \"n (x.x)\") decimal (optional) decimal precision root level (default = 1) cutoff (optional) numeric value used cut data percentage threshold, column meets threshold entire record kept. cutoff_stat (optional) value cutoff , n pct. (default = 'pct') subset (optional) R expression passed dplyr::filter() function subset data.frame descending_by (optional) column columns sort descending values . Can also provide named list ascending order. ex. c(\"VarName1\" = \"asc\", \"VarName2\" = \"desc\") sort VarName1 ascending order VarName2 descending order. provided, columns sorted alphabetically. display_missing (optional) \"missing\" values displayed? (default = FALSE) rowtext (optional) character vector used rename label column. named, names give new level values replaced value. unnamed, table one row, rowtext rename label row. row_header (optional) character vector added table. .keep (optional) rowbyvar tablebyvar output table.  FALSE, rowbyvar still output label column. (default = TRUE) .ord ordering columns output table? useful table needs merged reordered way build. ... (optional) Named arguments included columns table.","code":""},{"path":"/reference/nested_freq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate nested count/percent for two or three levels — nested_freq","text":"dataframe nested results colvar optional tablebyvar. additional variable sets added support multiple requirements.  level variables (level1_, level2_, level3_) carry counts level every record.  allows easy sorting nested groups.  header variables (header1, header2, header3) flag header level ensure level header sorted top level.  n variables (\"n_\") provide numeric variable containing frequency colvar.  can used sort filter records.  pct variables (\"pct_\") provide numeric variable containing percentages colvar.  can used sort filter records.","code":""},{"path":"/reference/nested_freq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate nested count/percent for two or three levels — nested_freq","text":"","code":"adae <- data.frame(       SITEID = c(\"100\", \"100\", \"100\",\"200\", \"200\", \"200\"),       USUBJID = c(\"Demo1-101\", \"Demo1-102\", \"Demo1-103\",                   \"Demo1-104\", \"Demo1-105\", \"Demo1-106\"),       AEBODSYS = c(\"Cardiac disorders\", \"Cardiac disorders\",                    \"Respiratory, thoracic and mediastinal disorders\",                    \"Infections and infestations\",                    \"Skin and subcutaneous tissue disorders\",                    \"Infections and infestations\"),       AEDECOD = c(\"Arrhythmia supraventricular\", \"Cardiac failure\",                   \"Chronic obstructive pulmonary disease\", \"Pneumonia\",                   \"Pustular psoriasis\", \"Upper respiratory tract infection\"),       colnbr = structure(         c(1L, 2L, 3L, 1L,  2L, 3L),         .Label = c(\"Active\", \"Placebo\", \"Comparator\"),         class = \"factor\"       )     )  # Frequency and percent for two levels of nesting nested_freq(adae            ,colvar = \"colnbr\"            ,rowvar = \"AEBODSYS*AEDECOD\"            ,statlist = statlist(\"n (x.x%)\")) #> Column Variables:  colnbr  #> Row Variable:  AEBODSYS*AEDECOD  #> Statistic Formatting:  n (x.x%)  #> Value Cutoffs:  pct  by variable  pct  #> Descending By:  Factored Sorting  #> Denominators By Variables:  colnbr  #> # A tibble: 10 × 8 #>    label    Active Placebo Comparator row_type nested_level group_level AEBODSYS #>  * <chr>    <chr>  <chr>   <chr>      <chr>           <dbl>       <dbl> <fct>    #>  1 Cardiac… 1 (50… 1 (50.… 0          NESTED              0           0 Cardiac… #>  2 Arrhyth… 1 (50… 0       0          NESTED              1           0 Cardiac… #>  3 Cardiac… 0      1 (50.… 0          NESTED              1           0 Cardiac… #>  4 Infecti… 1 (50… 0       1 (50.0%)  NESTED              0           0 Infecti… #>  5 Pneumon… 1 (50… 0       0          NESTED              1           0 Infecti… #>  6 Upper r… 0      0       1 (50.0%)  NESTED              1           0 Infecti… #>  7 Respira… 0      0       1 (50.0%)  NESTED              0           0 Respira… #>  8 Chronic… 0      0       1 (50.0%)  NESTED              1           0 Respira… #>  9 Skin an… 0      1 (50.… 0          NESTED              0           0 Skin an… #> 10 Pustula… 0      1 (50.… 0          NESTED              1           0 Skin an…  # Frequency and percent for three levels of nesting (for illustrative # purpose) nested_freq(adae            ,colvar = \"colnbr\"           ,rowvar = \"SITEID*AEBODSYS*AEDECOD\"            ,statlist = statlist(\"n (x.x%)\")) #> Column Variables:  colnbr  #> Row Variable:  SITEID*AEBODSYS*AEDECOD  #> Statistic Formatting:  n (x.x%)  #> Value Cutoffs:  pct  by variable  pct  #> Descending By:  Factored Sorting  #> Denominators By Variables:  colnbr  #> # A tibble: 12 × 9 #>    label      Active Placebo Comparator row_type nested_level group_level SITEID #>  * <chr>      <chr>  <chr>   <chr>      <chr>           <dbl>       <dbl> <fct>  #>  1 100        1 (50… 1 (50.… 1 (50.0%)  NESTED              0           1 100    #>  2 Cardiac d… 1 (50… 1 (50.… 0          NESTED              1           1 100    #>  3 Arrhythmi… 1 (50… 0       0          NESTED              2           1 100    #>  4 Cardiac f… 0      1 (50.… 0          NESTED              2           1 100    #>  5 Respirato… 0      0       1 (50.0%)  NESTED              1           1 100    #>  6 Chronic o… 0      0       1 (50.0%)  NESTED              2           1 100    #>  7 200        1 (50… 1 (50.… 1 (50.0%)  NESTED              0           1 200    #>  8 Infection… 1 (50… 0       1 (50.0%)  NESTED              1           1 200    #>  9 Pneumonia  1 (50… 0       0          NESTED              2           1 200    #> 10 Upper res… 0      0       1 (50.0%)  NESTED              2           1 200    #> 11 Skin and … 0      1 (50.… 0          NESTED              1           1 200    #> 12 Pustular … 0      1 (50.… 0          NESTED              2           1 200    #> # ℹ 1 more variable: AEBODSYS <fct>  # Cut records where pct meets threshold for a any column nested_freq(cdisc_adae             ,colvar = \"TRTA\"             ,rowvar = \"AEBODSYS*AEDECOD\"             ,statlist = statlist(\"n (x.x%)\", distinct = TRUE)             ,cutoff = 2             ,cutoff_stat = \"n\") #> Column Variables:  TRTA  #> Row Variable:  AEBODSYS*AEDECOD  #> Statistic Formatting:  n (x.x%) TRUE  #> Value Cutoffs:  2  by variable  n  #> Descending By:  Factored Sorting  #> Denominators By Variables:  TRTA  #> # A tibble: 7 × 8 #>   label            Placebo `Xanomeline High Dose` `Xanomeline Low Dose` row_type #> * <chr>            <chr>   <chr>                  <chr>                 <chr>    #> 1 GENERAL DISORDE… 2 (40.… 5 (100.0%)             3 (75.0%)             NESTED   #> 2 APPLICATION SIT… 1 (20.… 4 (80.0%)              1 (25.0%)             NESTED   #> 3 APPLICATION SIT… 1 (20.… 5 (100.0%)             2 (50.0%)             NESTED   #> 4 FATIGUE          0       2 (40.0%)              1 (25.0%)             NESTED   #> 5 SKIN AND SUBCUT… 2 (40.… 2 (40.0%)              3 (75.0%)             NESTED   #> 6 ERYTHEMA         1 (20.… 0                      3 (75.0%)             NESTED   #> 7 PRURITUS         1 (20.… 0                      2 (50.0%)             NESTED   #> # ℹ 3 more variables: nested_level <dbl>, group_level <dbl>, AEBODSYS <fct>  # Cut records where pct meets threshold for a specific column nested_freq(cdisc_adae             ,rowvar = \"AEBODSYS*AEDECOD\"             ,colvar = \"TRTAN\"             ,statlist = statlist(\"n (x.x%)\", distinct = TRUE)             ,cutoff = \"54 >= 2\"             ,cutoff_stat = \"n\") #> Column Variables:  TRTAN  #> Row Variable:  AEBODSYS*AEDECOD  #> Statistic Formatting:  n (x.x%) TRUE  #> Value Cutoffs:  54 >= 2  by variable  n  #> Descending By:  Factored Sorting  #> Denominators By Variables:  TRTAN  #> # A tibble: 5 × 8 #>   label             `0`   `54`  `81`  row_type nested_level group_level AEBODSYS #> * <chr>             <chr> <chr> <chr> <chr>           <dbl>       <dbl> <fct>    #> 1 GENERAL DISORDER… 2 (4… 3 (7… 5 (1… NESTED              0           0 GENERAL… #> 2 APPLICATION SITE… 1 (2… 2 (5… 5 (1… NESTED              1           0 GENERAL… #> 3 SKIN AND SUBCUTA… 2 (4… 3 (7… 2 (4… NESTED              0           0 SKIN AN… #> 4 ERYTHEMA          1 (2… 3 (7… 0     NESTED              1           0 SKIN AN… #> 5 PRURITUS          1 (2… 2 (5… 0     NESTED              1           0 SKIN AN…  # Frequency and percent for two levels of nesting and sort by descending # active nested_freq(adae             ,colvar = \"colnbr\"             ,rowvar = \"AEBODSYS*AEDECOD\"             ,statlist = statlist(\"n (x.x%)\")             ,descending = \"Active\") #> Column Variables:  colnbr  #> Row Variable:  AEBODSYS*AEDECOD  #> Statistic Formatting:  n (x.x%)  #> Value Cutoffs:  pct  by variable  pct  #> Descending By:  Active  #> Denominators By Variables:  colnbr  #> # A tibble: 10 × 8 #>    label    Active Placebo Comparator row_type nested_level group_level AEBODSYS #>  * <chr>    <chr>  <chr>   <chr>      <chr>           <dbl>       <dbl> <fct>    #>  1 Cardiac… 1 (50… 1 (50.… 0          NESTED              0           0 Cardiac… #>  2 Arrhyth… 1 (50… 0       0          NESTED              1           0 Cardiac… #>  3 Cardiac… 0      1 (50.… 0          NESTED              1           0 Cardiac… #>  4 Infecti… 1 (50… 0       1 (50.0%)  NESTED              0           0 Infecti… #>  5 Pneumon… 1 (50… 0       0          NESTED              1           0 Infecti… #>  6 Upper r… 0      0       1 (50.0%)  NESTED              1           0 Infecti… #>  7 Respira… 0      0       1 (50.0%)  NESTED              0           0 Respira… #>  8 Chronic… 0      0       1 (50.0%)  NESTED              1           0 Respira… #>  9 Skin an… 0      1 (50.… 0          NESTED              0           0 Skin an… #> 10 Pustula… 0      1 (50.… 0          NESTED              1           0 Skin an…  # Below illustrates how make the same calls to nested_freq() as above, using # table and # column metadata along with generate_results().  column_metadata <- tibble::tribble(  ~tbltype, ~coldef,   ~decode,  \"type1\",     \"1\", \"Placebo\",  \"type1\",     \"2\",     \"Low\",  \"type1\",     \"3\",    \"High\" )  # Frequency and percent for two levels of nesting table_metadata <- tibble::tribble(  ~anbr,         ~func,    ~df,       ~rowvar, ~tbltype,  ~colvar, ~statlist,  \"1\", \"nested_freq\", \"cdisc_adae\", \"AEBODSYS*AEDECOD\",  \"type1\",  \"TRTP\",  statlist(\"n (x.x%)\") ) #generate_results(table_metadata, #column_metadata_file = tidytlg_metadata(path)   # Frequency and percent for three levels of nesting (for illustrative purpose) table_metadata <- tibble::tribble(  ~anbr,         ~func,    ~df,                 ~rowvar, ~tbltype,  ~colvar,  ~statlist,  \"1\", \"nested_freq\", \"cdisc_adae\", \"SITEID*AEBODSYS*AEDECOD\",\"type1\",  \"TRTP\", statlist(\"n (x.x%)\") ) # Commented out because it takes too long # generate_results(table_metadata, column_metadata)  #Cut records where pct meets threshold for a any column column_metadata <- tibble::tribble(  ~tbltype, ~coldef,   ~decode,  \"type2\",     \"1\", \"Placebo\",  \"type2\",     \"2\",  \"Active\" ) table_metadata <- tibble::tibble(  anbr = \"1\", func = \"nested_freq\", df= \"cdisc_adae\",  rowvar = \"AEBODSYS*AEDECOD\",  tbltype = \"type2\", colvar = \"TRTP\", statlist = statlist(\"n (x.x%)\"),  dotdotdot = \"cutoff = 5\" ) #generate_results(table_metadata, # column_metadata_file = tidytlg_metadata(path)  # Cut records where pct meets threshold for a specific column table_metadata <- tibble::tibble(  anbr = \"1\", func = \"nested_freq\", df= \"cdisc_adae\",  rowvar = \"AEBODSYS*AEDECOD\",  tbltype = \"type2\", colvar = \"TRTP\", statlist = statlist(\"n (x.x%)\"),  dotdotdot = \"cutoff = 'col1 >= 5'\" ) #generate_results(table_metadata, #column_metadata_file = tidytlg_metadata(path)  # Frequency and percent for two levels of nesting and sort by descending col1 table_metadata <- tibble::tibble(  anbr = \"1\", func = \"nested_freq\", df= \"cdisc_adae\",  rowvar = \"AEBODSYS*AEDECOD\",  tbltype = \"type2\", colvar = \"TRTP\", statlist = statlist(\"n (x.x%)\"),  dotdotdot = \"descending = 'col1'\" ) #generate_results(table_metadata, #column_metadata_file = tidytlg_metadata(path)"},{"path":"/reference/replace_na_with_blank.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace NA with ","title":"Replace NA with ","text":"Used swap \"\" variables headers sort correctly top","code":""},{"path":"/reference/replace_na_with_blank.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace NA with ","text":"","code":"replace_na_with_blank(x)"},{"path":"/reference/replace_na_with_blank.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace NA with ","text":"x variable check NA replace \"\".","code":""},{"path":"/reference/replace_na_with_blank.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace NA with ","text":"x NA's replaced \"\".  Factors add \"\" first level.","code":""},{"path":"/reference/replace_na_with_blank.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Replace NA with ","text":"","code":"replace_na_with_blank(c(\"a\", \"b\", NA)) #> [1] \"a\" \"b\" \"\"   replace_na_with_blank(factor(c(\"a\", \"b\", NA), levels = c(\"a\", \"b\"))) #> [1] a b   #> Levels:  a b"},{"path":"/reference/rmdpstitle.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Titles and Footnotes for all TLGs or one specific TLG — rmdpstitle","title":"Get Titles and Footnotes for all TLGs or one specific TLG — rmdpstitle","text":"Get Titles Footnotes TLGs one specific TLG","code":""},{"path":"/reference/rmdpstitle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Titles and Footnotes for all TLGs or one specific TLG — rmdpstitle","text":"","code":"rmdpstitle(   df,   tblid,   idvar = \"tblid\",   identifier = \"identifier\",   text = \"text\" )"},{"path":"/reference/rmdpstitle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Titles and Footnotes for all TLGs or one specific TLG — rmdpstitle","text":"df dataframe three variables; table name, row identifier (TITLE FOOTNOTEn), title/footnote text display tblid character vector containing table id, optional, used subset df specific table (defaults tblid) idvar character vector containing variable df contains table id identifier character vector containing variable name df contains record identifier (defaults \"identifier\") text character vector containing variable name df contains title footnote text (defaults \"text\")","code":""},{"path":"/reference/rmdpstitle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Titles and Footnotes for all TLGs or one specific TLG — rmdpstitle","text":"list length two, first element contains titles tibble second contains footnotes list","code":""},{"path":"/reference/rmdpstitle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Titles and Footnotes for all TLGs or one specific TLG — rmdpstitle","text":"","code":"tblid <- \"TSIDEM01\"  titles <-tibble::tribble(   ~tblid, ~identifier,                  ~text,   \"TSIDEM01\",     \"TITLE\", \"Demographics Example\",   \"TSIDEM01\", \"FOOTNOTE1\",    \"Example footnote.\" )  title_foot <- rmdpstitle(titles, tblid)  title_foot[[1]] #> # A tibble: 1 × 1 #>   text                 #>   <chr>                #> 1 Demographics Example title_foot[[2]] #> $`1` #> [1] \"Example footnote.\" #>"},{"path":"/reference/roundSAS.html","id":null,"dir":"Reference","previous_headings":"","what":"SAS rounding in R — roundSAS","title":"SAS rounding in R — roundSAS","text":"roundSAS alternative rounding function, ensuring decimals equal bigger 5 rounded upwards nearest number returned character vector.","code":""},{"path":"/reference/roundSAS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SAS rounding in R — roundSAS","text":"","code":"roundSAS(x, digits = 0, as_char = FALSE, na_char = NULL)"},{"path":"/reference/roundSAS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SAS rounding in R — roundSAS","text":"x Numeric vector. digits integer specifying number decimal places displayed rounding. Default 0. as_char logical value indicating conversion rounded numerical vector character vector; default FALSE na_char character string indicating missing value; specified, \"NA\" created","code":""},{"path":"/reference/roundSAS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SAS rounding in R — roundSAS","text":"character vector rounded values","code":""},{"path":"/reference/roundSAS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"SAS rounding in R — roundSAS","text":"midpoint decimal place (e.g. 0.5, 1.5), round function R rounds nearest even number (.e. 0.5 rounded 0; 1.5 rounded 2), whereas SAS rounds nearest number (.e. 0.5 rounded 1; 1.5 rounded 2). roundSAS function alternative rounding function R ensures rounding nearest number, done SAS. roundSAS comes Stack Overflow post https://stackoverflow.com/questions/12688717/round---5","code":""},{"path":"/reference/roundSAS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SAS rounding in R — roundSAS","text":"","code":"### input data vector with midpoint decimals x <- c(-2.5, -1.5, -0.5, 0.5, 1.5, 2.5)  ### rounds to integer roundSAS(x, digits = 0) #> [1] -3 -2 -1  1  2  3  ### input data vector with a missing value y <- c(8.65, 8.75, NA, 9.85, 9.95)  ### rounds to tenths and label the missing value with \"NE\" roundSAS(y, digits = 1, as_char = TRUE, na_char = \"NE\") #> [1] \"8.7\"  \"8.8\"  \"NE\"   \"9.9\"  \"10.0\""},{"path":"/reference/spanning_headers.html","id":null,"dir":"Reference","previous_headings":"","what":"Spanning headers for outputs — spanning_headers","title":"Spanning headers for outputs — spanning_headers","text":"create list object passed gentlg() can create many spanning headers like, just add variables prefixed span column metadata.","code":""},{"path":"/reference/spanning_headers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spanning headers for outputs — spanning_headers","text":"","code":"spanning_headers(column_metadata)"},{"path":"/reference/spanning_headers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spanning headers for outputs — spanning_headers","text":"column_metadata dataframe containing column metadata passed tlgsetup() (see tlgsetup() details)","code":""},{"path":"/reference/spanning_headers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spanning headers for outputs — spanning_headers","text":"List character vectors containing column headers output.","code":""},{"path":"/reference/spanning_headers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spanning headers for outputs — spanning_headers","text":"","code":"column_metadata <-   tibble::tribble(     ~tbltype, ~coldef, ~decode,                ~span1,     \"type1\",  \"0\",     \"Placebo\",              \"\",     \"type1\",  \"54\",    \"Low Dose\",             \"Xanomeline\",     \"type1\",  \"81\",    \"High Dose\",            \"Xanomeline\",     \"type1\",  \"54+81\", \"Total Xanomeline\",     \"\"   )  spanning_headers(column_metadata) #> $span1 #> [1] \"\"           \"\"           \"Xanomeline\" \"Xanomeline\" \"\"           #>"},{"path":"/reference/statlist.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a statlist interface for a table — statlist","title":"Create a statlist interface for a table — statlist","text":"statlist interface presentation data tidytlg table.","code":""},{"path":"/reference/statlist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a statlist interface for a table — statlist","text":"","code":"statlist(stats, ...)"},{"path":"/reference/statlist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a statlist interface for a table — statlist","text":"stats (required) character vector statistics display table. ... (optional) Additional configuration stats. See sections allowable arguments.","code":""},{"path":"/reference/statlist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a statlist interface for a table — statlist","text":"statlist object can passed 'statlist' argument freq, nested_freq, univar.","code":""},{"path":"/reference/statlist.html","id":"statlists-for-freq-and-nested-freq-","dir":"Reference","previous_headings":"","what":"Statlists for freq() and nested_freq()","title":"Create a statlist interface for a table — statlist","text":"freq() statlists can composed n(count), N(denominator), x.x(percentage, formatted without percent sign). Denominators include missing values 'display_missing' argument TRUE, otherwise excluded. can arranged following ways: n n/N n (x.x) n (x.x%) n/N (x.x) n/N (x.x%) following configurations supported: denoms_by - Controls groupings variables define denominator. Variables passed quoted vector distinct - boolean value. numerator reflect distinct USUBJIDs event counts. Defaults TRUE captures distinct subjects. distinct_by - character value used select variable used \"distinct\" freq tables. Defaults USUBJID. zero_denom - string display records found entire denominator group. Defaults \"-\" zero_n - string display records found numerator. Defaults \"0\".","code":""},{"path":"/reference/statlist.html","id":"statlists-for-univar-statlists","dir":"Reference","previous_headings":"","what":"Statlists for univar statlists","title":"Create a statlist interface for a table — statlist","text":"N SUM MEAN GeoMEAN SD SE CV GSD GSE MEANSD MEANSE MEDIAN MIN MAX RANGE Q1 Q3 IQRANGE MEDRANGE MEDIQRANGE MEAN_CI GeoMEAN_CI GeoMEAN: Geometric Mean, CV: Coefficient Variation, GSD: Geometric Std. Dev., GSE: Geometric Std. Error, MEAN_CI: Mean (95% C..), GeoMEAN_CI: Geometric Mean (95% C..). calculating geometric statistics, zero values inputs, zero values excluded calculating geometric statistics.","code":""},{"path":"/reference/statlist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a statlist interface for a table — statlist","text":"","code":"freq(   mtcars,   colvar = \"gear\",   rowvar = \"cyl\",   rowbyvar = \"am\",   statlist = statlist(\"n/N (x.x)\",                       distinct = FALSE,                       denoms_by = c(\"gear\", \"am\"),                       zero_denom = \"_0_\")   ) #> Column Variables:  gear  #> Row By Variables Variables:  am  #> Row Variable:  cyl  #> Statistic Formatting:  n/N (x.x) FALSE c(\"gear\", \"am\") _0_  #> Value Cutoffs:  pct  by variable  pct  #> Descending By:  Factored Sorting  #> Denominators By Variables:  gear am  #> # A tibble: 8 × 7 #>   label `3`            `4`          `5`          row_type   group_level am    #> * <chr> <chr>          <chr>        <chr>        <chr>            <dbl> <fct> #> 1 0     \"\"             \"\"           \"\"           BY_HEADER1           0 0     #> 2 4     \"1/15 (6.7)\"   \"2/4 (50.0)\" \"_0_\"        VALUE                0 0     #> 3 6     \"2/15 (13.3)\"  \"2/4 (50.0)\" \"_0_\"        VALUE                0 0     #> 4 8     \"12/15 (80.0)\" \"0/4\"        \"_0_\"        VALUE                0 0     #> 5 1     \"\"             \"\"           \"\"           BY_HEADER1           0 1     #> 6 4     \"_0_\"          \"6/8 (75.0)\" \"2/5 (40.0)\" VALUE                0 1     #> 7 6     \"_0_\"          \"2/8 (25.0)\" \"1/5 (20.0)\" VALUE                0 1     #> 8 8     \"_0_\"          \"0/8\"        \"2/5 (40.0)\" VALUE                0 1"},{"path":"/reference/table_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Metadata describing the data, functions and arguments needed to produce your results. — table_metadata","title":"Metadata describing the data, functions and arguments needed to produce your results. — table_metadata","text":"Metadata describing data, functions arguments needed produce results.","code":""},{"path":"/reference/table_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metadata describing the data, functions and arguments needed to produce your results. — table_metadata","text":"","code":"table_metadata"},{"path":"/reference/table_metadata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Metadata describing the data, functions and arguments needed to produce your results. — table_metadata","text":"data frame one row per function call 16 variables: func name function wish call df data frame pass function call subset filter df records, passed directly filter, ex. \"AESER == 'Y'\" rowvar variable summarized pass function call rowtext row label text display table row_header header text display row summary statlist list statistics analysis, see individual functions available per function (eg. \"N, n (x.x)\") colvar variable used determine columns table decimal decimal precision rowbyvar repeat rowvar summary variable/s, comma separated multiple (eg. \"ETHNIC, AGEGR1\") tablebyvar repeat entire table summary variable/s, comma separated multiple (eg. \"ETHNIC, AGEGR1\") denom_df used set denominators df contain required records","code":""},{"path":"/reference/tidytlg.html","id":null,"dir":"Reference","previous_headings":"","what":"tidytlg: A package for producing tables, listings, and graphs (TLGs) using tidyverse packages. — tidytlg","title":"tidytlg: A package for producing tables, listings, and graphs (TLGs) using tidyverse packages. — tidytlg","text":"tidytlg package provide set function allowing produce TLGs using table metadata.","code":""},{"path":"/reference/tidytlg.html","id":"tidytlg-options","dir":"Reference","previous_headings":"","what":"tidytlg Options","title":"tidytlg: A package for producing tables, listings, and graphs (TLGs) using tidyverse packages. — tidytlg","text":"tidytlg.row_type.levels - values row_type respective levels. Default: c(\"TABLE_BY_HEADER\", \"BY_HEADER1\", \"BY_HEADER2\", \"BY_HEADER3\", \"BY_HEADER4\", \"BY_HEADER5\", \"HEADER\", \"N\", \"VALUE\", \"NESTED\") tidytlg.fontsize.title - Font size titles points. Default: 10 tidytlg.fontsize.table.footnote - Font size footnotes points. tables. Default: 9 tidytlg.fontsize.listing.footnote - Font size footnotes points. listings. Default: 8 tidytlg.fontsize.graph.footnote - Font size footnotes points. graphs. Default: 8 tidytlg.fontsize.table - Font size tables points. Default: 9 tidytlg.fontsize.graph - Font size graphs points. Default: 10 tidytlg.fontsize.listing - Font size listings poins. Default: 8 tidytlg.right.padding - Amount right padding cells points. Default: 1 tidytlg.left.padding - Amount left padding cells points. Default: 1 tidytlg.stat_labels - Labels used summary statistic output table.  need available statistics option changed! tidytlg.precision.extra - Value added summary statistic calculating precision.  used make different statistics different precision needed tidytlg.nested_freq.statlist.default - Default statlist object nested_freq tables. Default: statlist(\"n (x.x)\") tidytlg.univar.statlist.default - Default statlist object univar tables. Default: statlist(c(\"N\", \"MEANSD\", \"MEDIAN\", \"RANGE\", \"IQRANGE\")) tidytlg.freq.statlist.default - Default statlist object freq tables. Default: statlist(\"n (x.x)\") tidytlg.stat_labels - data.frame controlling stats labeled univar table. See 'Default Stat Labels' section defaults. tidytlg.denoms.message - boolean, message print detailing denominators ?","code":""},{"path":[]},{"path":[]},{"path":"/reference/tidytlg.html","id":"updating-options","dir":"Reference","previous_headings":"","what":"Updating Options","title":"tidytlg: A package for producing tables, listings, and graphs (TLGs) using tidyverse packages. — tidytlg","text":"single session, option can changed option(<optionToChange> = <NewValue>) change option single projects across sessions projects, place options update .Rprofile project directory. change option user across sessions, place options update .Rprofile file users home directory. change option users R environment, place options update .Rprofile.site file R home directory.","code":""},{"path":[]},{"path":"/reference/tidytlg.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"tidytlg: A package for producing tables, listings, and graphs (TLGs) using tidyverse packages. — tidytlg","text":"Maintainer: Eli Miller eli.miller@atorusresearch.com (ORCID) Authors: Nicholas Masel nmasel@.jnj.com Steven Haesendonckx shaesen2@.jnj.com Pelagia Alexandra Papadopoulou ppapadop@.jnj.com Sheng-Wei Wang swang69@.jnj.com Nathan Kosiba nkosiba@.jnj.com (ORCID) Aidan Ceney aceney@.jnj.com (ORCID) contributors: Janssen R&D [copyright holder, funder] David Hugh-Jones (Author included huxtable library) [copyright holder]","code":""},{"path":"/reference/tlgsetup.html","id":null,"dir":"Reference","previous_headings":"","what":"Setup data to support the specified column type — tlgsetup","title":"Setup data to support the specified column type — tlgsetup","text":"tlgsetup useful pre-processing total columns columns composed columns. tlgsetup called internally generate_results() can run manually custom tables.","code":""},{"path":"/reference/tlgsetup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setup data to support the specified column type — tlgsetup","text":"","code":"tlgsetup(   df,   var,   column_metadata_file = NULL,   column_metadata = NULL,   tbltype = NULL )"},{"path":"/reference/tlgsetup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setup data to support the specified column type — tlgsetup","text":"df dataframe records analysis var character vector identifies numeric column/treatment variable column_metadata_file file containing column metadata. Read readxl::read_excel(). column_metadata dataframe passed , ignored. column_metadata dataframe containing column metadata. used place column_metadata_file. tbltype value used subset column_metadata, file requirements needed bind data table.","code":""},{"path":"/reference/tlgsetup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Setup data to support the specified column type — tlgsetup","text":"dataframe observations added support column type well factor variable colnbr used new column summary variable. Regardless coldef exists data, column exist table.","code":""},{"path":"/reference/tlgsetup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Setup data to support the specified column type — tlgsetup","text":"","code":"df <-   tibble::tribble(   ~TRT01AN, ~USUBJID,   0,        \"A\",  54,       \"B\",  81,       \"C\" )  tlgsetup(df, \"TRT01AN\", column_metadata = column_metadata) #> # A tibble: 16 × 4 #>    tbltype colnbr TRT01AN USUBJID #>    <chr>   <fct>  <chr>   <chr>   #>  1 type1   col1   0       A       #>  2 type1   col2   54      B       #>  3 type1   col3   81      C       #>  4 type2   col4   0       A       #>  5 type2   col5   54      B       #>  6 type2   col6   81      C       #>  7 type2   col7   54      B       #>  8 type2   col7   81      C       #>  9 type3   col8   0       A       #> 10 type3   col9   54      B       #> 11 type3   col10  81      C       #> 12 type3   col11  54      B       #> 13 type3   col11  81      C       #> 14 type3   col12  0       A       #> 15 type3   col12  54      B       #> 16 type3   col12  81      C        # Using a dataframe of column metadata column_metadata <-   tibble::tribble(     ~tbltype, ~coldef, ~decode,                ~span1,     \"type1\",  \"0\",     \"Placebo\",              \"\",     \"type1\",  \"54\",    \"Low Dose\",             \"Xanomeline\",     \"type1\",  \"81\",    \"High Dose\",            \"Xanomeline\",     \"type1\",  \"54+81\", \"Total Xanomeline\",     \"\"   )  tlgsetup(df, \"TRT01AN\", column_metadata = column_metadata) #> # A tibble: 5 × 4 #>   tbltype colnbr TRT01AN USUBJID #>   <chr>   <fct>  <chr>   <chr>   #> 1 type1   col1   0       A       #> 2 type1   col2   54      B       #> 3 type1   col3   81      C       #> 4 type1   col4   54      B       #> 5 type1   col4   81      C"},{"path":"/reference/univar.html","id":null,"dir":"Reference","previous_headings":"","what":"Descriptive statistics — univar","title":"Descriptive statistics — univar","text":"Univariate statitstics variables treatment /group.","code":""},{"path":"/reference/univar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Descriptive statistics — univar","text":"","code":"univar(   df,   colvar = NULL,   tablebyvar = NULL,   rowvar = NULL,   rowbyvar = NULL,   statlist = getOption(\"tidytlg.univar.statlist.default\"),   decimal = 1,   precisionby = NULL,   precisionon = NULL,   wide = FALSE,   alpha = 0.05,   rowtext = NULL,   row_header = NULL,   .keep = TRUE,   .ord = FALSE,   ... )"},{"path":"/reference/univar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Descriptive statistics — univar","text":"df (required) dataframe containing records summarize treatment colvar (required) character vector treatment variable within dataframe tablebyvar (optional) repeat entire table variable within df rowvar (required) character vector variable summarize within dataframe rowbyvar (optional) repeat rowvar variable within df statlist (optional) statlist object stats keep (default = statlist(c(\"N\", \"MEANSD\", \"MEDIAN\", \"RANGE\", \"IQRANGE\"))) decimal (optional) decimal precision root level, using presisionby used base decimal cap (default = 1) precisionby (optional) vector variable(s) use calculating parameter based precision precisionon (optional) variable use calculating parameter based precision. precisionby specified precisionon default rowvar wide (optional) logical indicating convert labels column columns labels (default = FALSE) alpha (optional) alpha level 2-sided confidence interval (default = 0.05) rowtext (optional) text string replace label value table. Useful tables single row. row_header (optional) row add header table. .keep (optional) rowbyvar tablebyvar output table.  FALSE, rowbyvar still output label column. (default = TRUE) .ord ordering columns output table? useful table needs merged reordered way build. ... (optional) Named arguments included columns table.","code":""},{"path":"/reference/univar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Descriptive statistics — univar","text":"dataframe results","code":""},{"path":"/reference/univar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Descriptive statistics — univar","text":"","code":"adsl <-   structure(     list(       USUBJID = c(\"DEMO-101\", \"DEMO-102\", \"DEMO-103\", \"DEMO-104\",                   \"DEMO-105\", \"DEMO-106\"),       AGE = c(59, 51, 57, 65, 21, 80),       SEX = c(\"F\", \"M\", \"F\", \"M\", \"F\", \"M\"),       WEIGHTBL = c(83.6, 75, 84, 90, 65, 70),       colnbr = structure(         c(1L, 3L, 2L, 2L, 3L, 1L),         .Label = c(\"Placebo\", \"Low\", \"High\"),         class = \"factor\"       )     ),     row.names = c(NA, 6L),     class = \"data.frame\"   )  # N, Mean(SD), Median, Range, IQ Range for a rowvar by colvar univar(adsl        ,colvar = \"colnbr\"        ,rowvar = \"AGE\") #> Column Variables:  colnbr  #> Row Variable:  AGE  #> Statistic Formatting:  N MEANSD MEDIAN RANGE IQRANGE  #> Statistic Presentation  #> Decimal Precision:  1  #> Alpha for CI Intervals:  0.05  #> Parameter Based PrecisionL  None  #> # A tibble: 5 × 6 #>   label     Placebo        Low            High           row_type group_level #> * <chr>     <chr>          <chr>          <chr>          <chr>          <dbl> #> 1 N         2              2              2              N                  0 #> 2 Mean (SD) 69.50 (14.849) 61.00 (5.657)  36.00 (21.213) VALUE              0 #> 3 Median    69.50          61.00          36.00          VALUE              0 #> 4 Range     (59.0; 80.0)   (57.0; 65.0)   (21.0; 51.0)   VALUE              0 #> 5 IQ range  (59.00; 80.00) (57.00; 65.00) (21.00; 51.00) VALUE              0  # N and Mean for a rowvar by colvar univar(adsl        ,colvar   = \"colnbr\"        ,rowvar   = \"AGE\"        ,statlist = statlist(c(\"N\", \"MEAN\"))) #> Column Variables:  colnbr  #> Row Variable:  AGE  #> Statistic Formatting:  N MEAN  #> Statistic Presentation  #> Decimal Precision:  1  #> Alpha for CI Intervals:  0.05  #> Parameter Based PrecisionL  None  #> # A tibble: 2 × 6 #>   label Placebo Low   High  row_type group_level #> * <chr> <chr>   <chr> <chr> <chr>          <dbl> #> 1 N     2       2     2     N                  0 #> 2 Mean  69.50   61.00 36.00 VALUE              0  # N and Mean for a rowvar by colvar and a by variable univar(adsl        ,colvar   = \"colnbr\"        ,rowvar   = \"AGE\"        ,rowbyvar = \"SEX\"        ,statlist = statlist(c(\"N\", \"MEAN\"))) #> Column Variables:  colnbr  #> Row By Variables Variables:  SEX  #> Row Variable:  AGE  #> Statistic Formatting:  N MEAN  #> Statistic Presentation  #> Decimal Precision:  1  #> Alpha for CI Intervals:  0.05  #> Parameter Based PrecisionL  None  #> # A tibble: 6 × 7 #>   SEX   label Placebo Low     High    row_type   group_level #> * <chr> <chr> <chr>   <chr>   <chr>   <chr>            <dbl> #> 1 F     F     \"\"      \"\"      \"\"      BY_HEADER1           0 #> 2 F     N     \"1\"     \"1\"     \"1\"     N                    0 #> 3 F     Mean  \"59.00\" \"57.00\" \"21.00\" VALUE                0 #> 4 M     M     \"\"      \"\"      \"\"      BY_HEADER1           0 #> 5 M     N     \"1\"     \"1\"     \"1\"     N                    0 #> 6 M     Mean  \"80.00\" \"65.00\" \"51.00\" VALUE                0  # Below illustrates how make the same calls to univar() as above, using table # and column metadata # along with generate_results().  column_metadata <- tibble::tribble(   ~tbltype, ~coldef,   ~decode,   \"type1\",     \"0\",  \"Placebo\",   \"type1\",     \"54\",     \"Low\",   \"type1\",     \"81\",    \"High\" )  # N, Mean(SD), Median, Range, IQ Range for a rowvar by colvar table_metadata <- tibble::tribble(   ~anbr,  ~func,    ~df, ~rowvar, ~tbltype, ~colvar,   \"1\", \"univar\", \"cdisc_adae\",   \"AGE\",  \"type1\", \"TRTA\" )  generate_results(table_metadata, column_metadata = column_metadata,                  tbltype = \"type1\") #> # A tibble: 5 × 12 #>   label col1  col2  col3  row_type func  tbltype  anbr indentme roworder newrows #> * <chr> <chr> <chr> <chr> <chr>    <chr> <chr>   <dbl>    <dbl>    <int>   <dbl> #> 1 N     0     0     0     N        univ… type1       1        1        1       0 #> 2 Mean… -     -     -     VALUE    univ… type1       1        2        2       0 #> 3 Medi… -     -     -     VALUE    univ… type1       1        2        3       0 #> 4 Range (-; … (-; … (-; … VALUE    univ… type1       1        2        4       0 #> 5 IQ r… (-; … (-; … (-; … VALUE    univ… type1       1        2        5       0 #> # ℹ 1 more variable: newpage <dbl>   # N and Mean for a rowvar by colvar table_metadata <- tibble::tribble(   ~anbr,  ~func,    ~df, ~rowvar, ~tbltype,  ~colvar, ~statlist,   \"1\", \"univar\", \"cdisc_adae\",   \"AGE\",  \"type1\", \"TRTA\",   statlist(c(\"N\",\"MEAN\")) )  generate_results(table_metadata, column_metadata = column_metadata,                  tbltype = \"type1\") #> # A tibble: 2 × 12 #>   label col1  col2  col3  row_type func  tbltype  anbr indentme roworder newrows #> * <chr> <chr> <chr> <chr> <chr>    <chr> <chr>   <dbl>    <dbl>    <int>   <dbl> #> 1 N     0     0     0     N        univ… type1       1        1        1       0 #> 2 Mean  -     -     -     VALUE    univ… type1       1        2        2       0 #> # ℹ 1 more variable: newpage <dbl>   # N and Mean for a rowvar by colvar and a by variable table_metadata <- tibble::tribble(   ~anbr,  ~func,    ~df, ~rowvar, ~tbltype,  ~colvar, ~statlist,  ~by,   \"1\", \"univar\", \"cdisc_adae\",   \"AGE\",  \"type1\", \"TRTA\",   statlist(c(\"N\",\"MEAN\")), \"SEX\" )  generate_results(table_metadata, column_metadata = column_metadata,                  tbltype = \"type1\") #> # A tibble: 2 × 13 #>   label col1  col2  col3  row_type func   tbltype by     anbr indentme roworder #> * <chr> <chr> <chr> <chr> <chr>    <chr>  <chr>   <chr> <dbl>    <dbl>    <int> #> 1 N     0     0     0     N        univar type1   SEX       1        1        1 #> 2 Mean  -     -     -     VALUE    univar type1   SEX       1        2        2 #> # ℹ 2 more variables: newrows <dbl>, newpage <dbl>"},{"path":"/news/index.html","id":"tidytlg-014","dir":"Changelog","previous_headings":"","what":"tidytlg 0.1.4","title":"tidytlg 0.1.4","text":"CRAN release: 2023-10-18 Update getFileName.R use logrx package timber package","code":""},{"path":"/news/index.html","id":"tidytlg-013","dir":"Changelog","previous_headings":"","what":"tidytlg 0.1.3","title":"tidytlg 0.1.3","text":"CRAN release: 2023-08-31 Updated tidytlg-package overall documentation resolve CRAN issue. (#21)","code":""},{"path":"/news/index.html","id":"tidytlg-012","dir":"Changelog","previous_headings":"","what":"tidytlg 0.1.2","title":"tidytlg 0.1.2","text":"CRAN release: 2023-06-23 Fixed bug use ‘wcol’ argument gentlg() error formatting variables present (#14) gentlg() now supports multiple plots passed ‘plotnames’ argument (#13) Fixed check_args() function remove tests strict (#12)","code":""},{"path":"/news/index.html","id":"tidytlg-011","dir":"Changelog","previous_headings":"","what":"tidytlg 0.1.1","title":"tidytlg 0.1.1","text":"CRAN release: 2023-05-09 Updated tidytlg.Rmd vignette write temp directory instead user home directory","code":""},{"path":"/news/index.html","id":"tidytlg-010","dir":"Changelog","previous_headings":"","what":"tidytlg 0.1.0","title":"tidytlg 0.1.0","text":"CRAN release: 2023-05-05 Added NEWS.md file track changes package. Initial release tidytlg","code":""}]
